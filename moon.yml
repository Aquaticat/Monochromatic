$schema: 'https://moonrepo.dev/schemas/project.json'

tasks:
  # Template for lint/format tasks
  _lintFormatBase:
    inputs:
    - '@group(allSources)'
    - '@group(configs)'
  pnpmVersionCheck:
    command: 'pnpm version'
  pnpmInstall:
    command: 'bun packages/module/es/src/moon.pnpmInstall.ts'

  test:
    deps:
    - testUnit
    - testBrowser
    inputs:
    - '@group(allTests)'
    - '@group(allDists)'

  testWatch:
    deps:
    - testUnitWatch
    - testBrowserWatch
    local: true
    inputs:
    - '@group(allTests)'
    - '@group(allDists)'

  testUnit:
    command: 'vitest run --config vitest.unit.config.ts'
    inputs:
    - '@group(allUnitTests)'
    - '@group(allDists)'

  testUnitWatch:
    command: 'vitest watch --config vitest.unit.config.ts'
    local: true
    inputs:
    - '@group(allUnitTests)'
    - '@group(allDists)'

  testBrowser:
    command: 'vitest run --config vitest.browser.config.ts'
    inputs:
    - '@group(allUnitTests)'
    - '@group(allDists)'

  testBrowserWatch:
    command: 'vitest watch --config vitest.browser.config.ts'
    local: true
    inputs:
    - '@group(allUnitTests)'
    - '@group(allDists)'

  preparePlaywright:
    command: 'bun packages/module/es/src/moon.preparePlaywright.ts'

  prepareVale:
    deps:
    - installValeDependencyGlobally
    - installVale
    - valeSync
    - createValeNoopStyle
    options:
      runDepsInParallel: false
  installVale:
    # command: 'bun packages/module/es/src/moon.installVale.ts'
    command: 'moon.installVale'
    toolchain: node
  installValeDependencyGlobally:
    command: 'bun install -g mdx2vast'
  valeSync:
    command: 'packages/module/es/src/moon.valeSync.ts'
    toolchain: bun
  createValeNoopStyle:
    command: 'mkdir -p .vale/noop'

  prepare:
    deps:
    - pnpmInstall
    - preparePlaywright
    - prepareVale
    options:
      outputStyle: buffer-only-failure

  build:
    deps:
    - '#package:js'
    - '#package:types'
    inputs:
    - '@group(allSources)'
    options:
      outputStyle: buffer-only-failure

  buildWatch:
    deps:
    - '#package:jsWatch'
    - '#package:typesWatch'
    local: true
    inputs:
    - '@group(allSources)'

  buildAndTest:
    deps:
    - build
    - test
    inputs:
    - '@group(allSources)'
    options:
      runDepsInParallel: false

  buildAndTestWatch:
    local: true
    deps:
    - '#package:jsWatch'
    - '#package:typesWatch'
    - testUnitWatch
    - testBrowserWatch
    inputs:
    - '@group(allSources)'

  # Linting tasks
  lint:
    deps:
    - lintEslint
    - lintStylelint
    - lintDprint
    - lintOxlint

  lintEslint:
    extends: '_lintFormatBase'
    command: 'eslint --cache'

  lintStylelint:
    extends: '_lintFormatBase'
    command: 'stylelint --ignore-path .gitignore "**/*.{css,astro,html}"'
  lintDprint:
    extends: '_lintFormatBase'
    command: 'dprint check --list-different'

  lintOxlint:
    extends: '_lintFormatBase'
    command: 'oxlint'

  # Formatting tasks organized for maximum parallelization
  format:
    deps:
    - formatAllFileTypes
    - formatLanguageSpecific
    options:
      runDepsInParallel: false

  # First pass: dprint formats all file types (ts, astro, css, html, yaml)
  formatAllFileTypes:
    deps:
    - formatDprint

  # Second pass: Language-specific formatters run in parallel
  formatLanguageSpecific:
    deps:
    - formatTypeScript  # TS formatters (sequential)
    - formatStylelint   # CSS formatter (parallel with TS)
    # Default is parallel, so formatTypeScript and formatStylelint run simultaneously

  # TypeScript formatters must run sequentially (both process .ts files)
  formatTypeScript:
    deps:
    - formatOxlint
    - formatEslint
    options:
      runDepsInParallel: false

  formatEslint:
    extends: '_lintFormatBase'
    command: 'eslint --cache --fix'

  formatStylelint:
    extends: '_lintFormatBase'
    command: 'stylelint --ignore-path .gitignore --fix "**/*.{css,astro,html}"'

  formatDprint:
    extends: '_lintFormatBase'
    command: 'dprint fmt'

  formatOxlint:
    extends: '_lintFormatBase'
    command: 'oxlint --fix'

tags:
- noTypescript
- 'noJs'
