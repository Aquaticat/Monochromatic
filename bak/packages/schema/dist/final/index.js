var __create=Object.create;var __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __getProtoOf=Object.getPrototypeOf,__hasOwnProp=Object.prototype.hasOwnProperty;var __name=(target,value)=>__defProp(target,"name",{value,configurable:!0});var __commonJS=(cb,mod)=>function(){return mod||(0,cb[__getOwnPropNames(cb)[0]])((mod={exports:{}}).exports,mod),mod.exports};var __copyProps=(to,from,except,desc)=>{if(from&&typeof from=="object"||typeof from=="function")for(let key of __getOwnPropNames(from))!__hasOwnProp.call(to,key)&&key!==except&&__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to};var __toESM=(mod,isNodeMode,target)=>(target=mod!=null?__create(__getProtoOf(mod)):{},__copyProps(isNodeMode||!mod||!mod.__esModule?__defProp(target,"default",{value:mod,enumerable:!0}):target,mod));var require_quarterOfYear=__commonJS({"../../../.yarn/cache/dayjs-npm-1.11.11-3555b1f819-0131d10516.zip/node_modules/dayjs/plugin/quarterOfYear.js"(exports,module){(function(t,n){typeof exports=="object"&&typeof module<"u"?module.exports=n():typeof define=="function"&&define.amd?define(n):(t=typeof globalThis<"u"?globalThis:t||self).dayjs_plugin_quarterOfYear=n()})(exports,function(){"use strict";var t="month",n="quarter";return function(e,i){var r=i.prototype;r.quarter=function(t2){return this.$utils().u(t2)?Math.ceil((this.month()+1)/3):this.month(this.month()%3+3*(t2-1))};var s=r.add;r.add=function(e2,i2){return e2=Number(e2),this.$utils().p(i2)===n?this.add(3*e2,t):s.bind(this)(e2,i2)};var u=r.startOf;r.startOf=function(e2,i2){var r2=this.$utils(),s2=!!r2.u(i2)||i2;if(r2.p(e2)===n){var o=this.quarter()-1;return s2?this.month(3*o).startOf(t).startOf("day"):this.month(3*o+2).endOf(t).endOf("day")}return u.bind(this)(e2,i2)}}})}});var require_dayjs_min=__commonJS({"../../../.yarn/cache/dayjs-npm-1.11.11-3555b1f819-0131d10516.zip/node_modules/dayjs/dayjs.min.js"(exports,module){(function(t,e){typeof exports=="object"&&typeof module<"u"?module.exports=e():typeof define=="function"&&define.amd?define(e):(t=typeof globalThis<"u"?globalThis:t||self).dayjs=e()})(exports,function(){"use strict";var t=1e3,e=6e4,n=36e5,r="millisecond",i="second",s="minute",u="hour",a="day",o="week",c="month",f="quarter",h="year",d="date",l="Invalid Date",$=/^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/,y=/\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,M={name:"en",weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_"),ordinal:function(t2){var e2=["th","st","nd","rd"],n2=t2%100;return"["+t2+(e2[(n2-20)%10]||e2[n2]||e2[0])+"]"}},m=__name(function(t2,e2,n2){var r2=String(t2);return!r2||r2.length>=e2?t2:""+Array(e2+1-r2.length).join(n2)+t2},"m"),v={s:m,z:function(t2){var e2=-t2.utcOffset(),n2=Math.abs(e2),r2=Math.floor(n2/60),i2=n2%60;return(e2<=0?"+":"-")+m(r2,2,"0")+":"+m(i2,2,"0")},m:__name(function t2(e2,n2){if(e2.date()<n2.date())return-t2(n2,e2);var r2=12*(n2.year()-e2.year())+(n2.month()-e2.month()),i2=e2.clone().add(r2,c),s2=n2-i2<0,u2=e2.clone().add(r2+(s2?-1:1),c);return+(-(r2+(n2-i2)/(s2?i2-u2:u2-i2))||0)},"t"),a:function(t2){return t2<0?Math.ceil(t2)||0:Math.floor(t2)},p:function(t2){return{M:c,y:h,w:o,d:a,D:d,h:u,m:s,s:i,ms:r,Q:f}[t2]||String(t2||"").toLowerCase().replace(/s$/,"")},u:function(t2){return t2===void 0}},g="en",D={};D[g]=M;var p="$isDayjsObject",S=__name(function(t2){return t2 instanceof _||!(!t2||!t2[p])},"S"),w=__name(function t2(e2,n2,r2){var i2;if(!e2)return g;if(typeof e2=="string"){var s2=e2.toLowerCase();D[s2]&&(i2=s2),n2&&(D[s2]=n2,i2=s2);var u2=e2.split("-");if(!i2&&u2.length>1)return t2(u2[0])}else{var a2=e2.name;D[a2]=e2,i2=a2}return!r2&&i2&&(g=i2),i2||!r2&&g},"t"),O=__name(function(t2,e2){if(S(t2))return t2.clone();var n2=typeof e2=="object"?e2:{};return n2.date=t2,n2.args=arguments,new _(n2)},"O"),b=v;b.l=w,b.i=S,b.w=function(t2,e2){return O(t2,{locale:e2.$L,utc:e2.$u,x:e2.$x,$offset:e2.$offset})};var _=function(){function M2(t2){this.$L=w(t2.locale,null,!0),this.parse(t2),this.$x=this.$x||t2.x||{},this[p]=!0}__name(M2,"M");var m2=M2.prototype;return m2.parse=function(t2){this.$d=function(t3){var e2=t3.date,n2=t3.utc;if(e2===null)return new Date(NaN);if(b.u(e2))return new Date;if(e2 instanceof Date)return new Date(e2);if(typeof e2=="string"&&!/Z$/i.test(e2)){var r2=e2.match($);if(r2){var i2=r2[2]-1||0,s2=(r2[7]||"0").substring(0,3);return n2?new Date(Date.UTC(r2[1],i2,r2[3]||1,r2[4]||0,r2[5]||0,r2[6]||0,s2)):new Date(r2[1],i2,r2[3]||1,r2[4]||0,r2[5]||0,r2[6]||0,s2)}}return new Date(e2)}(t2),this.init()},m2.init=function(){var t2=this.$d;this.$y=t2.getFullYear(),this.$M=t2.getMonth(),this.$D=t2.getDate(),this.$W=t2.getDay(),this.$H=t2.getHours(),this.$m=t2.getMinutes(),this.$s=t2.getSeconds(),this.$ms=t2.getMilliseconds()},m2.$utils=function(){return b},m2.isValid=function(){return this.$d.toString()!==l},m2.isSame=function(t2,e2){var n2=O(t2);return this.startOf(e2)<=n2&&n2<=this.endOf(e2)},m2.isAfter=function(t2,e2){return O(t2)<this.startOf(e2)},m2.isBefore=function(t2,e2){return this.endOf(e2)<O(t2)},m2.$g=function(t2,e2,n2){return b.u(t2)?this[e2]:this.set(n2,t2)},m2.unix=function(){return Math.floor(this.valueOf()/1e3)},m2.valueOf=function(){return this.$d.getTime()},m2.startOf=function(t2,e2){var n2=this,r2=!!b.u(e2)||e2,f2=b.p(t2),l2=__name(function(t3,e3){var i2=b.w(n2.$u?Date.UTC(n2.$y,e3,t3):new Date(n2.$y,e3,t3),n2);return r2?i2:i2.endOf(a)},"l"),$2=__name(function(t3,e3){return b.w(n2.toDate()[t3].apply(n2.toDate("s"),(r2?[0,0,0,0]:[23,59,59,999]).slice(e3)),n2)},"$"),y2=this.$W,M3=this.$M,m3=this.$D,v2="set"+(this.$u?"UTC":"");switch(f2){case h:return r2?l2(1,0):l2(31,11);case c:return r2?l2(1,M3):l2(0,M3+1);case o:var g2=this.$locale().weekStart||0,D2=(y2<g2?y2+7:y2)-g2;return l2(r2?m3-D2:m3+(6-D2),M3);case a:case d:return $2(v2+"Hours",0);case u:return $2(v2+"Minutes",1);case s:return $2(v2+"Seconds",2);case i:return $2(v2+"Milliseconds",3);default:return this.clone()}},m2.endOf=function(t2){return this.startOf(t2,!1)},m2.$set=function(t2,e2){var n2,o2=b.p(t2),f2="set"+(this.$u?"UTC":""),l2=(n2={},n2[a]=f2+"Date",n2[d]=f2+"Date",n2[c]=f2+"Month",n2[h]=f2+"FullYear",n2[u]=f2+"Hours",n2[s]=f2+"Minutes",n2[i]=f2+"Seconds",n2[r]=f2+"Milliseconds",n2)[o2],$2=o2===a?this.$D+(e2-this.$W):e2;if(o2===c||o2===h){var y2=this.clone().set(d,1);y2.$d[l2]($2),y2.init(),this.$d=y2.set(d,Math.min(this.$D,y2.daysInMonth())).$d}else l2&&this.$d[l2]($2);return this.init(),this},m2.set=function(t2,e2){return this.clone().$set(t2,e2)},m2.get=function(t2){return this[b.p(t2)]()},m2.add=function(r2,f2){var d2,l2=this;r2=Number(r2);var $2=b.p(f2),y2=__name(function(t2){var e2=O(l2);return b.w(e2.date(e2.date()+Math.round(t2*r2)),l2)},"y");if($2===c)return this.set(c,this.$M+r2);if($2===h)return this.set(h,this.$y+r2);if($2===a)return y2(1);if($2===o)return y2(7);var M3=(d2={},d2[s]=e,d2[u]=n,d2[i]=t,d2)[$2]||1,m3=this.$d.getTime()+r2*M3;return b.w(m3,this)},m2.subtract=function(t2,e2){return this.add(-1*t2,e2)},m2.format=function(t2){var e2=this,n2=this.$locale();if(!this.isValid())return n2.invalidDate||l;var r2=t2||"YYYY-MM-DDTHH:mm:ssZ",i2=b.z(this),s2=this.$H,u2=this.$m,a2=this.$M,o2=n2.weekdays,c2=n2.months,f2=n2.meridiem,h2=__name(function(t3,n3,i3,s3){return t3&&(t3[n3]||t3(e2,r2))||i3[n3].slice(0,s3)},"h"),d2=__name(function(t3){return b.s(s2%12||12,t3,"0")},"d"),$2=f2||function(t3,e3,n3){var r3=t3<12?"AM":"PM";return n3?r3.toLowerCase():r3};return r2.replace(y,function(t3,r3){return r3||function(t4){switch(t4){case"YY":return String(e2.$y).slice(-2);case"YYYY":return b.s(e2.$y,4,"0");case"M":return a2+1;case"MM":return b.s(a2+1,2,"0");case"MMM":return h2(n2.monthsShort,a2,c2,3);case"MMMM":return h2(c2,a2);case"D":return e2.$D;case"DD":return b.s(e2.$D,2,"0");case"d":return String(e2.$W);case"dd":return h2(n2.weekdaysMin,e2.$W,o2,2);case"ddd":return h2(n2.weekdaysShort,e2.$W,o2,3);case"dddd":return o2[e2.$W];case"H":return String(s2);case"HH":return b.s(s2,2,"0");case"h":return d2(1);case"hh":return d2(2);case"a":return $2(s2,u2,!0);case"A":return $2(s2,u2,!1);case"m":return String(u2);case"mm":return b.s(u2,2,"0");case"s":return String(e2.$s);case"ss":return b.s(e2.$s,2,"0");case"SSS":return b.s(e2.$ms,3,"0");case"Z":return i2}return null}(t3)||i2.replace(":","")})},m2.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},m2.diff=function(r2,d2,l2){var $2,y2=this,M3=b.p(d2),m3=O(r2),v2=(m3.utcOffset()-this.utcOffset())*e,g2=this-m3,D2=__name(function(){return b.m(y2,m3)},"D");switch(M3){case h:$2=D2()/12;break;case c:$2=D2();break;case f:$2=D2()/3;break;case o:$2=(g2-v2)/6048e5;break;case a:$2=(g2-v2)/864e5;break;case u:$2=g2/n;break;case s:$2=g2/e;break;case i:$2=g2/t;break;default:$2=g2}return l2?$2:b.a($2)},m2.daysInMonth=function(){return this.endOf(c).$D},m2.$locale=function(){return D[this.$L]},m2.locale=function(t2,e2){if(!t2)return this.$L;var n2=this.clone(),r2=w(t2,e2,!0);return r2&&(n2.$L=r2),n2},m2.clone=function(){return b.w(this.$d,this)},m2.toDate=function(){return new Date(this.valueOf())},m2.toJSON=function(){return this.isValid()?this.toISOString():null},m2.toISOString=function(){return this.$d.toISOString()},m2.toString=function(){return this.$d.toUTCString()},M2}(),k=_.prototype;return O.prototype=k,[["$ms",r],["$s",i],["$m",s],["$H",u],["$W",a],["$M",c],["$y",h],["$D",d]].forEach(function(t2){k[t2[1]]=function(e2){return this.$g(e2,t2[0],t2[1])}}),O.extend=function(t2,e2){return t2.$i||(t2(e2,_,O),t2.$i=!0),O},O.locale=w,O.isDayjs=S,O.unix=function(t2){return O(1e3*t2)},O.en=D[g],O.Ls=D,O.p={},O})}});import{fs,path}from"@monochromatic-dev/module-fs-path";var __defProp2=Object.defineProperty,__name2=__name((target,value)=>__defProp2(target,"name",{value,configurable:!0}),"__name"),isShortLang=__name2(function(str){return str.length===2&&/^[a-z]+$/.test(str)},"isShortLang"),isFullLang=__name2(function(str){return str.length===5&&/^[a-z]{2}-[A-Z]{2}$/.test(str)},"isFullLang");function isLang(str){return isShortLang(str)||isFullLang(str)}__name(isLang,"isLang");__name2(isLang,"isLang");var import_quarterOfYear=__toESM(require_quarterOfYear(),1),import_dayjs2=__toESM(require_dayjs_min(),1);var Meridiem;(function(Meridiem2){Meridiem2[Meridiem2.AM=0]="AM",Meridiem2[Meridiem2.PM=1]="PM"})(Meridiem||(Meridiem={}));var Weekday;(function(Weekday2){Weekday2[Weekday2.SUNDAY=0]="SUNDAY",Weekday2[Weekday2.MONDAY=1]="MONDAY",Weekday2[Weekday2.TUESDAY=2]="TUESDAY",Weekday2[Weekday2.WEDNESDAY=3]="WEDNESDAY",Weekday2[Weekday2.THURSDAY=4]="THURSDAY",Weekday2[Weekday2.FRIDAY=5]="FRIDAY",Weekday2[Weekday2.SATURDAY=6]="SATURDAY"})(Weekday||(Weekday={}));var Month;(function(Month2){Month2[Month2.JANUARY=1]="JANUARY",Month2[Month2.FEBRUARY=2]="FEBRUARY",Month2[Month2.MARCH=3]="MARCH",Month2[Month2.APRIL=4]="APRIL",Month2[Month2.MAY=5]="MAY",Month2[Month2.JUNE=6]="JUNE",Month2[Month2.JULY=7]="JULY",Month2[Month2.AUGUST=8]="AUGUST",Month2[Month2.SEPTEMBER=9]="SEPTEMBER",Month2[Month2.OCTOBER=10]="OCTOBER",Month2[Month2.NOVEMBER=11]="NOVEMBER",Month2[Month2.DECEMBER=12]="DECEMBER"})(Month||(Month={}));function implyTheNextDay(component,targetDayJs){targetDayJs=targetDayJs.add(1,"day"),implySimilarDate(component,targetDayJs),implySimilarTime(component,targetDayJs)}__name(implyTheNextDay,"implyTheNextDay");function assignSimilarDate(component,targetDayJs){component.assign("day",targetDayJs.date()),component.assign("month",targetDayJs.month()+1),component.assign("year",targetDayJs.year())}__name(assignSimilarDate,"assignSimilarDate");function assignSimilarTime(component,targetDayJs){component.assign("hour",targetDayJs.hour()),component.assign("minute",targetDayJs.minute()),component.assign("second",targetDayJs.second()),component.assign("millisecond",targetDayJs.millisecond()),component.get("hour")<12?component.assign("meridiem",Meridiem.AM):component.assign("meridiem",Meridiem.PM)}__name(assignSimilarTime,"assignSimilarTime");function implySimilarDate(component,targetDayJs){component.imply("day",targetDayJs.date()),component.imply("month",targetDayJs.month()+1),component.imply("year",targetDayJs.year())}__name(implySimilarDate,"implySimilarDate");function implySimilarTime(component,targetDayJs){component.imply("hour",targetDayJs.hour()),component.imply("minute",targetDayJs.minute()),component.imply("second",targetDayJs.second()),component.imply("millisecond",targetDayJs.millisecond())}__name(implySimilarTime,"implySimilarTime");var import_dayjs=__toESM(require_dayjs_min(),1);var TIMEZONE_ABBR_MAP={ACDT:630,ACST:570,ADT:-180,AEDT:660,AEST:600,AFT:270,AKDT:-480,AKST:-540,ALMT:360,AMST:-180,AMT:-240,ANAST:720,ANAT:720,AQTT:300,ART:-180,AST:-240,AWDT:540,AWST:480,AZOST:0,AZOT:-60,AZST:300,AZT:240,BNT:480,BOT:-240,BRST:-120,BRT:-180,BST:60,BTT:360,CAST:480,CAT:120,CCT:390,CDT:-300,CEST:120,CET:{timezoneOffsetDuringDst:2*60,timezoneOffsetNonDst:60,dstStart:year=>getLastWeekdayOfMonth(year,Month.MARCH,Weekday.SUNDAY,2),dstEnd:year=>getLastWeekdayOfMonth(year,Month.OCTOBER,Weekday.SUNDAY,3)},CHADT:825,CHAST:765,CKT:-600,CLST:-180,CLT:-240,COT:-300,CST:-360,CT:{timezoneOffsetDuringDst:-5*60,timezoneOffsetNonDst:-6*60,dstStart:year=>getNthWeekdayOfMonth(year,Month.MARCH,Weekday.SUNDAY,2,2),dstEnd:year=>getNthWeekdayOfMonth(year,Month.NOVEMBER,Weekday.SUNDAY,1,2)},CVT:-60,CXT:420,ChST:600,DAVT:420,EASST:-300,EAST:-360,EAT:180,ECT:-300,EDT:-240,EEST:180,EET:120,EGST:0,EGT:-60,EST:-300,ET:{timezoneOffsetDuringDst:-4*60,timezoneOffsetNonDst:-5*60,dstStart:year=>getNthWeekdayOfMonth(year,Month.MARCH,Weekday.SUNDAY,2,2),dstEnd:year=>getNthWeekdayOfMonth(year,Month.NOVEMBER,Weekday.SUNDAY,1,2)},FJST:780,FJT:720,FKST:-180,FKT:-240,FNT:-120,GALT:-360,GAMT:-540,GET:240,GFT:-180,GILT:720,GMT:0,GST:240,GYT:-240,HAA:-180,HAC:-300,HADT:-540,HAE:-240,HAP:-420,HAR:-360,HAST:-600,HAT:-90,HAY:-480,HKT:480,HLV:-210,HNA:-240,HNC:-360,HNE:-300,HNP:-480,HNR:-420,HNT:-150,HNY:-540,HOVT:420,ICT:420,IDT:180,IOT:360,IRDT:270,IRKST:540,IRKT:540,IRST:210,IST:330,JST:540,KGT:360,KRAST:480,KRAT:480,KST:540,KUYT:240,LHDT:660,LHST:630,LINT:840,MAGST:720,MAGT:720,MART:-510,MAWT:300,MDT:-360,MESZ:120,MEZ:60,MHT:720,MMT:390,MSD:240,MSK:180,MST:-420,MT:{timezoneOffsetDuringDst:-6*60,timezoneOffsetNonDst:-7*60,dstStart:year=>getNthWeekdayOfMonth(year,Month.MARCH,Weekday.SUNDAY,2,2),dstEnd:year=>getNthWeekdayOfMonth(year,Month.NOVEMBER,Weekday.SUNDAY,1,2)},MUT:240,MVT:300,MYT:480,NCT:660,NDT:-90,NFT:690,NOVST:420,NOVT:360,NPT:345,NST:-150,NUT:-660,NZDT:780,NZST:720,OMSST:420,OMST:420,PDT:-420,PET:-300,PETST:720,PETT:720,PGT:600,PHOT:780,PHT:480,PKT:300,PMDT:-120,PMST:-180,PONT:660,PST:-480,PT:{timezoneOffsetDuringDst:-7*60,timezoneOffsetNonDst:-8*60,dstStart:year=>getNthWeekdayOfMonth(year,Month.MARCH,Weekday.SUNDAY,2,2),dstEnd:year=>getNthWeekdayOfMonth(year,Month.NOVEMBER,Weekday.SUNDAY,1,2)},PWT:540,PYST:-180,PYT:-240,RET:240,SAMT:240,SAST:120,SBT:660,SCT:240,SGT:480,SRT:-180,SST:-660,TAHT:-600,TFT:300,TJT:300,TKT:780,TLT:540,TMT:300,TVT:720,ULAT:480,UTC:0,UYST:-120,UYT:-180,UZT:300,VET:-210,VLAST:660,VLAT:660,VUT:660,WAST:120,WAT:60,WEST:60,WESZ:60,WET:0,WEZ:0,WFT:720,WGST:-120,WGT:-180,WIB:420,WIT:540,WITA:480,WST:780,WT:0,YAKST:600,YAKT:600,YAPT:600,YEKST:360,YEKT:360};function getNthWeekdayOfMonth(year,month,weekday,n,hour=0){let dayOfMonth=0,i=0;for(;i<n;)dayOfMonth++,new Date(year,month-1,dayOfMonth).getDay()===weekday&&i++;return new Date(year,month-1,dayOfMonth,hour)}__name(getNthWeekdayOfMonth,"getNthWeekdayOfMonth");function getLastWeekdayOfMonth(year,month,weekday,hour=0){let oneIndexedWeekday=weekday===0?7:weekday,date=new Date(year,month-1+1,1,12),firstWeekdayNextMonth=date.getDay()===0?7:date.getDay(),dayDiff;return firstWeekdayNextMonth===oneIndexedWeekday?dayDiff=7:firstWeekdayNextMonth<oneIndexedWeekday?dayDiff=7+firstWeekdayNextMonth-oneIndexedWeekday:dayDiff=firstWeekdayNextMonth-oneIndexedWeekday,date.setDate(date.getDate()-dayDiff),new Date(year,month-1,date.getDate(),hour)}__name(getLastWeekdayOfMonth,"getLastWeekdayOfMonth");function toTimezoneOffset(timezoneInput,date,timezoneOverrides={}){if(timezoneInput==null)return null;if(typeof timezoneInput=="number")return timezoneInput;let matchedTimezone=timezoneOverrides[timezoneInput]??TIMEZONE_ABBR_MAP[timezoneInput];return matchedTimezone==null?null:typeof matchedTimezone=="number"?matchedTimezone:date==null?null:(0,import_dayjs.default)(date).isAfter(matchedTimezone.dstStart(date.getFullYear()))&&!(0,import_dayjs.default)(date).isAfter(matchedTimezone.dstEnd(date.getFullYear()))?matchedTimezone.timezoneOffsetDuringDst:matchedTimezone.timezoneOffsetNonDst}__name(toTimezoneOffset,"toTimezoneOffset");import_dayjs2.default.extend(import_quarterOfYear.default);var ReferenceWithTimezone=class{static{__name(this,"ReferenceWithTimezone")}constructor(input){input=input??new Date,input instanceof Date?this.instant=input:(this.instant=input.instant??new Date,this.timezoneOffset=toTimezoneOffset(input.timezone,this.instant))}getDateWithAdjustedTimezone(){return new Date(this.instant.getTime()+this.getSystemTimezoneAdjustmentMinute(this.instant)*6e4)}getSystemTimezoneAdjustmentMinute(date,overrideTimezoneOffset){(!date||date.getTime()<0)&&(date=new Date);let currentTimezoneOffset=-date.getTimezoneOffset(),targetTimezoneOffset=overrideTimezoneOffset??this.timezoneOffset??currentTimezoneOffset;return currentTimezoneOffset-targetTimezoneOffset}},ParsingComponents=class _ParsingComponents{static{__name(this,"ParsingComponents")}constructor(reference,knownComponents){if(this._tags=new Set,this.reference=reference,this.knownValues={},this.impliedValues={},knownComponents)for(let key in knownComponents)this.knownValues[key]=knownComponents[key];let refDayJs=(0,import_dayjs2.default)(reference.instant);this.imply("day",refDayJs.date()),this.imply("month",refDayJs.month()+1),this.imply("year",refDayJs.year()),this.imply("hour",12),this.imply("minute",0),this.imply("second",0),this.imply("millisecond",0)}get(component){return component in this.knownValues?this.knownValues[component]:component in this.impliedValues?this.impliedValues[component]:null}isCertain(component){return component in this.knownValues}getCertainComponents(){return Object.keys(this.knownValues)}imply(component,value){return component in this.knownValues?this:(this.impliedValues[component]=value,this)}assign(component,value){return this.knownValues[component]=value,delete this.impliedValues[component],this}delete(component){delete this.knownValues[component],delete this.impliedValues[component]}clone(){let component=new _ParsingComponents(this.reference);component.knownValues={},component.impliedValues={};for(let key in this.knownValues)component.knownValues[key]=this.knownValues[key];for(let key in this.impliedValues)component.impliedValues[key]=this.impliedValues[key];return component}isOnlyDate(){return!this.isCertain("hour")&&!this.isCertain("minute")&&!this.isCertain("second")}isOnlyTime(){return!this.isCertain("weekday")&&!this.isCertain("day")&&!this.isCertain("month")}isOnlyWeekdayComponent(){return this.isCertain("weekday")&&!this.isCertain("day")&&!this.isCertain("month")}isDateWithUnknownYear(){return this.isCertain("month")&&!this.isCertain("year")}isValidDate(){let date=this.dateWithoutTimezoneAdjustment();return!(date.getFullYear()!==this.get("year")||date.getMonth()!==this.get("month")-1||date.getDate()!==this.get("day")||this.get("hour")!=null&&date.getHours()!=this.get("hour")||this.get("minute")!=null&&date.getMinutes()!=this.get("minute"))}toString(){return`[ParsingComponents {
            tags: ${JSON.stringify(Array.from(this._tags).sort())}, 
            knownValues: ${JSON.stringify(this.knownValues)}, 
            impliedValues: ${JSON.stringify(this.impliedValues)}}, 
            reference: ${JSON.stringify(this.reference)}]`}dayjs(){return(0,import_dayjs2.default)(this.date())}date(){let date=this.dateWithoutTimezoneAdjustment(),timezoneAdjustment=this.reference.getSystemTimezoneAdjustmentMinute(date,this.get("timezoneOffset"));return new Date(date.getTime()+timezoneAdjustment*6e4)}addTag(tag){return this._tags.add(tag),this}addTags(tags){for(let tag of tags)this._tags.add(tag);return this}tags(){return new Set(this._tags)}dateWithoutTimezoneAdjustment(){let date=new Date(this.get("year"),this.get("month")-1,this.get("day"),this.get("hour"),this.get("minute"),this.get("second"),this.get("millisecond"));return date.setFullYear(this.get("year")),date}static createRelativeFromReference(reference,fragments){let date=(0,import_dayjs2.default)(reference.instant);for(let key in fragments)date=date.add(fragments[key],key);let components=new _ParsingComponents(reference);return fragments.hour||fragments.minute||fragments.second?(assignSimilarTime(components,date),assignSimilarDate(components,date),reference.timezoneOffset!==null&&components.assign("timezoneOffset",-reference.instant.getTimezoneOffset())):(implySimilarTime(components,date),reference.timezoneOffset!==null&&components.imply("timezoneOffset",-reference.instant.getTimezoneOffset()),fragments.d?(components.assign("day",date.date()),components.assign("month",date.month()+1),components.assign("year",date.year())):(fragments.week&&components.imply("weekday",date.day()),components.imply("day",date.date()),fragments.month?(components.assign("month",date.month()+1),components.assign("year",date.year())):(components.imply("month",date.month()+1),fragments.year?components.assign("year",date.year()):components.imply("year",date.year())))),components}},ParsingResult=class _ParsingResult{static{__name(this,"ParsingResult")}constructor(reference,index,text,start,end){this.reference=reference,this.refDate=reference.instant,this.index=index,this.text=text,this.start=start||new ParsingComponents(reference),this.end=end}clone(){let result=new _ParsingResult(this.reference,this.index,this.text);return result.start=this.start?this.start.clone():null,result.end=this.end?this.end.clone():null,result}date(){return this.start.date()}tags(){let combinedTags=new Set(this.start.tags());if(this.end)for(let tag of this.end.tags())combinedTags.add(tag);return combinedTags}toString(){let tags=Array.from(this.tags()).sort();return`[ParsingResult {index: ${this.index}, text: '${this.text}', tags: ${JSON.stringify(tags)} ...}]`}};function repeatedTimeunitPattern(prefix,singleTimeunitPattern,connectorPattern="\\s{0,5},?\\s{0,5}"){let singleTimeunitPatternNoCapture=singleTimeunitPattern.replace(/\((?!\?)/g,"(?:");return`${prefix}${singleTimeunitPatternNoCapture}(?:${connectorPattern}${singleTimeunitPatternNoCapture}){0,10}`}__name(repeatedTimeunitPattern,"repeatedTimeunitPattern");function extractTerms(dictionary){let keys;return dictionary instanceof Array?keys=[...dictionary]:dictionary instanceof Map?keys=Array.from(dictionary.keys()):keys=Object.keys(dictionary),keys}__name(extractTerms,"extractTerms");function matchAnyPattern(dictionary){return`(?:${extractTerms(dictionary).sort((a,b)=>b.length-a.length).join("|").replace(/\./g,"\\.")})`}__name(matchAnyPattern,"matchAnyPattern");var import_dayjs4=__toESM(require_dayjs_min(),1);function findMostLikelyADYear(yearNumber){return yearNumber<100&&(yearNumber>50?yearNumber=yearNumber+1900:yearNumber=yearNumber+2e3),yearNumber}__name(findMostLikelyADYear,"findMostLikelyADYear");function findYearClosestToRef(refDate,day,month){let refMoment=(0,import_dayjs4.default)(refDate),dateMoment=refMoment;dateMoment=dateMoment.month(month-1),dateMoment=dateMoment.date(day),dateMoment=dateMoment.year(refMoment.year());let nextYear=dateMoment.add(1,"y"),lastYear=dateMoment.add(-1,"y");return Math.abs(nextYear.diff(refMoment))<Math.abs(dateMoment.diff(refMoment))?dateMoment=nextYear:Math.abs(lastYear.diff(refMoment))<Math.abs(dateMoment.diff(refMoment))&&(dateMoment=lastYear),dateMoment.year()}__name(findYearClosestToRef,"findYearClosestToRef");var WEEKDAY_DICTIONARY={sunday:0,sun:0,"sun.":0,monday:1,mon:1,"mon.":1,tuesday:2,tue:2,"tue.":2,wednesday:3,wed:3,"wed.":3,thursday:4,thurs:4,"thurs.":4,thur:4,"thur.":4,thu:4,"thu.":4,friday:5,fri:5,"fri.":5,saturday:6,sat:6,"sat.":6},FULL_MONTH_NAME_DICTIONARY={january:1,february:2,march:3,april:4,may:5,june:6,july:7,august:8,september:9,october:10,november:11,december:12},MONTH_DICTIONARY={...FULL_MONTH_NAME_DICTIONARY,jan:1,"jan.":1,feb:2,"feb.":2,mar:3,"mar.":3,apr:4,"apr.":4,jun:6,"jun.":6,jul:7,"jul.":7,aug:8,"aug.":8,sep:9,"sep.":9,sept:9,"sept.":9,oct:10,"oct.":10,nov:11,"nov.":11,dec:12,"dec.":12},INTEGER_WORD_DICTIONARY={one:1,two:2,three:3,four:4,five:5,six:6,seven:7,eight:8,nine:9,ten:10,eleven:11,twelve:12},ORDINAL_WORD_DICTIONARY={first:1,second:2,third:3,fourth:4,fifth:5,sixth:6,seventh:7,eighth:8,ninth:9,tenth:10,eleventh:11,twelfth:12,thirteenth:13,fourteenth:14,fifteenth:15,sixteenth:16,seventeenth:17,eighteenth:18,nineteenth:19,twentieth:20,"twenty first":21,"twenty-first":21,"twenty second":22,"twenty-second":22,"twenty third":23,"twenty-third":23,"twenty fourth":24,"twenty-fourth":24,"twenty fifth":25,"twenty-fifth":25,"twenty sixth":26,"twenty-sixth":26,"twenty seventh":27,"twenty-seventh":27,"twenty eighth":28,"twenty-eighth":28,"twenty ninth":29,"twenty-ninth":29,thirtieth:30,"thirty first":31,"thirty-first":31},TIME_UNIT_DICTIONARY_NO_ABBR={second:"second",seconds:"second",minute:"minute",minutes:"minute",hour:"hour",hours:"hour",day:"d",days:"d",week:"week",weeks:"week",month:"month",months:"month",quarter:"quarter",quarters:"quarter",year:"year",years:"year"},TIME_UNIT_DICTIONARY={s:"second",sec:"second",second:"second",seconds:"second",m:"minute",min:"minute",mins:"minute",minute:"minute",minutes:"minute",h:"hour",hr:"hour",hrs:"hour",hour:"hour",hours:"hour",d:"d",day:"d",days:"d",w:"w",week:"week",weeks:"week",mo:"month",mon:"month",mos:"month",month:"month",months:"month",qtr:"quarter",quarter:"quarter",quarters:"quarter",y:"year",yr:"year",year:"year",years:"year",...TIME_UNIT_DICTIONARY_NO_ABBR},NUMBER_PATTERN=`(?:${matchAnyPattern(INTEGER_WORD_DICTIONARY)}|[0-9]+|[0-9]+\\.[0-9]+|half(?:\\s{0,2}an?)?|an?\\b(?:\\s{0,2}few)?|few|several|the|a?\\s{0,2}couple\\s{0,2}(?:of)?)`;function parseNumberPattern(match){let num=match.toLowerCase();return INTEGER_WORD_DICTIONARY[num]!==void 0?INTEGER_WORD_DICTIONARY[num]:num==="a"||num==="an"||num=="the"?1:num.match(/few/)?3:num.match(/half/)?.5:num.match(/couple/)?2:num.match(/several/)?7:parseFloat(num)}__name(parseNumberPattern,"parseNumberPattern");var ORDINAL_NUMBER_PATTERN=`(?:${matchAnyPattern(ORDINAL_WORD_DICTIONARY)}|[0-9]{1,2}(?:st|nd|rd|th)?)`;function parseOrdinalNumberPattern(match){let num=match.toLowerCase();return ORDINAL_WORD_DICTIONARY[num]!==void 0?ORDINAL_WORD_DICTIONARY[num]:(num=num.replace(/(?:st|nd|rd|th)$/i,""),parseInt(num))}__name(parseOrdinalNumberPattern,"parseOrdinalNumberPattern");var YEAR_PATTERN="(?:[1-9][0-9]{0,3}\\s{0,2}(?:BE|AD|BC|BCE|CE)|[1-2][0-9]{3}|[5-9][0-9]|2[0-5])";function parseYear(match){if(/BE/i.test(match))return match=match.replace(/BE/i,""),parseInt(match)-543;if(/BCE?/i.test(match))return match=match.replace(/BCE?/i,""),-parseInt(match);if(/(AD|CE)/i.test(match))return match=match.replace(/(AD|CE)/i,""),parseInt(match);let rawYearNumber=parseInt(match);return findMostLikelyADYear(rawYearNumber)}__name(parseYear,"parseYear");var SINGLE_TIME_UNIT_PATTERN=`(${NUMBER_PATTERN})\\s{0,3}(${matchAnyPattern(TIME_UNIT_DICTIONARY)})`,SINGLE_TIME_UNIT_REGEX=new RegExp(SINGLE_TIME_UNIT_PATTERN,"i"),SINGLE_TIME_UNIT_NO_ABBR_PATTERN=`(${NUMBER_PATTERN})\\s{0,3}(${matchAnyPattern(TIME_UNIT_DICTIONARY_NO_ABBR)})`,TIME_UNIT_CONNECTOR_PATTERN="\\s{0,5},?(?:\\s*and)?\\s{0,5}",TIME_UNITS_PATTERN=repeatedTimeunitPattern("(?:(?:about|around)\\s{0,3})?",SINGLE_TIME_UNIT_PATTERN,TIME_UNIT_CONNECTOR_PATTERN),TIME_UNITS_NO_ABBR_PATTERN=repeatedTimeunitPattern("(?:(?:about|around)\\s{0,3})?",SINGLE_TIME_UNIT_NO_ABBR_PATTERN,TIME_UNIT_CONNECTOR_PATTERN);function parseTimeUnits(timeunitText){let fragments={},remainingText=timeunitText,match=SINGLE_TIME_UNIT_REGEX.exec(remainingText);for(;match;)collectDateTimeFragment(fragments,match),remainingText=remainingText.substring(match[0].length).trim(),match=SINGLE_TIME_UNIT_REGEX.exec(remainingText);return fragments}__name(parseTimeUnits,"parseTimeUnits");function collectDateTimeFragment(fragments,match){let num=parseNumberPattern(match[1]),unit=TIME_UNIT_DICTIONARY[match[2].toLowerCase()];fragments[unit]=num}__name(collectDateTimeFragment,"collectDateTimeFragment");var AbstractParserWithWordBoundaryChecking=class{static{__name(this,"AbstractParserWithWordBoundaryChecking")}constructor(){this.cachedInnerPattern=null,this.cachedPattern=null}innerPatternHasChange(context,currentInnerPattern){return this.innerPattern(context)!==currentInnerPattern}patternLeftBoundary(){return"(\\W|^)"}pattern(context){return this.cachedInnerPattern&&!this.innerPatternHasChange(context,this.cachedInnerPattern)?this.cachedPattern:(this.cachedInnerPattern=this.innerPattern(context),this.cachedPattern=new RegExp(`${this.patternLeftBoundary()}${this.cachedInnerPattern.source}`,this.cachedInnerPattern.flags),this.cachedPattern)}extract(context,match){let header=match[1]??"";match.index=match.index+header.length,match[0]=match[0].substring(header.length);for(let i=2;i<match.length;i++)match[i-1]=match[i];return this.innerExtract(context,match)}};var PATTERN_WITH_OPTIONAL_PREFIX=new RegExp(`(?:(?:within|in|for)\\s*)?(?:(?:about|around|roughly|approximately|just)\\s*(?:~\\s*)?)?(${TIME_UNITS_PATTERN})(?=\\W|$)`,"i"),PATTERN_WITH_PREFIX=new RegExp(`(?:within|in|for)\\s*(?:(?:about|around|roughly|approximately|just)\\s*(?:~\\s*)?)?(${TIME_UNITS_PATTERN})(?=\\W|$)`,"i"),PATTERN_WITH_PREFIX_STRICT=new RegExp(`(?:within|in|for)\\s*(?:(?:about|around|roughly|approximately|just)\\s*(?:~\\s*)?)?(${TIME_UNITS_NO_ABBR_PATTERN})(?=\\W|$)`,"i"),ENTimeUnitWithinFormatParser=class extends AbstractParserWithWordBoundaryChecking{static{__name(this,"ENTimeUnitWithinFormatParser")}constructor(strictMode){super(),this.strictMode=strictMode}innerPattern(context){return this.strictMode?PATTERN_WITH_PREFIX_STRICT:context.option.forwardDate?PATTERN_WITH_OPTIONAL_PREFIX:PATTERN_WITH_PREFIX}innerExtract(context,match){if(match[0].match(/^for\s*the\s*\w+/))return null;let timeUnits=parseTimeUnits(match[1]);return ParsingComponents.createRelativeFromReference(context.reference,timeUnits)}};var PATTERN=new RegExp(`(?:on\\s{0,3})?(${ORDINAL_NUMBER_PATTERN})(?:\\s{0,3}(?:to|\\-|\\–|until|through|till)?\\s{0,3}(${ORDINAL_NUMBER_PATTERN}))?(?:-|/|\\s{0,3}(?:of)?\\s{0,3})(${matchAnyPattern(MONTH_DICTIONARY)})(?:(?:-|/|,?\\s{0,3})(${YEAR_PATTERN}(?![^\\s]\\d)))?(?=\\W|$)`,"i"),DATE_GROUP=1,DATE_TO_GROUP=2,MONTH_NAME_GROUP=3,YEAR_GROUP=4,ENMonthNameLittleEndianParser=class extends AbstractParserWithWordBoundaryChecking{static{__name(this,"ENMonthNameLittleEndianParser")}innerPattern(){return PATTERN}innerExtract(context,match){let result=context.createParsingResult(match.index,match[0]),month=MONTH_DICTIONARY[match[MONTH_NAME_GROUP].toLowerCase()],day=parseOrdinalNumberPattern(match[DATE_GROUP]);if(day>31)return match.index=match.index+match[DATE_GROUP].length,null;if(result.start.assign("month",month),result.start.assign("day",day),match[YEAR_GROUP]){let yearNumber=parseYear(match[YEAR_GROUP]);result.start.assign("year",yearNumber)}else{let year=findYearClosestToRef(context.refDate,day,month);result.start.imply("year",year)}if(match[DATE_TO_GROUP]){let endDate=parseOrdinalNumberPattern(match[DATE_TO_GROUP]);result.end=result.start.clone(),result.end.assign("day",endDate)}return result}};var PATTERN2=new RegExp(`(${matchAnyPattern(MONTH_DICTIONARY)})(?:-|/|\\s*,?\\s*)(${ORDINAL_NUMBER_PATTERN})(?!\\s*(?:am|pm))\\s*(?:(?:to|\\-)\\s*(${ORDINAL_NUMBER_PATTERN})\\s*)?(?:(?:-|/|\\s*,\\s*|\\s+)(${YEAR_PATTERN}))?(?=\\W|$)(?!\\:\\d)`,"i"),MONTH_NAME_GROUP2=1,DATE_GROUP2=2,DATE_TO_GROUP2=3,YEAR_GROUP2=4,ENMonthNameMiddleEndianParser=class extends AbstractParserWithWordBoundaryChecking{static{__name(this,"ENMonthNameMiddleEndianParser")}constructor(shouldSkipYearLikeDate){super(),this.shouldSkipYearLikeDate=shouldSkipYearLikeDate}innerPattern(){return PATTERN2}innerExtract(context,match){let month=MONTH_DICTIONARY[match[MONTH_NAME_GROUP2].toLowerCase()],day=parseOrdinalNumberPattern(match[DATE_GROUP2]);if(day>31||this.shouldSkipYearLikeDate&&!match[DATE_TO_GROUP2]&&!match[YEAR_GROUP2]&&match[DATE_GROUP2].match(/^2[0-5]$/))return null;let components=context.createParsingComponents({day,month}).addTag("parser/ENMonthNameMiddleEndianParser");if(match[YEAR_GROUP2]){let year=parseYear(match[YEAR_GROUP2]);components.assign("year",year)}else{let year=findYearClosestToRef(context.refDate,day,month);components.imply("year",year)}if(!match[DATE_TO_GROUP2])return components;let endDate=parseOrdinalNumberPattern(match[DATE_TO_GROUP2]),result=context.createParsingResult(match.index,match[0]);return result.start=components,result.end=components.clone(),result.end.assign("day",endDate),result}};var PATTERN3=new RegExp(`((?:in)\\s*)?(${matchAnyPattern(MONTH_DICTIONARY)})\\s*(?:[,-]?\\s*(${YEAR_PATTERN})?)?(?=[^\\s\\w]|\\s+[^0-9]|\\s+$|$)`,"i"),PREFIX_GROUP=1,MONTH_NAME_GROUP3=2,YEAR_GROUP3=3,ENMonthNameParser=class extends AbstractParserWithWordBoundaryChecking{static{__name(this,"ENMonthNameParser")}innerPattern(){return PATTERN3}innerExtract(context,match){let monthName=match[MONTH_NAME_GROUP3].toLowerCase();if(match[0].length<=3&&!FULL_MONTH_NAME_DICTIONARY[monthName])return null;let result=context.createParsingResult(match.index+(match[PREFIX_GROUP]||"").length,match.index+match[0].length);result.start.imply("day",1),result.start.addTag("parser/ENMonthNameParser");let month=MONTH_DICTIONARY[monthName];if(result.start.assign("month",month),match[YEAR_GROUP3]){let year=parseYear(match[YEAR_GROUP3]);result.start.assign("year",year)}else{let year=findYearClosestToRef(context.refDate,1,month);result.start.imply("year",year)}return result}};var PATTERN4=new RegExp(`([0-9]{4})[\\.\\/\\s](?:(${matchAnyPattern(MONTH_DICTIONARY)})|([0-9]{1,2}))[\\.\\/\\s]([0-9]{1,2})(?=\\W|$)`,"i"),YEAR_NUMBER_GROUP=1,MONTH_NAME_GROUP4=2,MONTH_NUMBER_GROUP=3,DATE_NUMBER_GROUP=4,ENCasualYearMonthDayParser=class extends AbstractParserWithWordBoundaryChecking{static{__name(this,"ENCasualYearMonthDayParser")}innerPattern(){return PATTERN4}innerExtract(context,match){let month=match[MONTH_NUMBER_GROUP]?parseInt(match[MONTH_NUMBER_GROUP]):MONTH_DICTIONARY[match[MONTH_NAME_GROUP4].toLowerCase()];if(month<1||month>12)return null;let year=parseInt(match[YEAR_NUMBER_GROUP]);return{day:parseInt(match[DATE_NUMBER_GROUP]),month,year}}};var PATTERN5=new RegExp("([0-9]|0[1-9]|1[012])/([0-9]{4})","i"),MONTH_GROUP=1,YEAR_GROUP4=2,ENSlashMonthFormatParser=class extends AbstractParserWithWordBoundaryChecking{static{__name(this,"ENSlashMonthFormatParser")}innerPattern(){return PATTERN5}innerExtract(context,match){let year=parseInt(match[YEAR_GROUP4]),month=parseInt(match[MONTH_GROUP]);return context.createParsingComponents().imply("day",1).assign("month",month).assign("year",year)}};function primaryTimePattern(leftBoundary,primaryPrefix,primarySuffix,flags){return new RegExp(`${leftBoundary}${primaryPrefix}(\\d{1,4})(?:(?:\\.|:|：)(\\d{1,2})(?:(?::|：)(\\d{2})(?:\\.(\\d{1,6}))?)?)?(?:\\s*(a\\.m\\.|p\\.m\\.|am?|pm?))?${primarySuffix}`,flags)}__name(primaryTimePattern,"primaryTimePattern");function followingTimePatten(followingPhase,followingSuffix){return new RegExp(`^(${followingPhase})(\\d{1,4})(?:(?:\\.|\\:|\\：)(\\d{1,2})(?:(?:\\.|\\:|\\：)(\\d{1,2})(?:\\.(\\d{1,6}))?)?)?(?:\\s*(a\\.m\\.|p\\.m\\.|am?|pm?))?${followingSuffix}`,"i")}__name(followingTimePatten,"followingTimePatten");var HOUR_GROUP=2,MINUTE_GROUP=3,SECOND_GROUP=4,MILLI_SECOND_GROUP=5,AM_PM_HOUR_GROUP=6,AbstractTimeExpressionParser=class{static{__name(this,"AbstractTimeExpressionParser")}constructor(strictMode=!1){this.cachedPrimaryPrefix=null,this.cachedPrimarySuffix=null,this.cachedPrimaryTimePattern=null,this.cachedFollowingPhase=null,this.cachedFollowingSuffix=null,this.cachedFollowingTimePatten=null,this.strictMode=strictMode}patternFlags(){return"i"}primaryPatternLeftBoundary(){return"(^|\\s|T|\\b)"}primarySuffix(){return"(?!/)(?=\\W|$)"}followingSuffix(){return"(?!/)(?=\\W|$)"}pattern(context){return this.getPrimaryTimePatternThroughCache()}extract(context,match){let startComponents=this.extractPrimaryTimeComponents(context,match);if(!startComponents)return match.index+=match[0].length,null;let index=match.index+match[1].length,text=match[0].substring(match[1].length),result=context.createParsingResult(index,text,startComponents);match.index+=match[0].length;let remainingText=context.text.substring(match.index),followingMatch=this.getFollowingTimePatternThroughCache().exec(remainingText);return text.match(/^\d{3,4}/)&&followingMatch&&followingMatch[0].match(/^\s*([+-])\s*\d{2,4}$/)?null:!followingMatch||followingMatch[0].match(/^\s*([+-])\s*\d{3,4}$/)?this.checkAndReturnWithoutFollowingPattern(result):(result.end=this.extractFollowingTimeComponents(context,followingMatch,result),result.end&&(result.text+=followingMatch[0]),this.checkAndReturnWithFollowingPattern(result))}extractPrimaryTimeComponents(context,match,strict2=!1){let components=context.createParsingComponents(),minute=0,meridiem=null,hour=parseInt(match[HOUR_GROUP]);if(hour>100){if(this.strictMode||match[MINUTE_GROUP]!=null)return null;minute=hour%100,hour=Math.floor(hour/100)}if(hour>24)return null;if(match[MINUTE_GROUP]!=null){if(match[MINUTE_GROUP].length==1&&!match[AM_PM_HOUR_GROUP])return null;minute=parseInt(match[MINUTE_GROUP])}if(minute>=60)return null;if(hour>12&&(meridiem=Meridiem.PM),match[AM_PM_HOUR_GROUP]!=null){if(hour>12)return null;let ampm=match[AM_PM_HOUR_GROUP][0].toLowerCase();ampm=="a"&&(meridiem=Meridiem.AM,hour==12&&(hour=0)),ampm=="p"&&(meridiem=Meridiem.PM,hour!=12&&(hour+=12))}if(components.assign("hour",hour),components.assign("minute",minute),meridiem!==null?components.assign("meridiem",meridiem):hour<12?components.imply("meridiem",Meridiem.AM):components.imply("meridiem",Meridiem.PM),match[MILLI_SECOND_GROUP]!=null){let millisecond=parseInt(match[MILLI_SECOND_GROUP].substring(0,3));if(millisecond>=1e3)return null;components.assign("millisecond",millisecond)}if(match[SECOND_GROUP]!=null){let second=parseInt(match[SECOND_GROUP]);if(second>=60)return null;components.assign("second",second)}return components}extractFollowingTimeComponents(context,match,result){let components=context.createParsingComponents();if(match[MILLI_SECOND_GROUP]!=null){let millisecond=parseInt(match[MILLI_SECOND_GROUP].substring(0,3));if(millisecond>=1e3)return null;components.assign("millisecond",millisecond)}if(match[SECOND_GROUP]!=null){let second=parseInt(match[SECOND_GROUP]);if(second>=60)return null;components.assign("second",second)}let hour=parseInt(match[HOUR_GROUP]),minute=0,meridiem=-1;if(match[MINUTE_GROUP]!=null?minute=parseInt(match[MINUTE_GROUP]):hour>100&&(minute=hour%100,hour=Math.floor(hour/100)),minute>=60||hour>24)return null;if(hour>=12&&(meridiem=Meridiem.PM),match[AM_PM_HOUR_GROUP]!=null){if(hour>12)return null;let ampm=match[AM_PM_HOUR_GROUP][0].toLowerCase();ampm=="a"&&(meridiem=Meridiem.AM,hour==12&&(hour=0,components.isCertain("day")||components.imply("day",components.get("day")+1))),ampm=="p"&&(meridiem=Meridiem.PM,hour!=12&&(hour+=12)),result.start.isCertain("meridiem")||(meridiem==Meridiem.AM?(result.start.imply("meridiem",Meridiem.AM),result.start.get("hour")==12&&result.start.assign("hour",0)):(result.start.imply("meridiem",Meridiem.PM),result.start.get("hour")!=12&&result.start.assign("hour",result.start.get("hour")+12)))}return components.assign("hour",hour),components.assign("minute",minute),meridiem>=0?components.assign("meridiem",meridiem):result.start.isCertain("meridiem")&&result.start.get("hour")>12?result.start.get("hour")-12>hour?components.imply("meridiem",Meridiem.AM):hour<=12&&(components.assign("hour",hour+12),components.assign("meridiem",Meridiem.PM)):hour>12?components.imply("meridiem",Meridiem.PM):hour<=12&&components.imply("meridiem",Meridiem.AM),components.date().getTime()<result.start.date().getTime()&&components.imply("day",components.get("day")+1),components}checkAndReturnWithoutFollowingPattern(result){if(result.text.match(/^\d$/)||result.text.match(/^\d\d\d+$/)||result.text.match(/\d[apAP]$/))return null;let endingWithNumbers=result.text.match(/[^\d:.](\d[\d.]+)$/);if(endingWithNumbers){let endingNumbers=endingWithNumbers[1];if(this.strictMode||endingNumbers.includes(".")&&!endingNumbers.match(/\d(\.\d{2})+$/)||parseInt(endingNumbers)>24)return null}return result}checkAndReturnWithFollowingPattern(result){if(result.text.match(/^\d+-\d+$/))return null;let endingWithNumbers=result.text.match(/[^\d:.](\d[\d.]+)\s*-\s*(\d[\d.]+)$/);if(endingWithNumbers){if(this.strictMode)return null;let startingNumbers=endingWithNumbers[1],endingNumbers=endingWithNumbers[2];if(endingNumbers.includes(".")&&!endingNumbers.match(/\d(\.\d{2})+$/))return null;let endingNumberVal=parseInt(endingNumbers),startingNumberVal=parseInt(startingNumbers);if(endingNumberVal>24||startingNumberVal>24)return null}return result}getPrimaryTimePatternThroughCache(){let primaryPrefix=this.primaryPrefix(),primarySuffix=this.primarySuffix();return this.cachedPrimaryPrefix===primaryPrefix&&this.cachedPrimarySuffix===primarySuffix?this.cachedPrimaryTimePattern:(this.cachedPrimaryTimePattern=primaryTimePattern(this.primaryPatternLeftBoundary(),primaryPrefix,primarySuffix,this.patternFlags()),this.cachedPrimaryPrefix=primaryPrefix,this.cachedPrimarySuffix=primarySuffix,this.cachedPrimaryTimePattern)}getFollowingTimePatternThroughCache(){let followingPhase=this.followingPhase(),followingSuffix=this.followingSuffix();return this.cachedFollowingPhase===followingPhase&&this.cachedFollowingSuffix===followingSuffix?this.cachedFollowingTimePatten:(this.cachedFollowingTimePatten=followingTimePatten(followingPhase,followingSuffix),this.cachedFollowingPhase=followingPhase,this.cachedFollowingSuffix=followingSuffix,this.cachedFollowingTimePatten)}};var ENTimeExpressionParser=class extends AbstractTimeExpressionParser{static{__name(this,"ENTimeExpressionParser")}constructor(strictMode){super(strictMode)}followingPhase(){return"\\s*(?:\\-|\\–|\\~|\\〜|to|until|through|till|\\?)\\s*"}primaryPrefix(){return"(?:(?:at|from)\\s*)??"}primarySuffix(){return"(?:\\s*(?:o\\W*clock|at\\s*night|in\\s*the\\s*(?:morning|afternoon)))?(?!/)(?=\\W|$)"}extractPrimaryTimeComponents(context,match){let components=super.extractPrimaryTimeComponents(context,match);if(!components)return components;if(match[0].endsWith("night")){let hour=components.get("hour");hour>=6&&hour<12?(components.assign("hour",components.get("hour")+12),components.assign("meridiem",Meridiem.PM)):hour<6&&components.assign("meridiem",Meridiem.AM)}if(match[0].endsWith("afternoon")){components.assign("meridiem",Meridiem.PM);let hour=components.get("hour");hour>=0&&hour<=6&&components.assign("hour",components.get("hour")+12)}return match[0].endsWith("morning")&&(components.assign("meridiem",Meridiem.AM),components.get("hour")<12&&components.assign("hour",components.get("hour"))),components.addTag("parser/ENTimeExpressionParser")}};function reverseTimeUnits(timeUnits){let reversed={};for(let key in timeUnits)reversed[key]=-timeUnits[key];return reversed}__name(reverseTimeUnits,"reverseTimeUnits");function addImpliedTimeUnits(components,timeUnits){let output=components.clone(),date=components.dayjs();for(let key in timeUnits)date=date.add(timeUnits[key],key);return("day"in timeUnits||"d"in timeUnits||"week"in timeUnits||"month"in timeUnits||"year"in timeUnits)&&(output.imply("day",date.date()),output.imply("month",date.month()+1),output.imply("year",date.year())),("second"in timeUnits||"minute"in timeUnits||"hour"in timeUnits)&&(output.imply("second",date.second()),output.imply("minute",date.minute()),output.imply("hour",date.hour())),output}__name(addImpliedTimeUnits,"addImpliedTimeUnits");var PATTERN6=new RegExp(`(${TIME_UNITS_PATTERN})\\s{0,5}(?:ago|before|earlier)(?=\\W|$)`,"i"),STRICT_PATTERN=new RegExp(`(${TIME_UNITS_NO_ABBR_PATTERN})\\s{0,5}(?:ago|before|earlier)(?=\\W|$)`,"i"),ENTimeUnitAgoFormatParser=class extends AbstractParserWithWordBoundaryChecking{static{__name(this,"ENTimeUnitAgoFormatParser")}constructor(strictMode){super(),this.strictMode=strictMode}innerPattern(){return this.strictMode?STRICT_PATTERN:PATTERN6}innerExtract(context,match){let timeUnits=parseTimeUnits(match[1]),outputTimeUnits=reverseTimeUnits(timeUnits);return ParsingComponents.createRelativeFromReference(context.reference,outputTimeUnits)}};var PATTERN7=new RegExp(`(${TIME_UNITS_PATTERN})\\s{0,5}(?:later|after|from now|henceforth|forward|out)(?=(?:\\W|$))`,"i"),STRICT_PATTERN2=new RegExp(`(${TIME_UNITS_NO_ABBR_PATTERN})\\s{0,5}(later|after|from now)(?=\\W|$)`,"i"),GROUP_NUM_TIMEUNITS=1,ENTimeUnitLaterFormatParser=class extends AbstractParserWithWordBoundaryChecking{static{__name(this,"ENTimeUnitLaterFormatParser")}constructor(strictMode){super(),this.strictMode=strictMode}innerPattern(){return this.strictMode?STRICT_PATTERN2:PATTERN7}innerExtract(context,match){let fragments=parseTimeUnits(match[GROUP_NUM_TIMEUNITS]);return ParsingComponents.createRelativeFromReference(context.reference,fragments)}};var Filter=class{static{__name(this,"Filter")}refine(context,results){return results.filter(r=>this.isValid(context,r))}},MergingRefiner=class{static{__name(this,"MergingRefiner")}refine(context,results){if(results.length<2)return results;let mergedResults=[],curResult=results[0],nextResult=null;for(let i=1;i<results.length;i++){nextResult=results[i];let textBetween=context.text.substring(curResult.index+curResult.text.length,nextResult.index);if(!this.shouldMergeResults(textBetween,curResult,nextResult,context))mergedResults.push(curResult),curResult=nextResult;else{let left=curResult,right=nextResult,mergedResult=this.mergeResults(textBetween,left,right,context);context.debug(()=>{console.log(`${this.constructor.name} merged ${left} and ${right} into ${mergedResult}`)}),curResult=mergedResult}}return curResult!=null&&mergedResults.push(curResult),mergedResults}};var AbstractMergeDateRangeRefiner=class extends MergingRefiner{static{__name(this,"AbstractMergeDateRangeRefiner")}shouldMergeResults(textBetween,currentResult,nextResult){return!currentResult.end&&!nextResult.end&&textBetween.match(this.patternBetween())!=null}mergeResults(textBetween,fromResult,toResult){if(!fromResult.start.isOnlyWeekdayComponent()&&!toResult.start.isOnlyWeekdayComponent()&&(toResult.start.getCertainComponents().forEach(key=>{fromResult.start.isCertain(key)||fromResult.start.imply(key,toResult.start.get(key))}),fromResult.start.getCertainComponents().forEach(key=>{toResult.start.isCertain(key)||toResult.start.imply(key,fromResult.start.get(key))})),fromResult.start.date().getTime()>toResult.start.date().getTime()){let fromMoment=fromResult.start.dayjs(),toMoment=toResult.start.dayjs();toResult.start.isOnlyWeekdayComponent()&&toMoment.add(7,"days").isAfter(fromMoment)?(toMoment=toMoment.add(7,"days"),toResult.start.imply("day",toMoment.date()),toResult.start.imply("month",toMoment.month()+1),toResult.start.imply("year",toMoment.year())):fromResult.start.isOnlyWeekdayComponent()&&fromMoment.add(-7,"days").isBefore(toMoment)?(fromMoment=fromMoment.add(-7,"days"),fromResult.start.imply("day",fromMoment.date()),fromResult.start.imply("month",fromMoment.month()+1),fromResult.start.imply("year",fromMoment.year())):toResult.start.isDateWithUnknownYear()&&toMoment.add(1,"years").isAfter(fromMoment)?(toMoment=toMoment.add(1,"years"),toResult.start.imply("year",toMoment.year())):fromResult.start.isDateWithUnknownYear()&&fromMoment.add(-1,"years").isBefore(toMoment)?(fromMoment=fromMoment.add(-1,"years"),fromResult.start.imply("year",fromMoment.year())):[toResult,fromResult]=[fromResult,toResult]}let result=fromResult.clone();return result.start=fromResult.start,result.end=toResult.start,result.index=Math.min(fromResult.index,toResult.index),fromResult.index<toResult.index?result.text=fromResult.text+textBetween+toResult.text:result.text=toResult.text+textBetween+fromResult.text,result}};var ENMergeDateRangeRefiner=class extends AbstractMergeDateRangeRefiner{static{__name(this,"ENMergeDateRangeRefiner")}patternBetween(){return/^\s*(to|-|–|until|through|till)\s*$/i}};function mergeDateTimeResult(dateResult,timeResult){let result=dateResult.clone(),beginDate=dateResult.start,beginTime=timeResult.start;if(result.start=mergeDateTimeComponent(beginDate,beginTime),dateResult.end!=null||timeResult.end!=null){let endDate=dateResult.end==null?dateResult.start:dateResult.end,endTime=timeResult.end==null?timeResult.start:timeResult.end,endDateTime=mergeDateTimeComponent(endDate,endTime);if(dateResult.end==null&&endDateTime.date().getTime()<result.start.date().getTime()){let nextDayJs=endDateTime.dayjs().add(1,"day");endDateTime.isCertain("day")?assignSimilarDate(endDateTime,nextDayJs):implySimilarDate(endDateTime,nextDayJs)}result.end=endDateTime}return result}__name(mergeDateTimeResult,"mergeDateTimeResult");function mergeDateTimeComponent(dateComponent,timeComponent){let dateTimeComponent=dateComponent.clone();return timeComponent.isCertain("hour")?(dateTimeComponent.assign("hour",timeComponent.get("hour")),dateTimeComponent.assign("minute",timeComponent.get("minute")),timeComponent.isCertain("second")?(dateTimeComponent.assign("second",timeComponent.get("second")),timeComponent.isCertain("millisecond")?dateTimeComponent.assign("millisecond",timeComponent.get("millisecond")):dateTimeComponent.imply("millisecond",timeComponent.get("millisecond"))):(dateTimeComponent.imply("second",timeComponent.get("second")),dateTimeComponent.imply("millisecond",timeComponent.get("millisecond")))):(dateTimeComponent.imply("hour",timeComponent.get("hour")),dateTimeComponent.imply("minute",timeComponent.get("minute")),dateTimeComponent.imply("second",timeComponent.get("second")),dateTimeComponent.imply("millisecond",timeComponent.get("millisecond"))),timeComponent.isCertain("timezoneOffset")&&dateTimeComponent.assign("timezoneOffset",timeComponent.get("timezoneOffset")),timeComponent.isCertain("meridiem")?dateTimeComponent.assign("meridiem",timeComponent.get("meridiem")):timeComponent.get("meridiem")!=null&&dateTimeComponent.get("meridiem")==null&&dateTimeComponent.imply("meridiem",timeComponent.get("meridiem")),dateTimeComponent.get("meridiem")==Meridiem.PM&&dateTimeComponent.get("hour")<12&&(timeComponent.isCertain("hour")?dateTimeComponent.assign("hour",dateTimeComponent.get("hour")+12):dateTimeComponent.imply("hour",dateTimeComponent.get("hour")+12)),dateTimeComponent.addTags(dateComponent.tags()),dateTimeComponent.addTags(timeComponent.tags()),dateTimeComponent}__name(mergeDateTimeComponent,"mergeDateTimeComponent");var AbstractMergeDateTimeRefiner=class extends MergingRefiner{static{__name(this,"AbstractMergeDateTimeRefiner")}shouldMergeResults(textBetween,currentResult,nextResult){return(currentResult.start.isOnlyDate()&&nextResult.start.isOnlyTime()||nextResult.start.isOnlyDate()&&currentResult.start.isOnlyTime())&&textBetween.match(this.patternBetween())!=null}mergeResults(textBetween,currentResult,nextResult){let result=currentResult.start.isOnlyDate()?mergeDateTimeResult(currentResult,nextResult):mergeDateTimeResult(nextResult,currentResult);return result.index=currentResult.index,result.text=currentResult.text+textBetween+nextResult.text,result}};var ENMergeDateTimeRefiner=class extends AbstractMergeDateTimeRefiner{static{__name(this,"ENMergeDateTimeRefiner")}patternBetween(){return new RegExp("^\\s*(T|at|after|before|on|of|,|-)?\\s*$")}};var TIMEZONE_NAME_PATTERN=new RegExp("^\\s*,?\\s*\\(?([A-Z]{2,4})\\)?(?=\\W|$)","i"),ExtractTimezoneAbbrRefiner=class{static{__name(this,"ExtractTimezoneAbbrRefiner")}constructor(timezoneOverrides){this.timezoneOverrides=timezoneOverrides}refine(context,results){let timezoneOverrides=context.option.timezones??{};return results.forEach(result=>{let suffix=context.text.substring(result.index+result.text.length),match=TIMEZONE_NAME_PATTERN.exec(suffix);if(!match)return;let timezoneAbbr=match[1].toUpperCase(),refDate=result.start.date()??result.refDate??new Date,tzOverrides={...this.timezoneOverrides,...timezoneOverrides},extractedTimezoneOffset=toTimezoneOffset(timezoneAbbr,refDate,tzOverrides);if(extractedTimezoneOffset==null)return;context.debug(()=>{console.log(`Extracting timezone: '${timezoneAbbr}' into: ${extractedTimezoneOffset} for: ${result.start}`)});let currentTimezoneOffset=result.start.get("timezoneOffset");currentTimezoneOffset!==null&&extractedTimezoneOffset!=currentTimezoneOffset&&(result.start.isCertain("timezoneOffset")||timezoneAbbr!=match[1])||result.start.isOnlyDate()&&timezoneAbbr!=match[1]||(result.text+=match[0],result.start.isCertain("timezoneOffset")||result.start.assign("timezoneOffset",extractedTimezoneOffset),result.end!=null&&!result.end.isCertain("timezoneOffset")&&result.end.assign("timezoneOffset",extractedTimezoneOffset))}),results}};var TIMEZONE_OFFSET_PATTERN=new RegExp("^\\s*(?:\\(?(?:GMT|UTC)\\s?)?([+-])(\\d{1,2})(?::?(\\d{2}))?\\)?","i"),TIMEZONE_OFFSET_SIGN_GROUP=1,TIMEZONE_OFFSET_HOUR_OFFSET_GROUP=2,TIMEZONE_OFFSET_MINUTE_OFFSET_GROUP=3,ExtractTimezoneOffsetRefiner=class{static{__name(this,"ExtractTimezoneOffsetRefiner")}refine(context,results){return results.forEach(function(result){if(result.start.isCertain("timezoneOffset"))return;let suffix=context.text.substring(result.index+result.text.length),match=TIMEZONE_OFFSET_PATTERN.exec(suffix);if(!match)return;context.debug(()=>{console.log(`Extracting timezone: '${match[0]}' into : ${result}`)});let hourOffset=parseInt(match[TIMEZONE_OFFSET_HOUR_OFFSET_GROUP]),minuteOffset=parseInt(match[TIMEZONE_OFFSET_MINUTE_OFFSET_GROUP]||"0"),timezoneOffset=hourOffset*60+minuteOffset;timezoneOffset>14*60||(match[TIMEZONE_OFFSET_SIGN_GROUP]==="-"&&(timezoneOffset=-timezoneOffset),result.end!=null&&result.end.assign("timezoneOffset",timezoneOffset),result.start.assign("timezoneOffset",timezoneOffset),result.text+=match[0])}),results}};var OverlapRemovalRefiner=class{static{__name(this,"OverlapRemovalRefiner")}refine(context,results){if(results.length<2)return results;let filteredResults=[],prevResult=results[0];for(let i=1;i<results.length;i++){let result=results[i];if(result.index>=prevResult.index+prevResult.text.length){filteredResults.push(prevResult),prevResult=result;continue}let kept=null,removed=null;result.text.length>prevResult.text.length?(kept=result,removed=prevResult):(kept=prevResult,removed=result),context.debug(()=>{console.log(`${this.constructor.name} remove ${removed} by ${kept}`)}),prevResult=kept}return prevResult!=null&&filteredResults.push(prevResult),filteredResults}};var import_dayjs6=__toESM(require_dayjs_min(),1);var ForwardDateRefiner=class{static{__name(this,"ForwardDateRefiner")}refine(context,results){return context.option.forwardDate&&results.forEach(function(result){let refMoment=(0,import_dayjs6.default)(context.refDate);if(result.start.isOnlyTime()&&refMoment.isAfter(result.start.dayjs())&&(refMoment=refMoment.add(1,"day"),implySimilarDate(result.start,refMoment),result.end&&result.end.isOnlyTime()&&(implySimilarDate(result.end,refMoment),result.start.dayjs().isAfter(result.end.dayjs())&&(refMoment=refMoment.add(1,"day"),implySimilarDate(result.end,refMoment)))),result.start.isOnlyWeekdayComponent()&&refMoment.isAfter(result.start.dayjs())&&(refMoment.day()>=result.start.get("weekday")?refMoment=refMoment.day(result.start.get("weekday")+7):refMoment=refMoment.day(result.start.get("weekday")),result.start.imply("day",refMoment.date()),result.start.imply("month",refMoment.month()+1),result.start.imply("year",refMoment.year()),context.debug(()=>{console.log(`Forward weekly adjusted for ${result} (${result.start})`)}),result.end&&result.end.isOnlyWeekdayComponent()&&(refMoment.day()>result.end.get("weekday")?refMoment=refMoment.day(result.end.get("weekday")+7):refMoment=refMoment.day(result.end.get("weekday")),result.end.imply("day",refMoment.date()),result.end.imply("month",refMoment.month()+1),result.end.imply("year",refMoment.year()),context.debug(()=>{console.log(`Forward weekly adjusted for ${result} (${result.end})`)}))),result.start.isDateWithUnknownYear()&&refMoment.isAfter(result.start.dayjs()))for(let i=0;i<3&&refMoment.isAfter(result.start.dayjs());i++)result.start.imply("year",result.start.get("year")+1),context.debug(()=>{console.log(`Forward yearly adjusted for ${result} (${result.start})`)}),result.end&&!result.end.isCertain("year")&&(result.end.imply("year",result.end.get("year")+1),context.debug(()=>{console.log(`Forward yearly adjusted for ${result} (${result.end})`)}))}),results}};var UnlikelyFormatFilter=class extends Filter{static{__name(this,"UnlikelyFormatFilter")}constructor(strictMode){super(),this.strictMode=strictMode}isValid(context,result){return result.text.replace(" ","").match(/^\d*(\.\d*)?$/)?(context.debug(()=>{console.log(`Removing unlikely result '${result.text}'`)}),!1):result.start.isValidDate()?result.end&&!result.end.isValidDate()?(context.debug(()=>{console.log(`Removing invalid result: ${result} (${result.end})`)}),!1):this.strictMode?this.isStrictModeValid(context,result):!0:(context.debug(()=>{console.log(`Removing invalid result: ${result} (${result.start})`)}),!1)}isStrictModeValid(context,result){return result.start.isOnlyWeekdayComponent()?(context.debug(()=>{console.log(`(Strict) Removing weekday only component: ${result} (${result.end})`)}),!1):result.start.isOnlyTime()&&(!result.start.isCertain("hour")||!result.start.isCertain("minute"))?(context.debug(()=>{console.log(`(Strict) Removing uncertain time component: ${result} (${result.end})`)}),!1):!0}};var PATTERN8=new RegExp("([0-9]{4})\\-([0-9]{1,2})\\-([0-9]{1,2})(?:T([0-9]{1,2}):([0-9]{1,2})(?::([0-9]{1,2})(?:\\.(\\d{1,4}))?)?(?:Z|([+-]\\d{2}):?(\\d{2})?)?)?(?=\\W|$)","i"),YEAR_NUMBER_GROUP2=1,MONTH_NUMBER_GROUP2=2,DATE_NUMBER_GROUP2=3,HOUR_NUMBER_GROUP=4,MINUTE_NUMBER_GROUP=5,SECOND_NUMBER_GROUP=6,MILLISECOND_NUMBER_GROUP=7,TZD_HOUR_OFFSET_GROUP=8,TZD_MINUTE_OFFSET_GROUP=9,ISOFormatParser=class extends AbstractParserWithWordBoundaryChecking{static{__name(this,"ISOFormatParser")}innerPattern(){return PATTERN8}innerExtract(context,match){let components={};if(components.year=parseInt(match[YEAR_NUMBER_GROUP2]),components.month=parseInt(match[MONTH_NUMBER_GROUP2]),components.day=parseInt(match[DATE_NUMBER_GROUP2]),match[HOUR_NUMBER_GROUP]!=null)if(components.hour=parseInt(match[HOUR_NUMBER_GROUP]),components.minute=parseInt(match[MINUTE_NUMBER_GROUP]),match[SECOND_NUMBER_GROUP]!=null&&(components.second=parseInt(match[SECOND_NUMBER_GROUP])),match[MILLISECOND_NUMBER_GROUP]!=null&&(components.millisecond=parseInt(match[MILLISECOND_NUMBER_GROUP])),match[TZD_HOUR_OFFSET_GROUP]==null)components.timezoneOffset=0;else{let hourOffset=parseInt(match[TZD_HOUR_OFFSET_GROUP]),minuteOffset=0;match[TZD_MINUTE_OFFSET_GROUP]!=null&&(minuteOffset=parseInt(match[TZD_MINUTE_OFFSET_GROUP]));let offset=hourOffset*60;offset<0?offset-=minuteOffset:offset+=minuteOffset,components.timezoneOffset=offset}return components}};var MergeWeekdayComponentRefiner=class extends MergingRefiner{static{__name(this,"MergeWeekdayComponentRefiner")}mergeResults(textBetween,currentResult,nextResult){let newResult=nextResult.clone();return newResult.index=currentResult.index,newResult.text=currentResult.text+textBetween+newResult.text,newResult.start.assign("weekday",currentResult.start.get("weekday")),newResult.end&&newResult.end.assign("weekday",currentResult.start.get("weekday")),newResult}shouldMergeResults(textBetween,currentResult,nextResult){return currentResult.start.isOnlyWeekdayComponent()&&!currentResult.start.isCertain("hour")&&nextResult.start.isCertain("day")&&textBetween.match(/^,?\s*$/)!=null}};function includeCommonConfiguration(configuration2,strictMode=!1){return configuration2.parsers.unshift(new ISOFormatParser),configuration2.refiners.unshift(new MergeWeekdayComponentRefiner),configuration2.refiners.unshift(new ExtractTimezoneOffsetRefiner),configuration2.refiners.unshift(new OverlapRemovalRefiner),configuration2.refiners.push(new ExtractTimezoneAbbrRefiner),configuration2.refiners.push(new OverlapRemovalRefiner),configuration2.refiners.push(new ForwardDateRefiner),configuration2.refiners.push(new UnlikelyFormatFilter(strictMode)),configuration2}__name(includeCommonConfiguration,"includeCommonConfiguration");var import_dayjs10=__toESM(require_dayjs_min(),1);var import_dayjs8=__toESM(require_dayjs_min(),1);function now(reference){let targetDate=(0,import_dayjs8.default)(reference.instant),component=new ParsingComponents(reference,{});return assignSimilarDate(component,targetDate),assignSimilarTime(component,targetDate),reference.timezoneOffset!==null&&component.assign("timezoneOffset",targetDate.utcOffset()),component.addTag("casualReference/now"),component}__name(now,"now");function today(reference){let targetDate=(0,import_dayjs8.default)(reference.instant),component=new ParsingComponents(reference,{});return assignSimilarDate(component,targetDate),implySimilarTime(component,targetDate),component.addTag("casualReference/today"),component}__name(today,"today");function yesterday(reference){return theDayBefore(reference,1).addTag("casualReference/yesterday")}__name(yesterday,"yesterday");function theDayBefore(reference,numDay){return theDayAfter(reference,-numDay)}__name(theDayBefore,"theDayBefore");function tomorrow(reference){return theDayAfter(reference,1).addTag("casualReference/tomorrow")}__name(tomorrow,"tomorrow");function theDayAfter(reference,nDays){let targetDate=(0,import_dayjs8.default)(reference.instant),component=new ParsingComponents(reference,{});return targetDate=targetDate.add(nDays,"day"),assignSimilarDate(component,targetDate),implySimilarTime(component,targetDate),component}__name(theDayAfter,"theDayAfter");function tonight(reference,implyHour=22){let targetDate=(0,import_dayjs8.default)(reference.instant),component=new ParsingComponents(reference,{});return assignSimilarDate(component,targetDate),component.imply("hour",implyHour),component.imply("meridiem",Meridiem.PM),component.addTag("casualReference/tonight"),component}__name(tonight,"tonight");function evening(reference,implyHour=20){let component=new ParsingComponents(reference,{});return component.imply("meridiem",Meridiem.PM),component.imply("hour",implyHour),component.addTag("casualReference/evening"),component}__name(evening,"evening");function midnight(reference){let component=new ParsingComponents(reference,{}),targetDate=(0,import_dayjs8.default)(reference.instant);return targetDate.hour()>2&&implyTheNextDay(component,targetDate),component.assign("hour",0),component.imply("minute",0),component.imply("second",0),component.imply("millisecond",0),component.addTag("casualReference/midnight"),component}__name(midnight,"midnight");function morning(reference,implyHour=6){let component=new ParsingComponents(reference,{});return component.imply("meridiem",Meridiem.AM),component.imply("hour",implyHour),component.imply("minute",0),component.imply("second",0),component.imply("millisecond",0),component.addTag("casualReference/morning"),component}__name(morning,"morning");function afternoon(reference,implyHour=15){let component=new ParsingComponents(reference,{});return component.imply("meridiem",Meridiem.PM),component.imply("hour",implyHour),component.imply("minute",0),component.imply("second",0),component.imply("millisecond",0),component.addTag("casualReference/afternoon"),component}__name(afternoon,"afternoon");function noon(reference){let component=new ParsingComponents(reference,{});return component.imply("meridiem",Meridiem.AM),component.imply("hour",12),component.imply("minute",0),component.imply("second",0),component.imply("millisecond",0),component.addTag("casualReference/noon"),component}__name(noon,"noon");var PATTERN9=/(now|today|tonight|tomorrow|tmr|tmrw|yesterday|last\s*night)(?=\W|$)/i,ENCasualDateParser=class extends AbstractParserWithWordBoundaryChecking{static{__name(this,"ENCasualDateParser")}innerPattern(context){return PATTERN9}innerExtract(context,match){let targetDate=(0,import_dayjs10.default)(context.refDate),lowerText=match[0].toLowerCase(),component=context.createParsingComponents();switch(lowerText){case"now":component=now(context.reference);break;case"today":component=today(context.reference);break;case"yesterday":component=yesterday(context.reference);break;case"tomorrow":case"tmr":case"tmrw":component=tomorrow(context.reference);break;case"tonight":component=tonight(context.reference);break;default:lowerText.match(/last\s*night/)&&(targetDate.hour()>6&&(targetDate=targetDate.add(-1,"day")),assignSimilarDate(component,targetDate),component.imply("hour",0));break}return component.addTag("parser/ENCasualDateParser"),component}};var PATTERN10=/(?:this)?\s{0,3}(morning|afternoon|evening|night|midnight|midday|noon)(?=\W|$)/i,ENCasualTimeParser=class extends AbstractParserWithWordBoundaryChecking{static{__name(this,"ENCasualTimeParser")}innerPattern(){return PATTERN10}innerExtract(context,match){let component=null;switch(match[1].toLowerCase()){case"afternoon":component=afternoon(context.reference);break;case"evening":case"night":component=evening(context.reference);break;case"midnight":component=midnight(context.reference);break;case"morning":component=morning(context.reference);break;case"noon":case"midday":component=noon(context.reference);break}return component&&component.addTag("parser/ENCasualTimeParser"),component}};function createParsingComponentsAtWeekday(reference,weekday,modifier){let refDate=reference.getDateWithAdjustedTimezone(),daysToWeekday=getDaysToWeekday(refDate,weekday,modifier),components=new ParsingComponents(reference);return components=addImpliedTimeUnits(components,{day:daysToWeekday}),components.assign("weekday",weekday),components}__name(createParsingComponentsAtWeekday,"createParsingComponentsAtWeekday");function getDaysToWeekday(refDate,weekday,modifier){let refWeekday=refDate.getDay();switch(modifier){case"this":return getDaysForwardToWeekday(refDate,weekday);case"last":return getBackwardDaysToWeekday(refDate,weekday);case"next":return refWeekday==Weekday.SUNDAY?weekday==Weekday.SUNDAY?7:weekday:refWeekday==Weekday.SATURDAY?weekday==Weekday.SATURDAY?7:weekday==Weekday.SUNDAY?8:1+weekday:weekday<refWeekday&&weekday!=Weekday.SUNDAY?getDaysForwardToWeekday(refDate,weekday):getDaysForwardToWeekday(refDate,weekday)+7}return getDaysToWeekdayClosest(refDate,weekday)}__name(getDaysToWeekday,"getDaysToWeekday");function getDaysToWeekdayClosest(refDate,weekday){let backward=getBackwardDaysToWeekday(refDate,weekday),forward=getDaysForwardToWeekday(refDate,weekday);return forward<-backward?forward:backward}__name(getDaysToWeekdayClosest,"getDaysToWeekdayClosest");function getDaysForwardToWeekday(refDate,weekday){let refWeekday=refDate.getDay(),forwardCount=weekday-refWeekday;return forwardCount<0&&(forwardCount+=7),forwardCount}__name(getDaysForwardToWeekday,"getDaysForwardToWeekday");function getBackwardDaysToWeekday(refDate,weekday){let refWeekday=refDate.getDay(),backwardCount=weekday-refWeekday;return backwardCount>=0&&(backwardCount-=7),backwardCount}__name(getBackwardDaysToWeekday,"getBackwardDaysToWeekday");var PATTERN11=new RegExp(`(?:(?:\\,|\\(|\\（)\\s*)?(?:on\\s*?)?(?:(this|last|past|next)\\s*)?(${matchAnyPattern(WEEKDAY_DICTIONARY)})(?:\\s*(?:\\,|\\)|\\）))?(?:\\s*(this|last|past|next)\\s*week)?(?=\\W|$)`,"i"),PREFIX_GROUP2=1,WEEKDAY_GROUP=2,POSTFIX_GROUP=3,ENWeekdayParser=class extends AbstractParserWithWordBoundaryChecking{static{__name(this,"ENWeekdayParser")}innerPattern(){return PATTERN11}innerExtract(context,match){let dayOfWeek=match[WEEKDAY_GROUP].toLowerCase(),weekday=WEEKDAY_DICTIONARY[dayOfWeek],prefix=match[PREFIX_GROUP2],postfix=match[POSTFIX_GROUP],modifierWord=prefix||postfix;modifierWord=modifierWord||"",modifierWord=modifierWord.toLowerCase();let modifier=null;return modifierWord=="last"||modifierWord=="past"?modifier="last":modifierWord=="next"?modifier="next":modifierWord=="this"&&(modifier="this"),createParsingComponentsAtWeekday(context.reference,weekday,modifier)}};var import_dayjs12=__toESM(require_dayjs_min(),1);var PATTERN12=new RegExp(`(this|last|past|next|after\\s*this)\\s*(${matchAnyPattern(TIME_UNIT_DICTIONARY)})(?=\\s*)(?=\\W|$)`,"i"),MODIFIER_WORD_GROUP=1,RELATIVE_WORD_GROUP=2,ENRelativeDateFormatParser=class extends AbstractParserWithWordBoundaryChecking{static{__name(this,"ENRelativeDateFormatParser")}innerPattern(){return PATTERN12}innerExtract(context,match){let modifier=match[MODIFIER_WORD_GROUP].toLowerCase(),unitWord=match[RELATIVE_WORD_GROUP].toLowerCase(),timeunit=TIME_UNIT_DICTIONARY[unitWord];if(modifier=="next"||modifier.startsWith("after")){let timeUnits={};return timeUnits[timeunit]=1,ParsingComponents.createRelativeFromReference(context.reference,timeUnits)}if(modifier=="last"||modifier=="past"){let timeUnits={};return timeUnits[timeunit]=-1,ParsingComponents.createRelativeFromReference(context.reference,timeUnits)}let components=context.createParsingComponents(),date=(0,import_dayjs12.default)(context.reference.instant);return unitWord.match(/week/i)?(date=date.add(-date.get("d"),"d"),components.imply("day",date.date()),components.imply("month",date.month()+1),components.imply("year",date.year())):unitWord.match(/month/i)?(date=date.add(-date.date()+1,"d"),components.imply("day",date.date()),components.assign("year",date.year()),components.assign("month",date.month()+1)):unitWord.match(/year/i)&&(date=date.add(-date.date()+1,"d"),date=date.add(-date.month(),"month"),components.imply("day",date.date()),components.imply("month",date.month()+1),components.assign("year",date.year())),components}};var PATTERN13=new RegExp("([^\\d]|^)([0-3]{0,1}[0-9]{1})[\\/\\.\\-]([0-3]{0,1}[0-9]{1})(?:[\\/\\.\\-]([0-9]{4}|[0-9]{2}))?(\\W|$)","i"),OPENING_GROUP=1,ENDING_GROUP=5,FIRST_NUMBERS_GROUP=2,SECOND_NUMBERS_GROUP=3,YEAR_GROUP5=4,SlashDateFormatParser=class{static{__name(this,"SlashDateFormatParser")}constructor(littleEndian){this.groupNumberMonth=littleEndian?SECOND_NUMBERS_GROUP:FIRST_NUMBERS_GROUP,this.groupNumberDay=littleEndian?FIRST_NUMBERS_GROUP:SECOND_NUMBERS_GROUP}pattern(){return PATTERN13}extract(context,match){if(match[OPENING_GROUP].length==0&&match.index>0&&match.index<context.text.length){let previousChar=context.text[match.index-1];if(previousChar>="0"&&previousChar<="9")return}let index=match.index+match[OPENING_GROUP].length,text=match[0].substr(match[OPENING_GROUP].length,match[0].length-match[OPENING_GROUP].length-match[ENDING_GROUP].length);if(text.match(/^\d\.\d$/)||text.match(/^\d\.\d{1,2}\.\d{1,2}\s*$/)||!match[YEAR_GROUP5]&&match[0].indexOf("/")<0)return;let result=context.createParsingResult(index,text),month=parseInt(match[this.groupNumberMonth]),day=parseInt(match[this.groupNumberDay]);if((month<1||month>12)&&month>12)if(day>=1&&day<=12&&month<=31)[day,month]=[month,day];else return null;if(day<1||day>31)return null;if(result.start.assign("day",day),result.start.assign("month",month),match[YEAR_GROUP5]){let rawYearNumber=parseInt(match[YEAR_GROUP5]),year=findMostLikelyADYear(rawYearNumber);result.start.assign("year",year)}else{let year=findYearClosestToRef(context.refDate,day,month);result.start.imply("year",year)}return result}};var PATTERN14=new RegExp(`(this|last|past|next|after|\\+|-)\\s*(${TIME_UNITS_PATTERN})(?=\\W|$)`,"i"),PATTERN_NO_ABBR=new RegExp(`(this|last|past|next|after|\\+|-)\\s*(${TIME_UNITS_NO_ABBR_PATTERN})(?=\\W|$)`,"i"),ENTimeUnitCasualRelativeFormatParser=class extends AbstractParserWithWordBoundaryChecking{static{__name(this,"ENTimeUnitCasualRelativeFormatParser")}constructor(allowAbbreviations=!0){super(),this.allowAbbreviations=allowAbbreviations}innerPattern(){return this.allowAbbreviations?PATTERN14:PATTERN_NO_ABBR}innerExtract(context,match){let prefix=match[1].toLowerCase(),timeUnits=parseTimeUnits(match[2]);switch(prefix){case"last":case"past":case"-":timeUnits=reverseTimeUnits(timeUnits);break}return ParsingComponents.createRelativeFromReference(context.reference,timeUnits)}};function IsPositiveFollowingReference(result){return result.text.match(/^[+-]/i)!=null}__name(IsPositiveFollowingReference,"IsPositiveFollowingReference");function IsNegativeFollowingReference(result){return result.text.match(/^-/i)!=null}__name(IsNegativeFollowingReference,"IsNegativeFollowingReference");var ENMergeRelativeAfterDateRefiner=class extends MergingRefiner{static{__name(this,"ENMergeRelativeAfterDateRefiner")}shouldMergeResults(textBetween,currentResult,nextResult){return textBetween.match(/^\s*$/i)?IsPositiveFollowingReference(nextResult)||IsNegativeFollowingReference(nextResult):!1}mergeResults(textBetween,currentResult,nextResult,context){let timeUnits=parseTimeUnits(nextResult.text);IsNegativeFollowingReference(nextResult)&&(timeUnits=reverseTimeUnits(timeUnits));let components=ParsingComponents.createRelativeFromReference(new ReferenceWithTimezone(currentResult.start.date()),timeUnits);return new ParsingResult(currentResult.reference,currentResult.index,`${currentResult.text}${textBetween}${nextResult.text}`,components)}};function hasImpliedEarlierReferenceDate(result){return result.text.match(/\s+(before|from)$/i)!=null}__name(hasImpliedEarlierReferenceDate,"hasImpliedEarlierReferenceDate");function hasImpliedLaterReferenceDate(result){return result.text.match(/\s+(after|since)$/i)!=null}__name(hasImpliedLaterReferenceDate,"hasImpliedLaterReferenceDate");var ENMergeRelativeFollowByDateRefiner=class extends MergingRefiner{static{__name(this,"ENMergeRelativeFollowByDateRefiner")}patternBetween(){return/^\s*$/i}shouldMergeResults(textBetween,currentResult,nextResult){return!textBetween.match(this.patternBetween())||!hasImpliedEarlierReferenceDate(currentResult)&&!hasImpliedLaterReferenceDate(currentResult)?!1:!!nextResult.start.get("day")&&!!nextResult.start.get("month")&&!!nextResult.start.get("year")}mergeResults(textBetween,currentResult,nextResult){let timeUnits=parseTimeUnits(currentResult.text);hasImpliedEarlierReferenceDate(currentResult)&&(timeUnits=reverseTimeUnits(timeUnits));let components=ParsingComponents.createRelativeFromReference(new ReferenceWithTimezone(nextResult.start.date()),timeUnits);return new ParsingResult(nextResult.reference,currentResult.index,`${currentResult.text}${textBetween}${nextResult.text}`,components)}};var ENDefaultConfiguration=class{static{__name(this,"ENDefaultConfiguration")}createCasualConfiguration(littleEndian=!1){let option=this.createConfiguration(!1,littleEndian);return option.parsers.push(new ENCasualDateParser),option.parsers.push(new ENCasualTimeParser),option.parsers.push(new ENMonthNameParser),option.parsers.push(new ENRelativeDateFormatParser),option.parsers.push(new ENTimeUnitCasualRelativeFormatParser),option}createConfiguration(strictMode=!0,littleEndian=!1){let options=includeCommonConfiguration({parsers:[new SlashDateFormatParser(littleEndian),new ENTimeUnitWithinFormatParser(strictMode),new ENMonthNameLittleEndianParser,new ENMonthNameMiddleEndianParser(littleEndian),new ENWeekdayParser,new ENCasualYearMonthDayParser,new ENSlashMonthFormatParser,new ENTimeExpressionParser(strictMode),new ENTimeUnitAgoFormatParser(strictMode),new ENTimeUnitLaterFormatParser(strictMode)],refiners:[new ENMergeDateTimeRefiner]},strictMode);return options.refiners.unshift(new ENMergeRelativeFollowByDateRefiner),options.refiners.unshift(new ENMergeRelativeAfterDateRefiner),options.refiners.unshift(new OverlapRemovalRefiner),options.refiners.push(new ENMergeDateTimeRefiner),options.refiners.push(new ENMergeDateRangeRefiner),options}};var Chrono=class _Chrono{static{__name(this,"Chrono")}constructor(configuration2){this.defaultConfig=new ENDefaultConfiguration,configuration2=configuration2||this.defaultConfig.createCasualConfiguration(),this.parsers=[...configuration2.parsers],this.refiners=[...configuration2.refiners]}clone(){return new _Chrono({parsers:[...this.parsers],refiners:[...this.refiners]})}parseDate(text,referenceDate,option){let results=this.parse(text,referenceDate,option);return results.length>0?results[0].start.date():null}parse(text,referenceDate,option){let context=new ParsingContext(text,referenceDate,option),results=[];return this.parsers.forEach(parser=>{let parsedResults=_Chrono.executeParser(context,parser);results=results.concat(parsedResults)}),results.sort((a,b)=>a.index-b.index),this.refiners.forEach(function(refiner){results=refiner.refine(context,results)}),results}static executeParser(context,parser){let results=[],pattern=parser.pattern(context),originalText=context.text,remainingText=context.text,match=pattern.exec(remainingText);for(;match;){let index=match.index+originalText.length-remainingText.length;match.index=index;let result=parser.extract(context,match);if(!result){remainingText=originalText.substring(match.index+1),match=pattern.exec(remainingText);continue}let parsedResult=null;result instanceof ParsingResult?parsedResult=result:result instanceof ParsingComponents?(parsedResult=context.createParsingResult(match.index,match[0]),parsedResult.start=result):parsedResult=context.createParsingResult(match.index,match[0],result);let parsedIndex=parsedResult.index,parsedText=parsedResult.text;context.debug(()=>console.log(`${parser.constructor.name} extracted (at index=${parsedIndex}) '${parsedText}'`)),results.push(parsedResult),remainingText=originalText.substring(parsedIndex+parsedText.length),match=pattern.exec(remainingText)}return results}},ParsingContext=class{static{__name(this,"ParsingContext")}constructor(text,refDate,option){this.text=text,this.reference=new ReferenceWithTimezone(refDate),this.option=option??{},this.refDate=this.reference.instant}createParsingComponents(components){return components instanceof ParsingComponents?components:new ParsingComponents(this.reference,components)}createParsingResult(index,textOrEndIndex,startComponents,endComponents){let text=typeof textOrEndIndex=="string"?textOrEndIndex:this.text.substring(index,textOrEndIndex),start=startComponents?this.createParsingComponents(startComponents):null,end=endComponents?this.createParsingComponents(endComponents):null;return new ParsingResult(this.reference,index,text,start,end)}debug(block){this.option.debug&&(this.option.debug instanceof Function?this.option.debug(block):this.option.debug.debug(block))}};var configuration=new ENDefaultConfiguration,casual=new Chrono(configuration.createCasualConfiguration(!1)),strict=new Chrono(configuration.createConfiguration(!0,!1)),GB=new Chrono(configuration.createCasualConfiguration(!0));var casual2=casual;function parseDate(text,ref,option){return casual2.parseDate(text,ref,option)}__name(parseDate,"parseDate");import{findUp}from"find-up";import{fromMarkdown}from"mdast-util-from-markdown";import{toString as mdastToString}from"mdast-util-to-string";function type(input){if(input===null)return"Null";if(input===void 0)return"Undefined";if(Number.isNaN(input))return"NaN";let typeResult=Object.prototype.toString.call(input).slice(8,-1);return typeResult==="AsyncFunction"?"Promise":typeResult}__name(type,"type");function tryCatchAsync(fn,fallback){return(...inputs)=>new Promise(resolve=>{fn(...inputs).then(resolve).catch(err=>{if(type(fallback)!=="Function")return resolve(fallback);if(type(fallback)!=="Promise")return resolve(fallback(err,...inputs));fallback(err,...inputs).then(resolve).catch(resolve)})})}__name(tryCatchAsync,"tryCatchAsync");var spdx_default={"GPL-1.0-or-later":{name:"GNU General Public License v1.0 or later",url:"https://www.gnu.org/licenses/old-licenses/gpl-1.0-standalone.html",osiApproved:!1},NOSL:{name:"Netizen Open Source License",url:"http://bits.netizen.com.au/licenses/NOSL/nosl.txt",osiApproved:!1},AML:{name:"Apple MIT License",url:"https://fedoraproject.org/wiki/Licensing/Apple_MIT_License",osiApproved:!1},"SPL-1.0":{name:"Sun Public License v1.0",url:"https://opensource.org/licenses/SPL-1.0",osiApproved:!0},Jam:{name:"Jam License",url:"https://www.boost.org/doc/libs/1_35_0/doc/html/jam.html",osiApproved:!0},radvd:{name:"radvd License",url:"https://github.com/radvd-project/radvd/blob/master/COPYRIGHT",osiApproved:!1},"GFDL-1.1-no-invariants-only":{name:"GNU Free Documentation License v1.1 only - no invariants",url:"https://www.gnu.org/licenses/old-licenses/fdl-1.1.txt",osiApproved:!1},"GFDL-1.1-no-invariants-or-later":{name:"GNU Free Documentation License v1.1 or later - no invariants",url:"https://www.gnu.org/licenses/old-licenses/fdl-1.1.txt",osiApproved:!1},"ASWF-Digital-Assets-1.1":{name:"ASWF Digital Assets License 1.1",url:"https://github.com/AcademySoftwareFoundation/foundation/blob/main/digital_assets/aswf_digital_assets_license_v1.1.txt",osiApproved:!1},"OLDAP-2.6":{name:"Open LDAP Public License v2.6",url:"http://www.openldap.org/devel/gitweb.cgi?p=openldap.git;a=blob;f=LICENSE;hb=1cae062821881f41b73012ba816434897abf4205",osiApproved:!1},"HPND-INRIA-IMAG":{name:"Historical Permission Notice and Disclaimer    - INRIA-IMAG variant",url:"https://github.com/ppp-project/ppp/blob/master/pppd/ipv6cp.c#L75-L83",osiApproved:!1},"PHP-3.01":{name:"PHP License v3.01",url:"http://www.php.net/license/3_01.txt",osiApproved:!0},"LGPL-2.1+":{name:"GNU Lesser General Public License v2.1 or later",url:"https://www.gnu.org/licenses/old-licenses/lgpl-2.1-standalone.html",osiApproved:!0},W3C:{name:"W3C Software Notice and License (2002-12-31)",url:"http://www.w3.org/Consortium/Legal/2002/copyright-software-20021231.html",osiApproved:!0},"GFDL-1.2-no-invariants-or-later":{name:"GNU Free Documentation License v1.2 or later - no invariants",url:"https://www.gnu.org/licenses/old-licenses/fdl-1.2.txt",osiApproved:!1},"Boehm-GC":{name:"Boehm-Demers-Weiser GC License",url:"https://fedoraproject.org/wiki/Licensing:MIT#Another_Minimal_variant_(found_in_libatomic_ops)",osiApproved:!1},"SGI-B-1.1":{name:"SGI Free Software License B v1.1",url:"http://oss.sgi.com/projects/FreeB/",osiApproved:!1},xinetd:{name:"xinetd License",url:"https://fedoraproject.org/wiki/Licensing/Xinetd_License",osiApproved:!1},"CC-BY-ND-1.0":{name:"Creative Commons Attribution No Derivatives 1.0 Generic",url:"https://creativecommons.org/licenses/by-nd/1.0/legalcode",osiApproved:!1},"OSET-PL-2.1":{name:"OSET Public License version 2.1",url:"http://www.osetfoundation.org/public-license",osiApproved:!0},libtiff:{name:"libtiff License",url:"https://fedoraproject.org/wiki/Licensing/libtiff",osiApproved:!1},"Elastic-2.0":{name:"Elastic License 2.0",url:"https://www.elastic.co/licensing/elastic-license",osiApproved:!1},MakeIndex:{name:"MakeIndex License",url:"https://fedoraproject.org/wiki/Licensing/MakeIndex",osiApproved:!1},MirOS:{name:"The MirOS Licence",url:"https://opensource.org/licenses/MirOS",osiApproved:!0},"Sendmail-8.23":{name:"Sendmail License 8.23",url:"https://www.proofpoint.com/sites/default/files/sendmail-license.pdf",osiApproved:!1},"SGI-B-1.0":{name:"SGI Free Software License B v1.0",url:"http://oss.sgi.com/projects/FreeB/SGIFreeSWLicB.1.0.html",osiApproved:!1},"EUPL-1.1":{name:"European Union Public License 1.1",url:"https://joinup.ec.europa.eu/software/page/eupl/licence-eupl",osiApproved:!0},"YPL-1.0":{name:"Yahoo! Public License v1.0",url:"http://www.zimbra.com/license/yahoo_public_license_1.0.html",osiApproved:!1},TTWL:{name:"Text-Tabs+Wrap License",url:"https://fedoraproject.org/wiki/Licensing/TTWL",osiApproved:!1},"CC-BY-NC-1.0":{name:"Creative Commons Attribution Non Commercial 1.0 Generic",url:"https://creativecommons.org/licenses/by-nc/1.0/legalcode",osiApproved:!1},"HPND-doc":{name:"Historical Permission Notice and Disclaimer - documentation variant",url:"https://gitlab.freedesktop.org/xorg/lib/libxext/-/blob/master/COPYING?ref_type=heads#L185-197",osiApproved:!1},"D-FSL-1.0":{name:"Deutsche Freie Software Lizenz",url:"http://www.dipp.nrw.de/d-fsl/lizenzen/",osiApproved:!1},"OLDAP-2.2.1":{name:"Open LDAP Public License v2.2.1",url:"http://www.openldap.org/devel/gitweb.cgi?p=openldap.git;a=blob;f=LICENSE;hb=4bc786f34b50aa301be6f5600f58a980070f481e",osiApproved:!1},"SugarCRM-1.1.3":{name:"SugarCRM Public License v1.1.3",url:"http://www.sugarcrm.com/crm/SPL",osiApproved:!1},"EUPL-1.2":{name:"European Union Public License 1.2",url:"https://joinup.ec.europa.eu/page/eupl-text-11-12",osiApproved:!0},Aladdin:{name:"Aladdin Free Public License",url:"http://pages.cs.wisc.edu/~ghost/doc/AFPL/6.01/Public.htm",osiApproved:!1},"BSD-Source-Code":{name:"BSD Source Code Attribution",url:"https://github.com/robbiehanson/CocoaHTTPServer/blob/master/LICENSE.txt",osiApproved:!1},"MIT-feh":{name:"feh License",url:"https://fedoraproject.org/wiki/Licensing/MIT#feh",osiApproved:!1},"CC-BY-3.0-US":{name:"Creative Commons Attribution 3.0 United States",url:"https://creativecommons.org/licenses/by/3.0/us/legalcode",osiApproved:!1},"HP-1986":{name:"Hewlett-Packard 1986 License",url:"https://sourceware.org/git/?p=newlib-cygwin.git;a=blob;f=newlib/libc/machine/hppa/memchr.S;h=1cca3e5e8867aa4bffef1f75a5c1bba25c0c441e;hb=HEAD#l2",osiApproved:!1},"ECL-1.0":{name:"Educational Community License v1.0",url:"https://opensource.org/licenses/ECL-1.0",osiApproved:!0},"CC-BY-NC-SA-3.0":{name:"Creative Commons Attribution Non Commercial Share Alike 3.0 Unported",url:"https://creativecommons.org/licenses/by-nc-sa/3.0/legalcode",osiApproved:!1},"Mackerras-3-Clause":{name:"Mackerras 3-Clause License",url:"https://github.com/ppp-project/ppp/blob/master/pppd/chap_ms.c#L6-L28",osiApproved:!1},Soundex:{name:"Soundex License",url:"https://metacpan.org/release/RJBS/Text-Soundex-3.05/source/Soundex.pm#L3-11",osiApproved:!1},"MIT-Modern-Variant":{name:"MIT License Modern Variant",url:"https://fedoraproject.org/wiki/Licensing:MIT#Modern_Variants",osiApproved:!0},NCSA:{name:"University of Illinois/NCSA Open Source License",url:"http://otm.illinois.edu/uiuc_openSource",osiApproved:!0},"BSD-4-Clause-Shortened":{name:"BSD 4 Clause Shortened",url:"https://metadata.ftp-master.debian.org/changelogs//main/a/arpwatch/arpwatch_2.1a15-7_copyright",osiApproved:!1},"CC-BY-NC-ND-3.0-DE":{name:"Creative Commons Attribution Non Commercial No Derivatives 3.0 Germany",url:"https://creativecommons.org/licenses/by-nc-nd/3.0/de/legalcode",osiApproved:!1},"NICTA-1.0":{name:"NICTA Public Software License, Version 1.0",url:"https://opensource.apple.com/source/mDNSResponder/mDNSResponder-320.10/mDNSPosix/nss_ReadMe.txt",osiApproved:!1},"NIST-PD-fallback":{name:"NIST Public Domain Notice with license fallback",url:"https://github.com/usnistgov/jsip/blob/59700e6926cbe96c5cdae897d9a7d2656b42abe3/LICENSE",osiApproved:!1},Beerware:{name:"Beerware License",url:"https://fedoraproject.org/wiki/Licensing/Beerware",osiApproved:!1},"HPND-sell-variant-MIT-disclaimer":{name:"HPND sell variant with MIT disclaimer",url:"https://github.com/sigmavirus24/x11-ssh-askpass/blob/master/README",osiApproved:!1},"CECILL-C":{name:"CeCILL-C Free Software License Agreement",url:"http://www.cecill.info/licences/Licence_CeCILL-C_V1-en.html",osiApproved:!1},"CC-BY-NC-ND-2.0":{name:"Creative Commons Attribution Non Commercial No Derivatives 2.0 Generic",url:"https://creativecommons.org/licenses/by-nc-nd/2.0/legalcode",osiApproved:!1},"GPL-2.0-with-GCC-exception":{name:"GNU General Public License v2.0 w/GCC Runtime Library exception",url:"https://gcc.gnu.org/git/?p=gcc.git;a=blob;f=gcc/libgcc1.c;h=762f5143fc6eed57b6797c82710f3538aa52b40b;hb=cb143a3ce4fb417c68f5fa2691a1b1b1053dfba9#l10",osiApproved:!1},xpp:{name:"XPP License",url:"https://fedoraproject.org/wiki/Licensing/xpp",osiApproved:!1},"BSD-2-Clause-FreeBSD":{name:"BSD 2-Clause FreeBSD License",url:"http://www.freebsd.org/copyright/freebsd-license.html",osiApproved:!1},Bahyph:{name:"Bahyph License",url:"https://fedoraproject.org/wiki/Licensing/Bahyph",osiApproved:!1},Unlicense:{name:"The Unlicense",url:"https://unlicense.org/",osiApproved:!0},"OLDAP-2.0.1":{name:"Open LDAP Public License v2.0.1",url:"http://www.openldap.org/devel/gitweb.cgi?p=openldap.git;a=blob;f=LICENSE;hb=b6d68acd14e51ca3aab4428bf26522aa74873f0e",osiApproved:!1},"CECILL-1.0":{name:"CeCILL Free Software License Agreement v1.0",url:"http://www.cecill.info/licences/Licence_CeCILL_V1-fr.html",osiApproved:!1},"NBPL-1.0":{name:"Net Boolean Public License v1",url:"http://www.openldap.org/devel/gitweb.cgi?p=openldap.git;a=blob;f=LICENSE;hb=37b4b3f6cc4bf34e1d3dec61e69914b9819d8894",osiApproved:!1},"Lucida-Bitmap-Fonts":{name:"Lucida Bitmap Fonts License",url:"https://gitlab.freedesktop.org/xorg/font/bh-100dpi/-/blob/master/COPYING?ref_type=heads",osiApproved:!1},SMLNJ:{name:"Standard ML of New Jersey License",url:"https://www.smlnj.org/license.html",osiApproved:!1},"ASWF-Digital-Assets-1.0":{name:"ASWF Digital Assets License version 1.0",url:"https://github.com/AcademySoftwareFoundation/foundation/blob/main/digital_assets/aswf_digital_assets_license_v1.0.txt",osiApproved:!1},"LiLiQ-R-1.1":{name:"Licence Libre du Québec – Réciprocité version 1.1",url:"https://www.forge.gouv.qc.ca/participez/licence-logicielle/licence-libre-du-quebec-liliq-en-francais/licence-libre-du-quebec-reciprocite-liliq-r-v1-1/",osiApproved:!0},NLPL:{name:"No Limit Public License",url:"https://fedoraproject.org/wiki/Licensing/NLPL",osiApproved:!1},"FSFAP-no-warranty-disclaimer":{name:"FSF All Permissive License (without Warranty)",url:"https://git.savannah.gnu.org/cgit/wget.git/tree/util/trunc.c?h=v1.21.3&id=40747a11e44ced5a8ac628a41f879ced3e2ebce9#n6",osiApproved:!1},"Graphics-Gems":{name:"Graphics Gems License",url:"https://github.com/erich666/GraphicsGems/blob/master/LICENSE.md",osiApproved:!1},"CC-BY-2.0":{name:"Creative Commons Attribution 2.0 Generic",url:"https://creativecommons.org/licenses/by/2.0/legalcode",osiApproved:!1},"CC-BY-NC-ND-3.0":{name:"Creative Commons Attribution Non Commercial No Derivatives 3.0 Unported",url:"https://creativecommons.org/licenses/by-nc-nd/3.0/legalcode",osiApproved:!1},"Net-SNMP":{name:"Net-SNMP License",url:"http://net-snmp.sourceforge.net/about/license.html",osiApproved:!1},"OSL-3.0":{name:"Open Software License 3.0",url:"https://web.archive.org/web/20120101081418/http://rosenlaw.com:80/OSL3.0.htm",osiApproved:!0},"FreeBSD-DOC":{name:"FreeBSD Documentation License",url:"https://www.freebsd.org/copyright/freebsd-doc-license/",osiApproved:!1},dtoa:{name:"David M. Gay dtoa License",url:"https://github.com/SWI-Prolog/swipl-devel/blob/master/src/os/dtoa.c",osiApproved:!1},"GFDL-1.2-no-invariants-only":{name:"GNU Free Documentation License v1.2 only - no invariants",url:"https://www.gnu.org/licenses/old-licenses/fdl-1.2.txt",osiApproved:!1},pnmstitch:{name:"pnmstitch License",url:"https://sourceforge.net/p/netpbm/code/HEAD/tree/super_stable/editor/pnmstitch.c#l2",osiApproved:!1},"MIT-advertising":{name:"Enlightenment License (e16)",url:"https://fedoraproject.org/wiki/Licensing/MIT_With_Advertising",osiApproved:!1},"0BSD":{name:"BSD Zero Clause License",url:"http://landley.net/toybox/license.html",osiApproved:!0},"ZPL-1.1":{name:"Zope Public License 1.1",url:"http://old.zope.org/Resources/License/ZPL-1.1",osiApproved:!1},"OFL-1.1-RFN":{name:"SIL Open Font License 1.1 with Reserved Font Name",url:"http://scripts.sil.org/cms/scripts/page.php?item_id=OFL_web",osiApproved:!0},"Watcom-1.0":{name:"Sybase Open Watcom Public License 1.0",url:"https://opensource.org/licenses/Watcom-1.0",osiApproved:!0},DOC:{name:"DOC License",url:"http://www.cs.wustl.edu/~schmidt/ACE-copying.html",osiApproved:!1},"LGPL-3.0-only":{name:"GNU Lesser General Public License v3.0 only",url:"https://www.gnu.org/licenses/lgpl-3.0-standalone.html",osiApproved:!0},"ssh-keyscan":{name:"ssh-keyscan License",url:"https://github.com/openssh/openssh-portable/blob/master/LICENCE#L82",osiApproved:!1},"LPPL-1.3c":{name:"LaTeX Project Public License v1.3c",url:"http://www.latex-project.org/lppl/lppl-1-3c.txt",osiApproved:!0},"OGC-1.0":{name:"OGC Software License, Version 1.0",url:"https://www.ogc.org/ogc/software/1.0",osiApproved:!1},Entessa:{name:"Entessa Public License v1.0",url:"https://opensource.org/licenses/Entessa",osiApproved:!0},"UCL-1.0":{name:"Upstream Compatibility License v1.0",url:"https://opensource.org/licenses/UCL-1.0",osiApproved:!0},"BSD-3-Clause-Modification":{name:"BSD 3-Clause Modification",url:"https://fedoraproject.org/wiki/Licensing:BSD#Modification_Variant",osiApproved:!1},IJG:{name:"Independent JPEG Group License",url:"http://dev.w3.org/cvsweb/Amaya/libjpeg/Attic/README?rev=1.2",osiApproved:!1},"OFL-1.0":{name:"SIL Open Font License 1.0",url:"http://scripts.sil.org/cms/scripts/page.php?item_id=OFL10_web",osiApproved:!1},GD:{name:"GD License",url:"https://libgd.github.io/manuals/2.3.0/files/license-txt.html",osiApproved:!1},Fair:{name:"Fair License",url:"https://web.archive.org/web/20150926120323/http://fairlicense.org/",osiApproved:!0},"NIST-Software":{name:"NIST Software License",url:"https://github.com/open-quantum-safe/liboqs/blob/40b01fdbb270f8614fde30e65d30e9da18c02393/src/common/rand/rand_nist.c#L1-L15",osiApproved:!1},SunPro:{name:"SunPro License",url:"https://github.com/freebsd/freebsd-src/blob/main/lib/msun/src/e_acosh.c",osiApproved:!1},FSFULLR:{name:"FSF Unlimited License (with License Retention)",url:"https://fedoraproject.org/wiki/Licensing/FSF_Unlimited_License#License_Retention_Variant",osiApproved:!1},"GFDL-1.2":{name:"GNU Free Documentation License v1.2",url:"https://www.gnu.org/licenses/old-licenses/fdl-1.2.txt",osiApproved:!1},"TU-Berlin-1.0":{name:"Technische Universitaet Berlin License 1.0",url:"https://github.com/swh/ladspa/blob/7bf6f3799fdba70fda297c2d8fd9f526803d9680/gsm/COPYRIGHT",osiApproved:!1},"CC-BY-NC-SA-1.0":{name:"Creative Commons Attribution Non Commercial Share Alike 1.0 Generic",url:"https://creativecommons.org/licenses/by-nc-sa/1.0/legalcode",osiApproved:!1},AMDPLPA:{name:"AMD's plpa_map.c License",url:"https://fedoraproject.org/wiki/Licensing/AMD_plpa_map_License",osiApproved:!1},"GFDL-1.3-no-invariants-only":{name:"GNU Free Documentation License v1.3 only - no invariants",url:"https://www.gnu.org/licenses/fdl-1.3.txt",osiApproved:!1},eGenix:{name:"eGenix.com Public License 1.1.0",url:"http://www.egenix.com/products/eGenix.com-Public-License-1.1.0.pdf",osiApproved:!1},JPNIC:{name:"Japan Network Information Center License",url:"https://gitlab.isc.org/isc-projects/bind9/blob/master/COPYRIGHT#L366",osiApproved:!1},"CC-BY-NC-3.0":{name:"Creative Commons Attribution Non Commercial 3.0 Unported",url:"https://creativecommons.org/licenses/by-nc/3.0/legalcode",osiApproved:!1},"Linux-man-pages-copyleft-var":{name:"Linux man-pages Copyleft Variant",url:"https://git.kernel.org/pub/scm/docs/man-pages/man-pages.git/tree/man2/set_mempolicy.2#n5",osiApproved:!1},"AFL-1.1":{name:"Academic Free License v1.1",url:"http://opensource.linux-mirror.org/licenses/afl-1.1.txt",osiApproved:!0},"HPND-UC":{name:"Historical Permission Notice and Disclaimer - University of California variant",url:"https://core.tcl-lang.org/tk/file?name=compat/unistd.h",osiApproved:!1},"AdaCore-doc":{name:"AdaCore Doc License",url:"https://github.com/AdaCore/xmlada/blob/master/docs/index.rst",osiApproved:!1},"GPL-3.0-or-later":{name:"GNU General Public License v3.0 or later",url:"https://www.gnu.org/licenses/gpl-3.0-standalone.html",osiApproved:!0},"CC-BY-3.0-DE":{name:"Creative Commons Attribution 3.0 Germany",url:"https://creativecommons.org/licenses/by/3.0/de/legalcode",osiApproved:!1},checkmk:{name:"Checkmk License",url:"https://github.com/libcheck/check/blob/master/checkmk/checkmk.in",osiApproved:!1},"LPPL-1.0":{name:"LaTeX Project Public License v1.0",url:"http://www.latex-project.org/lppl/lppl-1-0.txt",osiApproved:!1},Borceux:{name:"Borceux license",url:"https://fedoraproject.org/wiki/Licensing/Borceux",osiApproved:!1},"mpi-permissive":{name:"mpi Permissive License",url:"https://sources.debian.org/src/openmpi/4.1.0-10/ompi/debuggers/msgq_interface.h/?hl=19#L19",osiApproved:!1},"HPND-DEC":{name:"Historical Permission Notice and Disclaimer - DEC variant",url:"https://gitlab.freedesktop.org/xorg/app/xkbcomp/-/blob/master/COPYING?ref_type=heads#L69",osiApproved:!1},"OPL-1.0":{name:"Open Public License v1.0",url:"http://old.koalateam.com/jackaroo/OPL_1_0.TXT",osiApproved:!1},"GPL-2.0-with-bison-exception":{name:"GNU General Public License v2.0 w/Bison exception",url:"http://git.savannah.gnu.org/cgit/bison.git/tree/data/yacc.c?id=193d7c7054ba7197b0789e14965b739162319b5e#n141",osiApproved:!1},"O-UDA-1.0":{name:"Open Use of Data Agreement v1.0",url:"https://github.com/microsoft/Open-Use-of-Data-Agreement/blob/v1.0/O-UDA-1.0.md",osiApproved:!1},NetCDF:{name:"NetCDF license",url:"http://www.unidata.ucar.edu/software/netcdf/copyright.html",osiApproved:!1},"OLDAP-1.4":{name:"Open LDAP Public License v1.4",url:"http://www.openldap.org/devel/gitweb.cgi?p=openldap.git;a=blob;f=LICENSE;hb=c9f95c2f3f2ffb5e0ae55fe7388af75547660941",osiApproved:!1},"GPL-3.0-with-autoconf-exception":{name:"GNU General Public License v3.0 w/Autoconf exception",url:"https://www.gnu.org/licenses/autoconf-exception-3.0.html",osiApproved:!1},"CC-BY-4.0":{name:"Creative Commons Attribution 4.0 International",url:"https://creativecommons.org/licenses/by/4.0/legalcode",osiApproved:!1},"App-s2p":{name:"App::s2p License",url:"https://fedoraproject.org/wiki/Licensing/App-s2p",osiApproved:!1},MIT:{name:"MIT License",url:"https://opensource.org/license/mit/",osiApproved:!0},Xnet:{name:"X.Net License",url:"https://opensource.org/licenses/Xnet",osiApproved:!0},Cube:{name:"Cube License",url:"https://fedoraproject.org/wiki/Licensing/Cube",osiApproved:!1},"BSD-3-Clause-Attribution":{name:"BSD with attribution",url:"https://fedoraproject.org/wiki/Licensing/BSD_with_Attribution",osiApproved:!1},Nokia:{name:"Nokia Open Source License",url:"https://opensource.org/licenses/nokia",osiApproved:!0},"MIT-enna":{name:"enna License",url:"https://fedoraproject.org/wiki/Licensing/MIT#enna",osiApproved:!1},"CC-BY-3.0-NL":{name:"Creative Commons Attribution 3.0 Netherlands",url:"https://creativecommons.org/licenses/by/3.0/nl/legalcode",osiApproved:!1},FreeImage:{name:"FreeImage Public License v1.0",url:"http://freeimage.sourceforge.net/freeimage-license.txt",osiApproved:!1},"OLDAP-2.8":{name:"Open LDAP Public License v2.8",url:"http://www.openldap.org/software/release/license.html",osiApproved:!0},"ANTLR-PD-fallback":{name:"ANTLR Software Rights Notice with license fallback",url:"http://www.antlr2.org/license.html",osiApproved:!1},"TPL-1.0":{name:"THOR Public License 1.0",url:"https://fedoraproject.org/wiki/Licensing:ThorPublicLicense",osiApproved:!1},LGPLLR:{name:"Lesser General Public License For Linguistic Resources",url:"http://www-igm.univ-mlv.fr/~unitex/lgpllr.html",osiApproved:!1},"Info-ZIP":{name:"Info-ZIP License",url:"http://www.info-zip.org/license.html",osiApproved:!1},"Unicode-DFS-2015":{name:"Unicode License Agreement - Data Files and Software (2015)",url:"https://web.archive.org/web/20151224134844/http://unicode.org/copyright.html",osiApproved:!1},HaskellReport:{name:"Haskell Language Report License",url:"https://fedoraproject.org/wiki/Licensing/Haskell_Language_Report_License",osiApproved:!1},"CC-BY-SA-3.0-IGO":{name:"Creative Commons Attribution-ShareAlike 3.0 IGO",url:"https://creativecommons.org/licenses/by-sa/3.0/igo/legalcode",osiApproved:!1},Libpng:{name:"libpng License",url:"http://www.libpng.org/pub/png/src/libpng-LICENSE.txt",osiApproved:!1},"ODC-By-1.0":{name:"Open Data Commons Attribution License v1.0",url:"https://opendatacommons.org/licenses/by/1.0/",osiApproved:!1},"OGL-UK-3.0":{name:"Open Government Licence v3.0",url:"http://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/",osiApproved:!1},"EPL-2.0":{name:"Eclipse Public License 2.0",url:"https://www.eclipse.org/legal/epl-2.0",osiApproved:!0},"GPL-2.0-with-classpath-exception":{name:"GNU General Public License v2.0 w/Classpath exception",url:"https://www.gnu.org/software/classpath/license.html",osiApproved:!1},PADL:{name:"PADL License",url:"https://git.openldap.org/openldap/openldap/-/blob/master/libraries/libldap/os-local.c?ref_type=heads#L19-23",osiApproved:!1},psutils:{name:"psutils License",url:"https://fedoraproject.org/wiki/Licensing/psutils",osiApproved:!1},"APSL-2.0":{name:"Apple Public Source License 2.0",url:"http://www.opensource.apple.com/license/apsl/",osiApproved:!0},Dotseqn:{name:"Dotseqn License",url:"https://fedoraproject.org/wiki/Licensing/Dotseqn",osiApproved:!1},"OFL-1.0-no-RFN":{name:"SIL Open Font License 1.0 with no Reserved Font Name",url:"http://scripts.sil.org/cms/scripts/page.php?item_id=OFL10_web",osiApproved:!1},psfrag:{name:"psfrag License",url:"https://fedoraproject.org/wiki/Licensing/psfrag",osiApproved:!1},CFITSIO:{name:"CFITSIO License",url:"https://heasarc.gsfc.nasa.gov/docs/software/fitsio/c/f_user/node9.html",osiApproved:!1},"Frameworx-1.0":{name:"Frameworx Open License 1.0",url:"https://opensource.org/licenses/Frameworx-1.0",osiApproved:!0},ICU:{name:"ICU License",url:"http://source.icu-project.org/repos/icu/icu/trunk/license.html",osiApproved:!0},"CDDL-1.0":{name:"Common Development and Distribution License 1.0",url:"https://opensource.org/licenses/cddl1",osiApproved:!0},"GCR-docs":{name:"Gnome GCR Documentation License",url:"https://github.com/GNOME/gcr/blob/master/docs/COPYING",osiApproved:!1},"SSPL-1.0":{name:"Server Side Public License, v 1",url:"https://www.mongodb.com/licensing/server-side-public-license",osiApproved:!1},lsof:{name:"lsof License",url:"https://github.com/lsof-org/lsof/blob/master/COPYING",osiApproved:!1},"CAL-1.0-Combined-Work-Exception":{name:"Cryptographic Autonomy License 1.0 (Combined Work Exception)",url:"http://cryptographicautonomylicense.com/license-text.html",osiApproved:!0},snprintf:{name:"snprintf License",url:"https://github.com/openssh/openssh-portable/blob/master/openbsd-compat/bsd-snprintf.c#L2",osiApproved:!1},mplus:{name:"mplus Font License",url:"https://fedoraproject.org/wiki/Licensing:Mplus?rd=Licensing/mplus",osiApproved:!1},"BitTorrent-1.1":{name:"BitTorrent Open Source License v1.1",url:"http://directory.fsf.org/wiki/License:BitTorrentOSL1.1",osiApproved:!1},"CC-BY-SA-2.1-JP":{name:"Creative Commons Attribution Share Alike 2.1 Japan",url:"https://creativecommons.org/licenses/by-sa/2.1/jp/legalcode",osiApproved:!1},"OFL-1.1":{name:"SIL Open Font License 1.1",url:"http://scripts.sil.org/cms/scripts/page.php?item_id=OFL_web",osiApproved:!0},mpich2:{name:"mpich2 License",url:"https://fedoraproject.org/wiki/Licensing/MIT",osiApproved:!1},"UPL-1.0":{name:"Universal Permissive License v1.0",url:"https://opensource.org/licenses/UPL",osiApproved:!0},"bcrypt-Solar-Designer":{name:"bcrypt Solar Designer License",url:"https://github.com/bcrypt-ruby/bcrypt-ruby/blob/master/ext/mri/crypt_blowfish.c",osiApproved:!1},Clips:{name:"Clips License",url:"https://github.com/DrItanium/maya/blob/master/LICENSE.CLIPS",osiApproved:!1},"RPSL-1.0":{name:"RealNetworks Public Source License v1.0",url:"https://helixcommunity.org/content/rpsl",osiApproved:!0},"SAX-PD":{name:"Sax Public Domain Notice",url:"http://www.saxproject.org/copying.html",osiApproved:!1},"YPL-1.1":{name:"Yahoo! Public License v1.1",url:"http://www.zimbra.com/license/yahoo_public_license_1.1.html",osiApproved:!1},Xfig:{name:"Xfig License",url:"https://github.com/Distrotech/transfig/blob/master/transfig/transfig.c",osiApproved:!1},Afmparse:{name:"Afmparse License",url:"https://fedoraproject.org/wiki/Licensing/Afmparse",osiApproved:!1},"eCos-2.0":{name:"eCos license version 2.0",url:"https://www.gnu.org/licenses/ecos-license.html",osiApproved:!1},"CECILL-2.1":{name:"CeCILL Free Software License Agreement v2.1",url:"http://www.cecill.info/licences/Licence_CeCILL_V2.1-en.html",osiApproved:!0},"OLDAP-2.2":{name:"Open LDAP Public License v2.2",url:"http://www.openldap.org/devel/gitweb.cgi?p=openldap.git;a=blob;f=LICENSE;hb=470b0c18ec67621c85881b2733057fecf4a1acc3",osiApproved:!1},"CPOL-1.02":{name:"Code Project Open License 1.02",url:"http://www.codeproject.com/info/cpol10.aspx",osiApproved:!1},Zeeff:{name:"Zeeff License",url:"ftp://ftp.tin.org/pub/news/utils/newsx/newsx-1.6.tar.gz",osiApproved:!1},"OLDAP-2.7":{name:"Open LDAP Public License v2.7",url:"http://www.openldap.org/devel/gitweb.cgi?p=openldap.git;a=blob;f=LICENSE;hb=47c2415c1df81556eeb39be6cad458ef87c534a2",osiApproved:!1},Minpack:{name:"Minpack License",url:"http://www.netlib.org/minpack/disclaimer",osiApproved:!1},"LGPL-2.1-only":{name:"GNU Lesser General Public License v2.1 only",url:"https://www.gnu.org/licenses/old-licenses/lgpl-2.1-standalone.html",osiApproved:!0},"CPL-1.0":{name:"Common Public License 1.0",url:"https://opensource.org/licenses/CPL-1.0",osiApproved:!0},"LAL-1.3":{name:"Licence Art Libre 1.3",url:"https://artlibre.org/",osiApproved:!1},"MPL-1.1":{name:"Mozilla Public License 1.1",url:"http://www.mozilla.org/MPL/MPL-1.1.html",osiApproved:!0},"HPND-doc-sell":{name:"Historical Permission Notice and Disclaimer - documentation sell variant",url:"https://gitlab.freedesktop.org/xorg/lib/libxtst/-/blob/master/COPYING?ref_type=heads#L108-117",osiApproved:!1},"Zimbra-1.4":{name:"Zimbra Public License v1.4",url:"http://www.zimbra.com/legal/zimbra-public-license-1-4",osiApproved:!1},"NTP-0":{name:"NTP No Attribution",url:"https://github.com/tytso/e2fsprogs/blob/master/lib/et/et_name.c",osiApproved:!1},Intel:{name:"Intel Open Source License",url:"https://opensource.org/licenses/Intel",osiApproved:!0},"Linux-man-pages-1-para":{name:"Linux man-pages - 1 paragraph",url:"https://git.kernel.org/pub/scm/docs/man-pages/man-pages.git/tree/man2/getcpu.2#n4",osiApproved:!1},"BSD-3-Clause-HP":{name:"Hewlett-Packard BSD variant license",url:"https://github.com/zdohnal/hplip/blob/master/COPYING#L939",osiApproved:!1},SL:{name:"SL License",url:"https://github.com/mtoyoda/sl/blob/master/LICENSE",osiApproved:!1},EUDatagrid:{name:"EU DataGrid Software License",url:"http://eu-datagrid.web.cern.ch/eu-datagrid/license.html",osiApproved:!0},"BSD-3-Clause-No-Nuclear-License":{name:"BSD 3-Clause No Nuclear License",url:"http://download.oracle.com/otn-pub/java/licenses/bsd.txt?AuthParam=1467140197_43d516ce1776bd08a58235a7785be1cc",osiApproved:!1},SMPPL:{name:"Secure Messaging Protocol Public License",url:"https://github.com/dcblake/SMP/blob/master/Documentation/License.txt",osiApproved:!1},"TCP-wrappers":{name:"TCP Wrappers License",url:"http://rc.quest.com/topics/openssh/license.php#tcpwrappers",osiApproved:!1},"GFDL-1.1":{name:"GNU Free Documentation License v1.1",url:"https://www.gnu.org/licenses/old-licenses/fdl-1.1.txt",osiApproved:!1},"GFDL-1.1-or-later":{name:"GNU Free Documentation License v1.1 or later",url:"https://www.gnu.org/licenses/old-licenses/fdl-1.1.txt",osiApproved:!1},"CC-BY-SA-2.0-UK":{name:"Creative Commons Attribution Share Alike 2.0 England and Wales",url:"https://creativecommons.org/licenses/by-sa/2.0/uk/legalcode",osiApproved:!1},"Xdebug-1.03":{name:"Xdebug License v 1.03",url:"https://github.com/xdebug/xdebug/blob/master/LICENSE",osiApproved:!1},"MS-LPL":{name:"Microsoft Limited Public License",url:"https://www.openhub.net/licenses/mslpl",osiApproved:!1},"BSD-2-Clause-Patent":{name:"BSD-2-Clause Plus Patent License",url:"https://opensource.org/licenses/BSDplusPatent",osiApproved:!0},"GPL-3.0+":{name:"GNU General Public License v3.0 or later",url:"https://www.gnu.org/licenses/gpl-3.0-standalone.html",osiApproved:!0},"MPEG-SSG":{name:"MPEG Software Simulation",url:"https://sourceforge.net/p/netpbm/code/HEAD/tree/super_stable/converter/ppm/ppmtompeg/jrevdct.c#l1189",osiApproved:!1},"CNRI-Jython":{name:"CNRI Jython License",url:"http://www.jython.org/license.html",osiApproved:!1},"HPND-Pbmplus":{name:"Historical Permission Notice and Disclaimer - Pbmplus variant",url:"https://sourceforge.net/p/netpbm/code/HEAD/tree/super_stable/netpbm.c#l8",osiApproved:!1},"CC-BY-NC-SA-3.0-IGO":{name:"Creative Commons Attribution Non Commercial Share Alike 3.0 IGO",url:"https://creativecommons.org/licenses/by-nc-sa/3.0/igo/legalcode",osiApproved:!1},"bzip2-1.0.6":{name:"bzip2 and libbzip2 License v1.0.6",url:"https://sourceware.org/git/?p=bzip2.git;a=blob;f=LICENSE;hb=bzip2-1.0.6",osiApproved:!1},TTYP0:{name:"TTYP0 License",url:"https://people.mpi-inf.mpg.de/~uwe/misc/uw-ttyp0/",osiApproved:!1},"TGPPL-1.0":{name:"Transitive Grace Period Public Licence 1.0",url:"https://fedoraproject.org/wiki/Licensing/TGPPL",osiApproved:!1},"NIST-PD":{name:"NIST Public Domain Notice",url:"https://github.com/tcheneau/simpleRPL/blob/e645e69e38dd4e3ccfeceb2db8cba05b7c2e0cd3/LICENSE.txt",osiApproved:!1},"NPL-1.0":{name:"Netscape Public License v1.0",url:"http://www.mozilla.org/MPL/NPL/1.0/",osiApproved:!1},SNIA:{name:"SNIA Public License 1.1",url:"https://fedoraproject.org/wiki/Licensing/SNIA_Public_License",osiApproved:!1},"libpng-2.0":{name:"PNG Reference Library version 2",url:"http://www.libpng.org/pub/png/src/libpng-LICENSE.txt",osiApproved:!1},"CC-BY-NC-ND-3.0-IGO":{name:"Creative Commons Attribution Non Commercial No Derivatives 3.0 IGO",url:"https://creativecommons.org/licenses/by-nc-nd/3.0/igo/legalcode",osiApproved:!1},OGTSL:{name:"Open Group Test Suite License",url:"http://www.opengroup.org/testing/downloads/The_Open_Group_TSL.txt",osiApproved:!0},Glide:{name:"3dfx Glide License",url:"http://www.users.on.net/~triforce/glidexp/COPYING.txt",osiApproved:!1},"BSD-3-Clause-No-Military-License":{name:"BSD 3-Clause No Military License",url:"https://gitlab.syncad.com/hive/dhive/-/blob/master/LICENSE",osiApproved:!1},"NLOD-1.0":{name:"Norwegian Licence for Open Government Data (NLOD) 1.0",url:"http://data.norge.no/nlod/en/1.0",osiApproved:!1},"CNRI-Python":{name:"CNRI Python License",url:"https://opensource.org/licenses/CNRI-Python",osiApproved:!0},JSON:{name:"JSON License",url:"http://www.json.org/license.html",osiApproved:!1},"AFL-2.1":{name:"Academic Free License v2.1",url:"http://opensource.linux-mirror.org/licenses/afl-2.1.txt",osiApproved:!0},Naumen:{name:"Naumen Public License",url:"https://opensource.org/licenses/Naumen",osiApproved:!0},"Artistic-2.0":{name:"Artistic License 2.0",url:"http://www.perlfoundation.org/artistic_license_2_0",osiApproved:!0},"CPAL-1.0":{name:"Common Public Attribution License 1.0",url:"https://opensource.org/licenses/CPAL-1.0",osiApproved:!0},"ECL-2.0":{name:"Educational Community License v2.0",url:"https://opensource.org/licenses/ECL-2.0",osiApproved:!0},mailprio:{name:"mailprio License",url:"https://fossies.org/linux/sendmail/contrib/mailprio",osiApproved:!1},"APL-1.0":{name:"Adaptive Public License 1.0",url:"https://opensource.org/licenses/APL-1.0",osiApproved:!0},FBM:{name:"Fuzzy Bitmap License",url:"https://github.com/SWI-Prolog/packages-xpce/blob/161a40cd82004f731ba48024f9d30af388a7edf5/src/img/gifwrite.c#L21-L26",osiApproved:!1},"AGPL-3.0-or-later":{name:"GNU Affero General Public License v3.0 or later",url:"https://www.gnu.org/licenses/agpl.txt",osiApproved:!0},"EPL-1.0":{name:"Eclipse Public License 1.0",url:"http://www.eclipse.org/legal/epl-v10.html",osiApproved:!0},SCEA:{name:"SCEA Shared Source License",url:"http://research.scea.com/scea_shared_source_license.html",osiApproved:!1},"PDDL-1.0":{name:"Open Data Commons Public Domain Dedication & License 1.0",url:"http://opendatacommons.org/licenses/pddl/1.0/",osiApproved:!1},"BSD-2-Clause":{name:'BSD 2-Clause "Simplified" License',url:"https://opensource.org/licenses/BSD-2-Clause",osiApproved:!0},"GPL-3.0":{name:"GNU General Public License v3.0 only",url:"https://www.gnu.org/licenses/gpl-3.0-standalone.html",osiApproved:!0},"Artistic-1.0-cl8":{name:"Artistic License 1.0 w/clause 8",url:"https://opensource.org/licenses/Artistic-1.0",osiApproved:!0},"CC-BY-3.0-AU":{name:"Creative Commons Attribution 3.0 Australia",url:"https://creativecommons.org/licenses/by/3.0/au/legalcode",osiApproved:!1},"Bitstream-Charter":{name:"Bitstream Charter Font License",url:"https://fedoraproject.org/wiki/Licensing/Charter#License_Text",osiApproved:!1},"CERN-OHL-W-2.0":{name:"CERN Open Hardware Licence Version 2 - Weakly Reciprocal",url:"https://www.ohwr.org/project/cernohl/wikis/Documents/CERN-OHL-version-2",osiApproved:!0},"MIT-0":{name:"MIT No Attribution",url:"https://github.com/aws/mit-0",osiApproved:!0},Sleepycat:{name:"Sleepycat License",url:"https://opensource.org/licenses/Sleepycat",osiApproved:!0},Pixar:{name:"Pixar License",url:"https://github.com/PixarAnimationStudios/OpenSubdiv/raw/v3_5_0/LICENSE.txt",osiApproved:!1},Qhull:{name:"Qhull License",url:"https://fedoraproject.org/wiki/Licensing/Qhull",osiApproved:!1},"CC-BY-SA-1.0":{name:"Creative Commons Attribution Share Alike 1.0 Generic",url:"https://creativecommons.org/licenses/by-sa/1.0/legalcode",osiApproved:!1},"CDL-1.0":{name:"Common Documentation License 1.0",url:"http://www.opensource.apple.com/cdl/",osiApproved:!1},"CC-BY-SA-3.0":{name:"Creative Commons Attribution Share Alike 3.0 Unported",url:"https://creativecommons.org/licenses/by-sa/3.0/legalcode",osiApproved:!1},"OGL-UK-1.0":{name:"Open Government Licence v1.0",url:"http://www.nationalarchives.gov.uk/doc/open-government-licence/version/1/",osiApproved:!1},"CC-BY-NC-SA-2.0-DE":{name:"Creative Commons Attribution Non Commercial Share Alike 2.0 Germany",url:"https://creativecommons.org/licenses/by-nc-sa/2.0/de/legalcode",osiApproved:!1},"XFree86-1.1":{name:"XFree86 License 1.1",url:"http://www.xfree86.org/current/LICENSE4.html",osiApproved:!1},NGPL:{name:"Nethack General Public License",url:"https://opensource.org/licenses/NGPL",osiApproved:!0},"BSD-3-Clause-No-Nuclear-License-2014":{name:"BSD 3-Clause No Nuclear License 2014",url:"https://java.net/projects/javaeetutorial/pages/BerkeleyLicense",osiApproved:!1},"MIT-testregex":{name:"MIT testregex Variant",url:"https://github.com/dotnet/runtime/blob/55e1ac7c07df62c4108d4acedf78f77574470ce5/src/libraries/System.Text.RegularExpressions/tests/FunctionalTests/AttRegexTests.cs#L12-L28",osiApproved:!1},"BSD-3-Clause-Clear":{name:"BSD 3-Clause Clear License",url:"http://labs.metacarta.com/license-explanation.html#license",osiApproved:!1},MMIXware:{name:"MMIXware License",url:"https://gitlab.lrz.de/mmix/mmixware/-/blob/master/boilerplate.w",osiApproved:!1},"LZMA-SDK-9.22":{name:"LZMA SDK License (versions 9.22 and beyond)",url:"https://www.7-zip.org/sdk.html",osiApproved:!1},Latex2e:{name:"Latex2e License",url:"https://fedoraproject.org/wiki/Licensing/Latex2e",osiApproved:!1},"LGPL-3.0+":{name:"GNU Lesser General Public License v3.0 or later",url:"https://www.gnu.org/licenses/lgpl-3.0-standalone.html",osiApproved:!0},"CECILL-B":{name:"CeCILL-B Free Software License Agreement",url:"http://www.cecill.info/licences/Licence_CeCILL-B_V1-en.html",osiApproved:!1},Kazlib:{name:"Kazlib License",url:"http://git.savannah.gnu.org/cgit/kazlib.git/tree/except.c?id=0062df360c2d17d57f6af19b0e444c51feb99036",osiApproved:!1},fwlw:{name:"fwlw License",url:"https://mirrors.nic.cz/tex-archive/macros/latex/contrib/fwlw/README",osiApproved:!1},"DRL-1.1":{name:"Detection Rule License 1.1",url:"https://github.com/SigmaHQ/Detection-Rule-License/blob/6ec7fbde6101d101b5b5d1fcb8f9b69fbc76c04a/LICENSE.Detection.Rules.md",osiApproved:!1},"BSD-Systemics":{name:"Systemics BSD variant license",url:"https://metacpan.org/release/DPARIS/Crypt-DES-2.07/source/COPYRIGHT",osiApproved:!1},"HPND-export-US-modify":{name:"HPND with US Government export control warning and modification rqmt",url:"https://github.com/krb5/krb5/blob/krb5-1.21.2-final/NOTICE#L1157-L1182",osiApproved:!1},"Caldera-no-preamble":{name:"Caldera License (without preamble)",url:"https://github.com/apache/apr/blob/trunk/LICENSE#L298C6-L298C29",osiApproved:!1},LOOP:{name:"Common Lisp LOOP License",url:"https://gitlab.com/embeddable-common-lisp/ecl/-/blob/develop/src/lsp/loop.lsp",osiApproved:!1},"GFDL-1.1-only":{name:"GNU Free Documentation License v1.1 only",url:"https://www.gnu.org/licenses/old-licenses/fdl-1.1.txt",osiApproved:!1},"NAIST-2003":{name:"Nara Institute of Science and Technology License (2003)",url:"https://enterprise.dejacode.com/licenses/public/naist-2003/#license-text",osiApproved:!1},"libselinux-1.0":{name:"libselinux public domain notice",url:"https://github.com/SELinuxProject/selinux/blob/master/libselinux/LICENSE",osiApproved:!1},AMPAS:{name:"Academy of Motion Picture Arts and Sciences BSD",url:"https://fedoraproject.org/wiki/Licensing/BSD#AMPASBSD",osiApproved:!1},gnuplot:{name:"gnuplot License",url:"https://fedoraproject.org/wiki/Licensing/Gnuplot",osiApproved:!1},"GFDL-1.1-invariants-or-later":{name:"GNU Free Documentation License v1.1 or later - invariants",url:"https://www.gnu.org/licenses/old-licenses/fdl-1.1.txt",osiApproved:!1},"OFL-1.1-no-RFN":{name:"SIL Open Font License 1.1 with no Reserved Font Name",url:"http://scripts.sil.org/cms/scripts/page.php?item_id=OFL_web",osiApproved:!0},"LPD-document":{name:"LPD Documentation License",url:"https://github.com/Cyan4973/xxHash/blob/dev/doc/xxhash_spec.md",osiApproved:!1},"Adobe-Display-PostScript":{name:"Adobe Display PostScript License",url:"https://gitlab.freedesktop.org/xorg/xserver/-/blob/master/COPYING?ref_type=heads#L752",osiApproved:!1},FSFAP:{name:"FSF All Permissive License",url:"https://www.gnu.org/prep/maintain/html_node/License-Notices-for-Other-Files.html",osiApproved:!1},wxWindows:{name:"wxWindows Library License",url:"https://opensource.org/licenses/WXwindows",osiApproved:!0},UnixCrypt:{name:"UnixCrypt License",url:"https://foss.heptapod.net/python-libs/passlib/-/blob/branch/stable/LICENSE#L70",osiApproved:!1},"OPL-UK-3.0":{name:"United    Kingdom Open Parliament Licence v3.0",url:"https://www.parliament.uk/site-information/copyright-parliament/open-parliament-licence/",osiApproved:!1},"Inner-Net-2.0":{name:"Inner Net License v2.0",url:"https://fedoraproject.org/wiki/Licensing/Inner_Net_License",osiApproved:!1},"Artistic-1.0":{name:"Artistic License 1.0",url:"https://opensource.org/licenses/Artistic-1.0",osiApproved:!0},magaz:{name:"magaz License",url:"https://mirrors.nic.cz/tex-archive/macros/latex/contrib/magaz/magaz.tex",osiApproved:!1},Imlib2:{name:"Imlib2 License",url:"http://trac.enlightenment.org/e/browser/trunk/imlib2/COPYING",osiApproved:!1},"Parity-7.0.0":{name:"The Parity Public License 7.0.0",url:"https://paritylicense.com/versions/7.0.0.html",osiApproved:!1},Caldera:{name:"Caldera License",url:"http://www.lemis.com/grog/UNIX/ancient-source-all.pdf",osiApproved:!1},"bzip2-1.0.5":{name:"bzip2 and libbzip2 License v1.0.5",url:"https://sourceware.org/bzip2/1.0.5/bzip2-manual-1.0.5.html",osiApproved:!1},"MS-RL":{name:"Microsoft Reciprocal License",url:"http://www.microsoft.com/opensource/licenses.mspx",osiApproved:!0},"CC0-1.0":{name:"Creative Commons Zero v1.0 Universal",url:"https://creativecommons.org/publicdomain/zero/1.0/legalcode",osiApproved:!1},"GPL-2.0-with-font-exception":{name:"GNU General Public License v2.0 w/Font exception",url:"https://www.gnu.org/licenses/gpl-faq.html#FontException",osiApproved:!1},"Unicode-3.0":{name:"Unicode License v3",url:"https://www.unicode.org/license.txt",osiApproved:!0},"McPhee-slideshow":{name:"McPhee Slideshow License",url:"https://mirror.las.iastate.edu/tex-archive/graphics/metapost/contrib/macros/slideshow/slideshow.mp",osiApproved:!1},Glulxe:{name:"Glulxe License",url:"https://fedoraproject.org/wiki/Licensing/Glulxe",osiApproved:!1},"Zend-2.0":{name:"Zend License v2.0",url:"https://web.archive.org/web/20130517195954/http://www.zend.com/license/2_00.txt",osiApproved:!1},"CC-PDDC":{name:"Creative Commons Public Domain Dedication and Certification",url:"https://creativecommons.org/licenses/publicdomain/",osiApproved:!1},"CC-BY-SA-3.0-AT":{name:"Creative Commons Attribution Share Alike 3.0 Austria",url:"https://creativecommons.org/licenses/by-sa/3.0/at/legalcode",osiApproved:!1},"OLDAP-2.2.2":{name:"Open LDAP Public License 2.2.2",url:"http://www.openldap.org/devel/gitweb.cgi?p=openldap.git;a=blob;f=LICENSE;hb=df2cc1e21eb7c160695f5b7cffd6296c151ba188",osiApproved:!1},Leptonica:{name:"Leptonica License",url:"https://fedoraproject.org/wiki/Licensing/Leptonica",osiApproved:!1},"Unicode-DFS-2016":{name:"Unicode License Agreement - Data Files and Software (2016)",url:"https://www.unicode.org/license.txt",osiApproved:!0},Vim:{name:"Vim License",url:"http://vimdoc.sourceforge.net/htmldoc/uganda.html",osiApproved:!1},"Adobe-Glyph":{name:"Adobe Glyph List License",url:"https://fedoraproject.org/wiki/Licensing/MIT#AdobeGlyph",osiApproved:!1},"SHL-0.5":{name:"Solderpad Hardware License v0.5",url:"https://solderpad.org/licenses/SHL-0.5/",osiApproved:!1},"etalab-2.0":{name:"Etalab Open License 2.0",url:"https://github.com/DISIC/politique-de-contribution-open-source/blob/master/LICENSE.pdf",osiApproved:!1},"GFDL-1.3-invariants-or-later":{name:"GNU Free Documentation License v1.3 or later - invariants",url:"https://www.gnu.org/licenses/fdl-1.3.txt",osiApproved:!1},"ZPL-2.1":{name:"Zope Public License 2.1",url:"http://old.zope.org/Resources/ZPL/",osiApproved:!0},TPDL:{name:"Time::ParseDate License",url:"https://metacpan.org/pod/Time::ParseDate#LICENSE",osiApproved:!1},Cronyx:{name:"Cronyx License",url:"https://gitlab.freedesktop.org/xorg/font/alias/-/blob/master/COPYING",osiApproved:!1},Crossword:{name:"Crossword License",url:"https://fedoraproject.org/wiki/Licensing/Crossword",osiApproved:!1},"HPND-Fenneberg-Livingston":{name:"Historical Permission Notice and Disclaimer - Fenneberg-Livingston variant",url:"https://github.com/FreeRADIUS/freeradius-client/blob/master/COPYRIGHT#L32",osiApproved:!1},"BSD-3-Clause-acpica":{name:"BSD 3-Clause acpica variant",url:"https://github.com/acpica/acpica/blob/master/source/common/acfileio.c#L119",osiApproved:!1},iMatix:{name:"iMatix Standard Function Library Agreement",url:"http://legacy.imatix.com/html/sfl/sfl4.htm#license",osiApproved:!1},"BSD-1-Clause":{name:"BSD 1-Clause License",url:"https://svnweb.freebsd.org/base/head/include/ifaddrs.h?revision=326823",osiApproved:!0},dvipdfm:{name:"dvipdfm License",url:"https://fedoraproject.org/wiki/Licensing/dvipdfm",osiApproved:!1},"AGPL-1.0-only":{name:"Affero General Public License v1.0 only",url:"http://www.affero.org/oagpl.html",osiApproved:!1},"Adobe-Utopia":{name:"Adobe Utopia Font License",url:"https://gitlab.freedesktop.org/xorg/font/adobe-utopia-100dpi/-/blob/master/COPYING?ref_type=heads",osiApproved:!1},"OLDAP-1.3":{name:"Open LDAP Public License v1.3",url:"http://www.openldap.org/devel/gitweb.cgi?p=openldap.git;a=blob;f=LICENSE;hb=e5f8117f0ce088d0bd7a8e18ddf37eaa40eb09b1",osiApproved:!1},"CUA-OPL-1.0":{name:"CUA Office Public License v1.0",url:"https://opensource.org/licenses/CUA-OPL-1.0",osiApproved:!0},"CC-BY-3.0-AT":{name:"Creative Commons Attribution 3.0 Austria",url:"https://creativecommons.org/licenses/by/3.0/at/legalcode",osiApproved:!1},WTFPL:{name:"Do What The F*ck You Want To Public License",url:"http://www.wtfpl.net/about/",osiApproved:!1},"Brian-Gladman-2-Clause":{name:"Brian Gladman 2-Clause License",url:"https://github.com/krb5/krb5/blob/krb5-1.21.2-final/NOTICE#L140-L156",osiApproved:!1},"CC-BY-SA-3.0-DE":{name:"Creative Commons Attribution Share Alike 3.0 Germany",url:"https://creativecommons.org/licenses/by-sa/3.0/de/legalcode",osiApproved:!1},"CMU-Mach-nodoc":{name:"CMU    Mach - no notices-in-documentation variant",url:"https://github.com/krb5/krb5/blob/krb5-1.21.2-final/NOTICE#L718-L728",osiApproved:!1},"CATOSL-1.1":{name:"Computer Associates Trusted Open Source License 1.1",url:"https://opensource.org/licenses/CATOSL-1.1",osiApproved:!0},Xerox:{name:"Xerox License",url:"https://fedoraproject.org/wiki/Licensing/Xerox",osiApproved:!1},"OLDAP-1.2":{name:"Open LDAP Public License v1.2",url:"http://www.openldap.org/devel/gitweb.cgi?p=openldap.git;a=blob;f=LICENSE;hb=42b0383c50c299977b5893ee695cf4e486fb0dc7",osiApproved:!1},"GFDL-1.2-only":{name:"GNU Free Documentation License v1.2 only",url:"https://www.gnu.org/licenses/old-licenses/fdl-1.2.txt",osiApproved:!1},"FDK-AAC":{name:"Fraunhofer FDK AAC Codec Library",url:"https://fedoraproject.org/wiki/Licensing/FDK-AAC",osiApproved:!1},"CERN-OHL-1.2":{name:"CERN Open Hardware Licence v1.2",url:"https://www.ohwr.org/project/licenses/wikis/cern-ohl-v1.2",osiApproved:!1},OML:{name:"Open Market License",url:"https://fedoraproject.org/wiki/Licensing/Open_Market_License",osiApproved:!1},"Arphic-1999":{name:"Arphic Public License",url:"http://ftp.gnu.org/gnu/non-gnu/chinese-fonts-truetype/LICENSE",osiApproved:!1},"OSL-1.1":{name:"Open Software License 1.1",url:"https://fedoraproject.org/wiki/Licensing/OSL1.1",osiApproved:!1},"CC-BY-NC-ND-2.5":{name:"Creative Commons Attribution Non Commercial No Derivatives 2.5 Generic",url:"https://creativecommons.org/licenses/by-nc-nd/2.5/legalcode",osiApproved:!1},"EFL-1.0":{name:"Eiffel Forum License v1.0",url:"http://www.eiffel-nice.org/license/forum.txt",osiApproved:!0},"GFDL-1.3-no-invariants-or-later":{name:"GNU Free Documentation License v1.3 or later - no invariants",url:"https://www.gnu.org/licenses/fdl-1.3.txt",osiApproved:!1},"GPL-3.0-with-GCC-exception":{name:"GNU General Public License v3.0 w/GCC Runtime Library exception",url:"https://www.gnu.org/licenses/gcc-exception-3.1.html",osiApproved:!0},"TORQUE-1.1":{name:"TORQUE v2.5+ Software License v1.1",url:"https://fedoraproject.org/wiki/Licensing/TORQUEv1.1",osiApproved:!1},"GPL-2.0-with-autoconf-exception":{name:"GNU General Public License v2.0 w/Autoconf exception",url:"http://ac-archive.sourceforge.net/doc/copyright.html",osiApproved:!1},"check-cvs":{name:"check-cvs License",url:"http://cvs.savannah.gnu.org/viewvc/cvs/ccvs/contrib/check_cvs.in?revision=1.1.4.3&view=markup&pathrev=cvs1-11-23#l2",osiApproved:!1},"CDLA-Permissive-2.0":{name:"Community Data License Agreement Permissive 2.0",url:"https://cdla.dev/permissive-2-0",osiApproved:!1},"HPND-export-US":{name:"HPND with US Government export control warning",url:"https://www.kermitproject.org/ck90.html#source",osiApproved:!1},"NPL-1.1":{name:"Netscape Public License v1.1",url:"http://www.mozilla.org/MPL/NPL/1.1/",osiApproved:!1},GL2PS:{name:"GL2PS License",url:"http://www.geuz.org/gl2ps/COPYING.GL2PS",osiApproved:!1},"GPL-3.0-only":{name:"GNU General Public License v3.0 only",url:"https://www.gnu.org/licenses/gpl-3.0-standalone.html",osiApproved:!0},"copyleft-next-0.3.0":{name:"copyleft-next 0.3.0",url:"https://github.com/copyleft-next/copyleft-next/blob/master/Releases/copyleft-next-0.3.0",osiApproved:!1},gtkbook:{name:"gtkbook License",url:"https://github.com/slogan621/gtkbook",osiApproved:!1},"LGPL-2.0+":{name:"GNU Library General Public License v2 or later",url:"https://www.gnu.org/licenses/old-licenses/lgpl-2.0-standalone.html",osiApproved:!0},"PolyForm-Noncommercial-1.0.0":{name:"PolyForm Noncommercial License 1.0.0",url:"https://polyformproject.org/licenses/noncommercial/1.0.0",osiApproved:!1},"CECILL-1.1":{name:"CeCILL Free Software License Agreement v1.1",url:"http://www.cecill.info/licences/Licence_CeCILL_V1.1-US.html",osiApproved:!1},"HPND-MIT-disclaimer":{name:"Historical Permission Notice and Disclaimer with MIT disclaimer",url:"https://metacpan.org/release/NLNETLABS/Net-DNS-SEC-1.22/source/LICENSE",osiApproved:!1},"GFDL-1.1-invariants-only":{name:"GNU Free Documentation License v1.1 only - invariants",url:"https://www.gnu.org/licenses/old-licenses/fdl-1.1.txt",osiApproved:!1},"OGDL-Taiwan-1.0":{name:"Taiwan Open Government Data License, version 1.0",url:"https://data.gov.tw/license",osiApproved:!1},"CC-BY-2.5-AU":{name:"Creative Commons Attribution 2.5 Australia",url:"https://creativecommons.org/licenses/by/2.5/au/legalcode",osiApproved:!1},"CC-BY-SA-2.0":{name:"Creative Commons Attribution Share Alike 2.0 Generic",url:"https://creativecommons.org/licenses/by-sa/2.0/legalcode",osiApproved:!1},"BSD-4-Clause-UC":{name:"BSD-4-Clause (University of California-Specific)",url:"http://www.freebsd.org/copyright/license.html",osiApproved:!1},"CC-BY-NC-3.0-DE":{name:"Creative Commons Attribution Non Commercial 3.0 Germany",url:"https://creativecommons.org/licenses/by-nc/3.0/de/legalcode",osiApproved:!1},"CC-BY-NC-SA-2.5":{name:"Creative Commons Attribution Non Commercial Share Alike 2.5 Generic",url:"https://creativecommons.org/licenses/by-nc-sa/2.5/legalcode",osiApproved:!1},"CC-BY-NC-4.0":{name:"Creative Commons Attribution Non Commercial 4.0 International",url:"https://creativecommons.org/licenses/by-nc/4.0/legalcode",osiApproved:!1},Plexus:{name:"Plexus Classworlds License",url:"https://fedoraproject.org/wiki/Licensing/Plexus_Classworlds_License",osiApproved:!1},"CC-BY-ND-3.0-DE":{name:"Creative Commons Attribution No Derivatives 3.0 Germany",url:"https://creativecommons.org/licenses/by-nd/3.0/de/legalcode",osiApproved:!1},XSkat:{name:"XSkat License",url:"https://fedoraproject.org/wiki/Licensing/XSkat_License",osiApproved:!1},"Community-Spec-1.0":{name:"Community Specification License 1.0",url:"https://github.com/CommunitySpecification/1.0/blob/master/1._Community_Specification_License-v1.md",osiApproved:!1},"Adobe-2006":{name:"Adobe Systems Incorporated Source Code License Agreement",url:"https://fedoraproject.org/wiki/Licensing/AdobeLicense",osiApproved:!1},"CC-BY-3.0-IGO":{name:"Creative Commons Attribution 3.0 IGO",url:"https://creativecommons.org/licenses/by/3.0/igo/legalcode",osiApproved:!1},SWL:{name:"Scheme Widget Library (SWL) Software License Agreement",url:"https://fedoraproject.org/wiki/Licensing/SWL",osiApproved:!1},xlock:{name:"xlock License",url:"https://fossies.org/linux/tiff/contrib/ras/ras2tif.c",osiApproved:!1},swrule:{name:"swrule License",url:"https://ctan.math.utah.edu/ctan/tex-archive/macros/generic/misc/swrule.sty",osiApproved:!1},"DL-DE-BY-2.0":{name:"Data licence Germany – attribution – version 2.0",url:"https://www.govdata.de/dl-de/by-2-0",osiApproved:!1},"SSH-OpenSSH":{name:"SSH OpenSSH license",url:"https://github.com/openssh/openssh-portable/blob/1b11ea7c58cd5c59838b5fa574cd456d6047b2d4/LICENCE#L10",osiApproved:!1},diffmark:{name:"diffmark license",url:"https://fedoraproject.org/wiki/Licensing/diffmark",osiApproved:!1},"AFL-2.0":{name:"Academic Free License v2.0",url:"http://wayback.archive.org/web/20060924134533/http://www.opensource.org/licenses/afl-2.0.txt",osiApproved:!0},"HPND-Markus-Kuhn":{name:"Historical Permission Notice and Disclaimer - Markus Kuhn variant",url:"https://www.cl.cam.ac.uk/~mgk25/ucs/wcwidth.c",osiApproved:!1},"CC-BY-NC-SA-2.0-FR":{name:"Creative Commons Attribution-NonCommercial-ShareAlike 2.0 France",url:"https://creativecommons.org/licenses/by-nc-sa/2.0/fr/legalcode",osiApproved:!1},NRL:{name:"NRL License",url:"http://web.mit.edu/network/isakmp/nrllicense.html",osiApproved:!1},"AML-glslang":{name:"AML glslang variant License",url:"https://github.com/KhronosGroup/glslang/blob/main/LICENSE.txt#L949",osiApproved:!1},UCAR:{name:"UCAR License",url:"https://github.com/Unidata/UDUNITS-2/blob/master/COPYRIGHT",osiApproved:!1},"BSD-4.3TAHOE":{name:"BSD 4.3 TAHOE License",url:"https://github.com/389ds/389-ds-base/blob/main/ldap/include/sysexits-compat.h#L15",osiApproved:!1},"NLOD-2.0":{name:"Norwegian Licence for Open Government Data (NLOD) 2.0",url:"http://data.norge.no/nlod/en/2.0",osiApproved:!1},"AGPL-1.0":{name:"Affero General Public License v1.0",url:"http://www.affero.org/oagpl.html",osiApproved:!1},"COIL-1.0":{name:"Copyfree Open Innovation License",url:"https://coil.apotheon.org/plaintext/01.0.txt",osiApproved:!1},APAFML:{name:"Adobe Postscript AFM License",url:"https://fedoraproject.org/wiki/Licensing/AdobePostscriptAFM",osiApproved:!1},"BSD-3-Clause-LBNL":{name:"Lawrence Berkeley National Labs BSD variant license",url:"https://fedoraproject.org/wiki/Licensing/LBNLBSD",osiApproved:!0},"LZMA-SDK-9.11-to-9.20":{name:"LZMA SDK License (versions 9.11 to 9.20)",url:"https://www.7-zip.org/sdk.html",osiApproved:!1},"JPL-image":{name:"JPL Image Use Policy",url:"https://www.jpl.nasa.gov/jpl-image-use-policy",osiApproved:!1},"BUSL-1.1":{name:"Business Source License 1.1",url:"https://mariadb.com/bsl11/",osiApproved:!1},"PSF-2.0":{name:"Python Software Foundation License 2.0",url:"https://opensource.org/licenses/Python-2.0",osiApproved:!1},"Martin-Birgmeier":{name:"Martin Birgmeier License",url:"https://github.com/Perl/perl5/blob/blead/util.c#L6136",osiApproved:!1},"Python-2.0":{name:"Python License 2.0",url:"https://opensource.org/licenses/Python-2.0",osiApproved:!0},"CC-BY-1.0":{name:"Creative Commons Attribution 1.0 Generic",url:"https://creativecommons.org/licenses/by/1.0/legalcode",osiApproved:!1},"Condor-1.1":{name:"Condor Public License v1.1",url:"http://research.cs.wisc.edu/condor/license.html#condor",osiApproved:!1},"LPPL-1.1":{name:"LaTeX Project Public License v1.1",url:"http://www.latex-project.org/lppl/lppl-1-1.txt",osiApproved:!1},MTLL:{name:"Matrix Template Library License",url:"https://fedoraproject.org/wiki/Licensing/Matrix_Template_Library_License",osiApproved:!1},"BSD-3-Clause-flex":{name:"BSD 3-Clause Flex variant",url:"https://github.com/westes/flex/blob/master/COPYING",osiApproved:!1},"GPL-2.0-or-later":{name:"GNU General Public License v2.0 or later",url:"https://www.gnu.org/licenses/old-licenses/gpl-2.0-standalone.html",osiApproved:!0},PostgreSQL:{name:"PostgreSQL License",url:"http://www.postgresql.org/about/licence",osiApproved:!0},"CNRI-Python-GPL-Compatible":{name:"CNRI Python Open Source GPL Compatible License Agreement",url:"http://www.python.org/download/releases/1.6.1/download_win/",osiApproved:!1},"EUPL-1.0":{name:"European Union Public License 1.0",url:"http://ec.europa.eu/idabc/en/document/7330.html",osiApproved:!1},"libutil-David-Nugent":{name:"libutil David Nugent License",url:"http://web.mit.edu/freebsd/head/lib/libutil/login_ok.3",osiApproved:!1},"LGPL-2.1":{name:"GNU Lesser General Public License v2.1 only",url:"https://www.gnu.org/licenses/old-licenses/lgpl-2.1-standalone.html",osiApproved:!0},Abstyles:{name:"Abstyles License",url:"https://fedoraproject.org/wiki/Licensing/Abstyles",osiApproved:!1},"LGPL-3.0-or-later":{name:"GNU Lesser General Public License v3.0 or later",url:"https://www.gnu.org/licenses/lgpl-3.0-standalone.html",osiApproved:!0},"MPL-2.0-no-copyleft-exception":{name:"Mozilla Public License 2.0 (no copyleft exception)",url:"https://www.mozilla.org/MPL/2.0/",osiApproved:!0},"BSD-Systemics-W3Works":{name:"Systemics W3Works BSD variant license",url:"https://metacpan.org/release/DPARIS/Crypt-Blowfish-2.14/source/COPYRIGHT#L7",osiApproved:!1},"OGL-UK-2.0":{name:"Open Government Licence v2.0",url:"http://www.nationalarchives.gov.uk/doc/open-government-licence/version/2/",osiApproved:!1},"CC-BY-NC-2.5":{name:"Creative Commons Attribution Non Commercial 2.5 Generic",url:"https://creativecommons.org/licenses/by-nc/2.5/legalcode",osiApproved:!1},ulem:{name:"ulem License",url:"https://mirrors.ctan.org/macros/latex/contrib/ulem/README",osiApproved:!1},"CERN-OHL-P-2.0":{name:"CERN Open Hardware Licence Version 2 - Permissive",url:"https://www.ohwr.org/project/cernohl/wikis/Documents/CERN-OHL-version-2",osiApproved:!0},"TAPR-OHL-1.0":{name:"TAPR Open Hardware License v1.0",url:"https://www.tapr.org/OHL",osiApproved:!1},"GPL-2.0-only":{name:"GNU General Public License v2.0 only",url:"https://www.gnu.org/licenses/old-licenses/gpl-2.0-standalone.html",osiApproved:!0},"OLDAP-2.3":{name:"Open LDAP Public License v2.3",url:"http://www.openldap.org/devel/gitweb.cgi?p=openldap.git;a=blob;f=LICENSE;hb=d32cf54a32d581ab475d23c810b0a7fbaf8d63c3",osiApproved:!1},Kastrup:{name:"Kastrup License",url:"https://ctan.math.utah.edu/ctan/tex-archive/macros/generic/kastrup/binhex.dtx",osiApproved:!1},"MulanPSL-1.0":{name:"Mulan Permissive Software License, Version 1",url:"https://license.coscl.org.cn/MulanPSL/",osiApproved:!1},"SGI-OpenGL":{name:"SGI OpenGL License",url:"https://gitlab.freedesktop.org/mesa/glw/-/blob/master/README?ref_type=heads",osiApproved:!1},"BSD-3-Clause":{name:'BSD 3-Clause "New" or "Revised" License',url:"https://opensource.org/licenses/BSD-3-Clause",osiApproved:!0},"CECILL-2.0":{name:"CeCILL Free Software License Agreement v2.0",url:"http://www.cecill.info/licences/Licence_CeCILL_V2-en.html",osiApproved:!1},IPA:{name:"IPA Font License",url:"https://opensource.org/licenses/IPA",osiApproved:!0},TermReadKey:{name:"TermReadKey License",url:"https://github.com/jonathanstowe/TermReadKey/blob/master/README#L9-L10",osiApproved:!1},"UMich-Merit":{name:"Michigan/Merit Networks License",url:"https://github.com/radcli/radcli/blob/master/COPYRIGHT#L64",osiApproved:!1},"HPND-sell-variant":{name:"Historical Permission Notice and Disclaimer - sell variant",url:"https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/net/sunrpc/auth_gss/gss_generic_token.c?h=v4.19",osiApproved:!1},"MIT-CMU":{name:"CMU License",url:"https://fedoraproject.org/wiki/Licensing:MIT?rd=Licensing/MIT#CMU_Style",osiApproved:!1},"URT-RLE":{name:"Utah Raster Toolkit Run Length Encoded License",url:"https://sourceforge.net/p/netpbm/code/HEAD/tree/super_stable/converter/other/pnmtorle.c",osiApproved:!1},"IBM-pibs":{name:"IBM PowerPC Initialization and Boot Software",url:"http://git.denx.de/?p=u-boot.git;a=blob;f=arch/powerpc/cpu/ppc4xx/miiphy.c;h=297155fdafa064b955e53e9832de93bfb0cfb85b;hb=9fab4bf4cc077c21e43941866f3f2c196f28670d",osiApproved:!1},"AGPL-1.0-or-later":{name:"Affero General Public License v1.0 or later",url:"http://www.affero.org/oagpl.html",osiApproved:!1},"SSLeay-standalone":{name:"SSLeay License - standalone",url:"https://www.tq-group.com/filedownloads/files/software-license-conditions/OriginalSSLeay/OriginalSSLeay.pdf",osiApproved:!1},"Spencer-99":{name:"Spencer License 99",url:"http://www.opensource.apple.com/source/tcl/tcl-5/tcl/generic/regfronts.c",osiApproved:!1},"Bitstream-Vera":{name:"Bitstream Vera Font License",url:"https://web.archive.org/web/20080207013128/http://www.gnome.org/fonts/",osiApproved:!1},"LGPL-2.1-or-later":{name:"GNU Lesser General Public License v2.1 or later",url:"https://www.gnu.org/licenses/old-licenses/lgpl-2.1-standalone.html",osiApproved:!0},"BSD-Inferno-Nettverk":{name:"BSD-Inferno-Nettverk",url:"https://www.inet.no/dante/LICENSE",osiApproved:!1},"BSD-3-Clause-Open-MPI":{name:"BSD 3-Clause Open MPI variant",url:"https://www.open-mpi.org/community/license.php",osiApproved:!1},Barr:{name:"Barr License",url:"https://fedoraproject.org/wiki/Licensing/Barr",osiApproved:!1},"OLDAP-2.5":{name:"Open LDAP Public License v2.5",url:"http://www.openldap.org/devel/gitweb.cgi?p=openldap.git;a=blob;f=LICENSE;hb=6852b9d90022e8593c98205413380536b1b5a7cf",osiApproved:!1},Sendmail:{name:"Sendmail License",url:"http://www.sendmail.com/pdfs/open_source/sendmail_license.pdf",osiApproved:!1},"SSH-short":{name:"SSH short notice",url:"https://github.com/openssh/openssh-portable/blob/1b11ea7c58cd5c59838b5fa574cd456d6047b2d4/pathnames.h",osiApproved:!1},curl:{name:"curl License",url:"https://github.com/bagder/curl/blob/master/COPYING",osiApproved:!1},Saxpath:{name:"Saxpath License",url:"https://fedoraproject.org/wiki/Licensing/Saxpath_License",osiApproved:!1},"SGI-B-2.0":{name:"SGI Free Software License B v2.0",url:"http://oss.sgi.com/projects/FreeB/SGIFreeSWLicB.2.0.pdf",osiApproved:!1},"Unicode-TOU":{name:"Unicode Terms of Use",url:"http://web.archive.org/web/20140704074106/http://www.unicode.org/copyright.html",osiApproved:!1},AAL:{name:"Attribution Assurance License",url:"https://opensource.org/licenses/attribution",osiApproved:!0},"BSD-Attribution-HPND-disclaimer":{name:"BSD with Attribution and HPND disclaimer",url:"https://github.com/cyrusimap/cyrus-sasl/blob/master/COPYING",osiApproved:!1},"Latex2e-translated-notice":{name:"Latex2e with translated notice permission",url:"https://git.savannah.gnu.org/cgit/indent.git/tree/doc/indent.texi?id=a74c6b4ee49397cf330b333da1042bffa60ed14f#n74",osiApproved:!1},"LPL-1.02":{name:"Lucent Public License v1.02",url:"http://plan9.bell-labs.com/plan9/license.html",osiApproved:!0},"BSD-3-Clause-No-Nuclear-Warranty":{name:"BSD 3-Clause No Nuclear Warranty",url:"https://jogamp.org/git/?p=gluegen.git;a=blob_plain;f=LICENSE.txt",osiApproved:!1},"CC-BY-SA-4.0":{name:"Creative Commons Attribution Share Alike 4.0 International",url:"https://creativecommons.org/licenses/by-sa/4.0/legalcode",osiApproved:!1},"MulanPSL-2.0":{name:"Mulan Permissive Software License, Version 2",url:"https://license.coscl.org.cn/MulanPSL2",osiApproved:!0},"VSL-1.0":{name:"Vovida Software License v1.0",url:"https://opensource.org/licenses/VSL-1.0",osiApproved:!0},ClArtistic:{name:"Clarified Artistic License",url:"http://gianluca.dellavedova.org/2011/01/03/clarified-artistic-license/",osiApproved:!1},"GPL-1.0+":{name:"GNU General Public License v1.0 or later",url:"https://www.gnu.org/licenses/old-licenses/gpl-1.0-standalone.html",osiApproved:!1},"NCGL-UK-2.0":{name:"Non-Commercial Government Licence",url:"http://www.nationalarchives.gov.uk/doc/non-commercial-government-licence/version/2/",osiApproved:!1},"Brian-Gladman-3-Clause":{name:"Brian Gladman 3-Clause License",url:"https://github.com/SWI-Prolog/packages-clib/blob/master/sha1/brg_endian.h",osiApproved:!1},"xkeyboard-config-Zinoviev":{name:"xkeyboard-config Zinoviev License",url:"https://gitlab.freedesktop.org/xkeyboard-config/xkeyboard-config/-/blob/master/COPYING?ref_type=heads#L178",osiApproved:!1},"ISC-Veillard":{name:"ISC Veillard variant",url:"https://raw.githubusercontent.com/GNOME/libxml2/4c2e7c651f6c2f0d1a74f350cbda95f7df3e7017/hash.c",osiApproved:!1},"Ferguson-Twofish":{name:"Ferguson Twofish License",url:"https://github.com/wernerd/ZRTPCPP/blob/6b3cd8e6783642292bad0c21e3e5e5ce45ff3e03/cryptcommon/twofish.c#L113C3-L127",osiApproved:!1},Motosoto:{name:"Motosoto License",url:"https://opensource.org/licenses/Motosoto",osiApproved:!0},Giftware:{name:"Giftware License",url:"http://liballeg.org/license.html#allegro-4-the-giftware-license",osiApproved:!1},"OLDAP-2.0":{name:"Open LDAP Public License v2.0 (or possibly 2.0A and 2.0B)",url:"http://www.openldap.org/devel/gitweb.cgi?p=openldap.git;a=blob;f=LICENSE;hb=cbf50f4e1185a21abd4c0a54d3f4341fe28f36ea",osiApproved:!1},"CC-BY-NC-SA-2.0-UK":{name:"Creative Commons Attribution Non Commercial Share Alike 2.0 England and Wales",url:"https://creativecommons.org/licenses/by-nc-sa/2.0/uk/legalcode",osiApproved:!1},"LGPL-2.0":{name:"GNU Library General Public License v2 only",url:"https://www.gnu.org/licenses/old-licenses/lgpl-2.0-standalone.html",osiApproved:!0},"BSD-4-Clause":{name:'BSD 4-Clause "Original" or "Old" License',url:"http://directory.fsf.org/wiki/License:BSD_4Clause",osiApproved:!1},"CC-BY-NC-ND-1.0":{name:"Creative Commons Attribution Non Commercial No Derivatives 1.0 Generic",url:"https://creativecommons.org/licenses/by-nd-nc/1.0/legalcode",osiApproved:!1},"PolyForm-Small-Business-1.0.0":{name:"PolyForm Small Business License 1.0.0",url:"https://polyformproject.org/licenses/small-business/1.0.0",osiApproved:!1},FSFULLRWD:{name:"FSF Unlimited License (With License Retention and Warranty Disclaimer)",url:"https://lists.gnu.org/archive/html/autoconf/2012-04/msg00061.html",osiApproved:!1},"GFDL-1.3-only":{name:"GNU Free Documentation License v1.3 only",url:"https://www.gnu.org/licenses/fdl-1.3.txt",osiApproved:!1},"OLDAP-2.1":{name:"Open LDAP Public License v2.1",url:"http://www.openldap.org/devel/gitweb.cgi?p=openldap.git;a=blob;f=LICENSE;hb=b0d176738e96a0d3b9f85cb51e140a86f21be715",osiApproved:!1},"QPL-1.0":{name:"Q Public License 1.0",url:"http://doc.qt.nokia.com/3.3/license.html",osiApproved:!0},"Linux-man-pages-copyleft-2-para":{name:"Linux man-pages Copyleft - 2 paragraphs",url:"https://git.kernel.org/pub/scm/docs/man-pages/man-pages.git/tree/man2/move_pages.2#n5",osiApproved:!1},SGP4:{name:"SGP4 Permission Notice",url:"https://celestrak.org/publications/AIAA/2006-6753/faq.php",osiApproved:!1},"HPND-Kevlin-Henney":{name:"Historical Permission Notice and Disclaimer - Kevlin Henney variant",url:"https://github.com/mruby/mruby/blob/83d12f8d52522cdb7c8cc46fad34821359f453e6/mrbgems/mruby-dir/src/Win/dirent.c#L127-L140",osiApproved:!1},"Apache-1.0":{name:"Apache License 1.0",url:"http://www.apache.org/licenses/LICENSE-1.0",osiApproved:!1},"GFDL-1.2-invariants-or-later":{name:"GNU Free Documentation License v1.2 or later - invariants",url:"https://www.gnu.org/licenses/old-licenses/fdl-1.2.txt",osiApproved:!1},Multics:{name:"Multics License",url:"https://opensource.org/licenses/Multics",osiApproved:!0},"BSD-Advertising-Acknowledgement":{name:"BSD Advertising Acknowledgement License",url:"https://github.com/python-excel/xlrd/blob/master/LICENSE#L33",osiApproved:!1},hdparm:{name:"hdparm License",url:"https://github.com/Distrotech/hdparm/blob/4517550db29a91420fb2b020349523b1b4512df2/LICENSE.TXT",osiApproved:!1},"LPL-1.0":{name:"Lucent Public License Version 1.0",url:"https://opensource.org/licenses/LPL-1.0",osiApproved:!0},"Spencer-86":{name:"Spencer License 86",url:"https://fedoraproject.org/wiki/Licensing/Henry_Spencer_Reg-Ex_Library_License",osiApproved:!1},NTP:{name:"NTP License",url:"https://opensource.org/licenses/NTP",osiApproved:!0},Nunit:{name:"Nunit License",url:"https://fedoraproject.org/wiki/Licensing/Nunit",osiApproved:!1},"GFDL-1.3-or-later":{name:"GNU Free Documentation License v1.3 or later",url:"https://www.gnu.org/licenses/fdl-1.3.txt",osiApproved:!1},"GPL-2.0":{name:"GNU General Public License v2.0 only",url:"https://www.gnu.org/licenses/old-licenses/gpl-2.0-standalone.html",osiApproved:!0},HTMLTIDY:{name:"HTML Tidy License",url:"https://github.com/htacg/tidy-html5/blob/next/README/LICENSE.md",osiApproved:!1},"APSL-1.1":{name:"Apple Public Source License 1.1",url:"http://www.opensource.apple.com/source/IOSerialFamily/IOSerialFamily-7/APPLE_LICENSE",osiApproved:!0},Noweb:{name:"Noweb License",url:"https://fedoraproject.org/wiki/Licensing/Noweb",osiApproved:!1},"CDLA-Permissive-1.0":{name:"Community Data License Agreement Permissive 1.0",url:"https://cdla.io/permissive-1-0",osiApproved:!1},"LPPL-1.3a":{name:"LaTeX Project Public License v1.3a",url:"http://www.latex-project.org/lppl/lppl-1-3a.txt",osiApproved:!1},"OPUBL-1.0":{name:"Open Publication License v1.0",url:"http://opencontent.org/openpub/",osiApproved:!1},"OSL-2.1":{name:"Open Software License 2.1",url:"http://web.archive.org/web/20050212003940/http://www.rosenlaw.com/osl21.htm",osiApproved:!0},"IEC-Code-Components-EULA":{name:"IEC    Code Components End-user licence agreement",url:"https://www.iec.ch/webstore/custserv/pdf/CC-EULA.pdf",osiApproved:!1},"CC-BY-2.5":{name:"Creative Commons Attribution 2.5 Generic",url:"https://creativecommons.org/licenses/by/2.5/legalcode",osiApproved:!1},ISC:{name:"ISC License",url:"https://www.isc.org/licenses/",osiApproved:!0},"RHeCos-1.1":{name:"Red Hat eCos Public License v1.1",url:"http://ecos.sourceware.org/old-license.html",osiApproved:!1},"MS-PL":{name:"Microsoft Public License",url:"http://www.microsoft.com/opensource/licenses.mspx",osiApproved:!0},"BSD-Source-beginning-file":{name:"BSD Source Code Attribution - beginning of file variant",url:"https://github.com/lattera/freebsd/blob/master/sys/cam/cam.c#L4",osiApproved:!1},"Linux-OpenIB":{name:"Linux Kernel Variant of OpenIB.org license",url:"https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/drivers/infiniband/core/sa.h",osiApproved:!1},Symlinks:{name:"Symlinks License",url:"https://www.mail-archive.com/debian-bugs-rc@lists.debian.org/msg11494.html",osiApproved:!1},softSurfer:{name:"softSurfer License",url:"https://github.com/mm2/Little-CMS/blob/master/src/cmssm.c#L207",osiApproved:!1},"OpenPBS-2.3":{name:"OpenPBS v2.3 Software License",url:"https://github.com/adaptivecomputing/torque/blob/master/PBS_License.txt",osiApproved:!1},"CC-BY-NC-SA-2.0":{name:"Creative Commons Attribution Non Commercial Share Alike 2.0 Generic",url:"https://creativecommons.org/licenses/by-nc-sa/2.0/legalcode",osiApproved:!1},"CMU-Mach":{name:"CMU Mach License",url:"https://www.cs.cmu.edu/~410/licenses.html",osiApproved:!1},"SISSL-1.2":{name:"Sun Industry Standards Source License v1.2",url:"http://gridscheduler.sourceforge.net/Gridengine_SISSL_license.html",osiApproved:!1},TCL:{name:"TCL/TK License",url:"http://www.tcl.tk/software/tcltk/license.html",osiApproved:!1},"AGPL-3.0-only":{name:"GNU Affero General Public License v3.0 only",url:"https://www.gnu.org/licenses/agpl.txt",osiApproved:!0},"Linux-man-pages-copyleft":{name:"Linux man-pages Copyleft",url:"https://www.kernel.org/doc/man-pages/licenses.html",osiApproved:!1},"DL-DE-ZERO-2.0":{name:"Data licence Germany – zero – version 2.0",url:"https://www.govdata.de/dl-de/zero-2-0",osiApproved:!1},ADSL:{name:"Amazon Digital Services License",url:"https://fedoraproject.org/wiki/Licensing/AmazonDigitalServicesLicense",osiApproved:!1},"MPL-1.0":{name:"Mozilla Public License 1.0",url:"http://www.mozilla.org/MPL/MPL-1.0.html",osiApproved:!0},"LiLiQ-Rplus-1.1":{name:"Licence Libre du Québec – Réciprocité forte version 1.1",url:"https://www.forge.gouv.qc.ca/participez/licence-logicielle/licence-libre-du-quebec-liliq-en-francais/licence-libre-du-quebec-reciprocite-forte-liliq-r-v1-1/",osiApproved:!0},"Apache-2.0":{name:"Apache License 2.0",url:"https://www.apache.org/licenses/LICENSE-2.0",osiApproved:!0},"GPL-2.0+":{name:"GNU General Public License v2.0 or later",url:"https://www.gnu.org/licenses/old-licenses/gpl-2.0-standalone.html",osiApproved:!0},"Widget-Workshop":{name:"Widget Workshop License",url:"https://github.com/novnc/noVNC/blob/master/core/crypto/des.js#L24",osiApproved:!1},"SHL-0.51":{name:"Solderpad Hardware License, Version 0.51",url:"https://solderpad.org/licenses/SHL-0.51/",osiApproved:!1},Zed:{name:"Zed License",url:"https://fedoraproject.org/wiki/Licensing/Zed",osiApproved:!1},"OGL-Canada-2.0":{name:"Open Government Licence - Canada",url:"https://open.canada.ca/en/open-government-licence-canada",osiApproved:!1},"NASA-1.3":{name:"NASA Open Source Agreement 1.3",url:"http://ti.arc.nasa.gov/opensource/nosa/",osiApproved:!0},"IPL-1.0":{name:"IBM Public License v1.0",url:"https://opensource.org/licenses/IPL-1.0",osiApproved:!0},w3m:{name:"w3m License",url:"https://github.com/tats/w3m/blob/master/COPYING",osiApproved:!1},"StandardML-NJ":{name:"Standard ML of New Jersey License",url:"https://www.smlnj.org/license.html",osiApproved:!1},"OSL-1.0":{name:"Open Software License 1.0",url:"https://opensource.org/licenses/OSL-1.0",osiApproved:!0},Baekmuk:{name:"Baekmuk License",url:"https://fedoraproject.org/wiki/Licensing:Baekmuk?rd=Licensing/Baekmuk",osiApproved:!1},"CERN-OHL-S-2.0":{name:"CERN Open Hardware Licence Version 2 - Strongly Reciprocal",url:"https://www.ohwr.org/project/cernohl/wikis/Documents/CERN-OHL-version-2",osiApproved:!0},"Knuth-CTAN":{name:"Knuth CTAN License",url:"https://ctan.org/license/knuth",osiApproved:!1},"RSA-MD":{name:"RSA Message-Digest License",url:"http://www.faqs.org/rfcs/rfc1321.html",osiApproved:!1},VOSTROM:{name:"VOSTROM Public License for Open Source",url:"https://fedoraproject.org/wiki/Licensing/VOSTROM",osiApproved:!1},"LPPL-1.2":{name:"LaTeX Project Public License v1.2",url:"http://www.latex-project.org/lppl/lppl-1-2.txt",osiApproved:!1},X11:{name:"X11 License",url:"http://www.xfree86.org/3.3.6/COPYRIGHT2.html#3",osiApproved:!1},FTL:{name:"Freetype Project License",url:"http://freetype.fis.uniroma2.it/FTL.TXT",osiApproved:!1},"IJG-short":{name:"Independent JPEG Group License - short",url:"https://sourceforge.net/p/xmedcon/code/ci/master/tree/libs/ljpg/",osiApproved:!1},"OCCT-PL":{name:"Open CASCADE Technology Public License",url:"http://www.opencascade.com/content/occt-public-license",osiApproved:!1},CrystalStacker:{name:"CrystalStacker License",url:"https://fedoraproject.org/wiki/Licensing:CrystalStacker?rd=Licensing/CrystalStacker",osiApproved:!1},EPICS:{name:"EPICS Open License",url:"https://epics.anl.gov/license/open.php",osiApproved:!1},"W3C-20150513":{name:"W3C Software Notice and Document License (2015-05-13)",url:"https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document",osiApproved:!1},SISSL:{name:"Sun Industry Standards Source License v1.1",url:"http://www.openoffice.org/licenses/sissl_license.html",osiApproved:!0},MITNFA:{name:"MIT +no-false-attribs license",url:"https://fedoraproject.org/wiki/Licensing/MITNFA",osiApproved:!1},"GPL-1.0-only":{name:"GNU General Public License v1.0 only",url:"https://www.gnu.org/licenses/old-licenses/gpl-1.0-standalone.html",osiApproved:!1},Ruby:{name:"Ruby License",url:"https://www.ruby-lang.org/en/about/license.txt",osiApproved:!1},"CDDL-1.1":{name:"Common Development and Distribution License 1.1",url:"http://glassfish.java.net/public/CDDL+GPL_1_1.html",osiApproved:!1},"BSD-2-Clause-NetBSD":{name:"BSD 2-Clause NetBSD License",url:"http://www.netbsd.org/about/redistribution.html#default",osiApproved:!1},"RPL-1.5":{name:"Reciprocal Public License 1.5",url:"https://opensource.org/licenses/RPL-1.5",osiApproved:!0},"HPND-sell-MIT-disclaimer-xserver":{name:"Historical Permission Notice and Disclaimer - sell xserver variant with MIT disclaimer",url:"https://gitlab.freedesktop.org/xorg/xserver/-/blob/master/COPYING?ref_type=heads#L1781",osiApproved:!1},"TU-Berlin-2.0":{name:"Technische Universitaet Berlin License 2.0",url:"https://github.com/CorsixTH/deps/blob/fd339a9f526d1d9c9f01ccf39e438a015da50035/licences/libgsm.txt",osiApproved:!1},"LiLiQ-P-1.1":{name:"Licence Libre du Québec – Permissive version 1.1",url:"https://forge.gouv.qc.ca/licence/fr/liliq-v1-1/",osiApproved:!0},"EFL-2.0":{name:"Eiffel Forum License v2.0",url:"http://www.eiffel-nice.org/license/eiffel-forum-license-2.html",osiApproved:!0},"APSL-1.0":{name:"Apple Public Source License 1.0",url:"https://fedoraproject.org/wiki/Licensing/Apple_Public_Source_License_1.0",osiApproved:!0},"QPL-1.0-INRIA-2004":{name:"Q Public License 1.0 - INRIA 2004 variant",url:"https://github.com/maranget/hevea/blob/master/LICENSE",osiApproved:!1},"GFDL-1.3":{name:"GNU Free Documentation License v1.3",url:"https://www.gnu.org/licenses/fdl-1.3.txt",osiApproved:!1},"BSD-2-Clause-Views":{name:"BSD 2-Clause with views sentence",url:"http://www.freebsd.org/copyright/freebsd-license.html",osiApproved:!1},"CC-BY-ND-2.5":{name:"Creative Commons Attribution No Derivatives 2.5 Generic",url:"https://creativecommons.org/licenses/by-nd/2.5/legalcode",osiApproved:!1},TMate:{name:"TMate Open Source License",url:"http://svnkit.com/license.html",osiApproved:!1},"Cornell-Lossless-JPEG":{name:"Cornell Lossless JPEG License",url:"https://android.googlesource.com/platform/external/dng_sdk/+/refs/heads/master/source/dng_lossless_jpeg.cpp#16",osiApproved:!1},"MIT-open-group":{name:"MIT Open Group variant",url:"https://gitlab.freedesktop.org/xorg/app/iceauth/-/blob/master/COPYING",osiApproved:!1},"CC-BY-ND-3.0":{name:"Creative Commons Attribution No Derivatives 3.0 Unported",url:"https://creativecommons.org/licenses/by-nd/3.0/legalcode",osiApproved:!1},"CC-BY-ND-4.0":{name:"Creative Commons Attribution No Derivatives 4.0 International",url:"https://creativecommons.org/licenses/by-nd/4.0/legalcode",osiApproved:!1},"Parity-6.0.0":{name:"The Parity Public License 6.0.0",url:"https://paritylicense.com/versions/6.0.0.html",osiApproved:!1},"APSL-1.2":{name:"Apple Public Source License 1.2",url:"http://www.samurajdata.se/opensource/mirror/licenses/apsl.php",osiApproved:!0},"CDLA-Sharing-1.0":{name:"Community Data License Agreement Sharing 1.0",url:"https://cdla.io/sharing-1-0",osiApproved:!1},DSDP:{name:"DSDP License",url:"https://fedoraproject.org/wiki/Licensing/DSDP",osiApproved:!1},"CC-BY-NC-ND-4.0":{name:"Creative Commons Attribution Non Commercial No Derivatives 4.0 International",url:"https://creativecommons.org/licenses/by-nc-nd/4.0/legalcode",osiApproved:!1},"C-UDA-1.0":{name:"Computational Use of Data Agreement v1.0",url:"https://github.com/microsoft/Computational-Use-of-Data-Agreement/blob/master/C-UDA-1.0.md",osiApproved:!1},SchemeReport:{name:"Scheme Language Report License",osiApproved:!1},"copyleft-next-0.3.1":{name:"copyleft-next 0.3.1",url:"https://github.com/copyleft-next/copyleft-next/blob/master/Releases/copyleft-next-0.3.1",osiApproved:!1},"Intel-ACPI":{name:"Intel ACPI Software License Agreement",url:"https://fedoraproject.org/wiki/Licensing/Intel_ACPI_Software_License_Agreement",osiApproved:!1},"BSD-2-Clause-Darwin":{name:"BSD 2-Clause - Ian Darwin variant",url:"https://github.com/file/file/blob/master/COPYING",osiApproved:!1},"OLFL-1.3":{name:"Open Logistics Foundation License Version 1.3",url:"https://openlogisticsfoundation.org/licenses/",osiApproved:!0},ImageMagick:{name:"ImageMagick License",url:"http://www.imagemagick.org/script/license.php",osiApproved:!1},"BSD-4.3RENO":{name:"BSD 4.3 RENO License",url:"https://sourceware.org/git/?p=binutils-gdb.git;a=blob;f=libiberty/strcasecmp.c;h=131d81c2ce7881fa48c363dc5bf5fb302c61ce0b;hb=HEAD",osiApproved:!1},"Python-2.0.1":{name:"Python License 2.0.1",url:"https://www.python.org/download/releases/2.0.1/license/",osiApproved:!1},"zlib-acknowledgement":{name:"zlib/libpng License with Acknowledgement",url:"https://fedoraproject.org/wiki/Licensing/ZlibWithAcknowledgement",osiApproved:!1},"Zimbra-1.3":{name:"Zimbra Public License v1.3",url:"http://web.archive.org/web/20100302225219/http://www.zimbra.com/license/zimbra-public-license-1-3.html",osiApproved:!1},"CC-BY-3.0":{name:"Creative Commons Attribution 3.0 Unported",url:"https://creativecommons.org/licenses/by/3.0/legalcode",osiApproved:!1},"LGPL-2.0-only":{name:"GNU Library General Public License v2 only",url:"https://www.gnu.org/licenses/old-licenses/lgpl-2.0-standalone.html",osiApproved:!0},OpenSSL:{name:"OpenSSL License",url:"http://www.openssl.org/source/license.html",osiApproved:!1},"OLDAP-1.1":{name:"Open LDAP Public License v1.1",url:"http://www.openldap.org/devel/gitweb.cgi?p=openldap.git;a=blob;f=LICENSE;hb=806557a5ad59804ef3a44d5abfbe91d706b0791f",osiApproved:!1},"OCLC-2.0":{name:"OCLC Research Public License 2.0",url:"http://www.oclc.org/research/activities/software/license/v2final.htm",osiApproved:!0},metamail:{name:"metamail License",url:"https://github.com/Dual-Life/mime-base64/blob/master/Base64.xs#L12",osiApproved:!1},"OFL-1.0-RFN":{name:"SIL Open Font License 1.0 with Reserved Font Name",url:"http://scripts.sil.org/cms/scripts/page.php?item_id=OFL10_web",osiApproved:!1},"BSD-Protection":{name:"BSD Protection License",url:"https://fedoraproject.org/wiki/Licensing/BSD_Protection_License",osiApproved:!1},"BlueOak-1.0.0":{name:"Blue Oak Model License 1.0.0",url:"https://blueoakcouncil.org/license/1.0.0",osiApproved:!0},"GFDL-1.3-invariants-only":{name:"GNU Free Documentation License v1.3 only - invariants",url:"https://www.gnu.org/licenses/fdl-1.3.txt",osiApproved:!1},"HPND-sell-regexpr":{name:"Historical Permission Notice and Disclaimer - sell regexpr variant",url:"https://gitlab.com/bacula-org/bacula/-/blob/Branch-11.0/bacula/LICENSE-FOSS?ref_type=heads#L245",osiApproved:!1},"MPL-2.0":{name:"Mozilla Public License 2.0",url:"https://www.mozilla.org/MPL/2.0/",osiApproved:!0},TOSL:{name:"Trusster Open Source License",url:"https://fedoraproject.org/wiki/Licensing/TOSL",osiApproved:!1},"LGPL-2.0-or-later":{name:"GNU Library General Public License v2 or later",url:"https://www.gnu.org/licenses/old-licenses/lgpl-2.0-standalone.html",osiApproved:!0},GLWTPL:{name:"Good Luck With That Public License",url:"https://github.com/me-shaon/GLWTPL/commit/da5f6bc734095efbacb442c0b31e33a65b9d6e85",osiApproved:!1},FSFUL:{name:"FSF Unlimited License",url:"https://fedoraproject.org/wiki/Licensing/FSF_Unlimited_License",osiApproved:!1},"HP-1989":{name:"Hewlett-Packard 1989 License",url:"https://github.com/bleargh45/Data-UUID/blob/master/LICENSE",osiApproved:!1},"OSL-2.0":{name:"Open Software License 2.0",url:"http://web.archive.org/web/20041020171434/http://www.rosenlaw.com/osl2.0.html",osiApproved:!0},RSCPL:{name:"Ricoh Source Code Public License",url:"http://wayback.archive.org/web/20060715140826/http://www.risource.org/RPL/RPL-1.0A.shtml",osiApproved:!0},"python-ldap":{name:"Python ldap License",url:"https://github.com/python-ldap/python-ldap/blob/main/LICENCE",osiApproved:!1},"CC-BY-NC-SA-3.0-DE":{name:"Creative Commons Attribution Non Commercial Share Alike 3.0 Germany",url:"https://creativecommons.org/licenses/by-nc-sa/3.0/de/legalcode",osiApproved:!1},"Spencer-94":{name:"Spencer License 94",url:"https://fedoraproject.org/wiki/Licensing/Henry_Spencer_Reg-Ex_Library_License",osiApproved:!1},Eurosym:{name:"Eurosym License",url:"https://fedoraproject.org/wiki/Licensing/Eurosym",osiApproved:!1},"SAX-PD-2.0":{name:"Sax Public Domain Notice 2.0",url:"http://www.saxproject.org/copying.html",osiApproved:!1},"ANTLR-PD":{name:"ANTLR Software Rights Notice",url:"http://www.antlr2.org/license.html",osiApproved:!1},"X11-distribute-modifications-variant":{name:"X11 License Distribution Modification Variant",url:"https://github.com/mirror/ncurses/blob/master/COPYING",osiApproved:!1},"CC-BY-NC-2.0":{name:"Creative Commons Attribution Non Commercial 2.0 Generic",url:"https://creativecommons.org/licenses/by-nc/2.0/legalcode",osiApproved:!1},"ODbL-1.0":{name:"Open Data Commons Open Database License v1.0",url:"http://www.opendatacommons.org/licenses/odbl/1.0/",osiApproved:!1},OpenVision:{name:"OpenVision License",url:"https://github.com/krb5/krb5/blob/krb5-1.21.2-final/NOTICE#L66-L98",osiApproved:!1},Rdisc:{name:"Rdisc License",url:"https://fedoraproject.org/wiki/Licensing/Rdisc_License",osiApproved:!1},"ErlPL-1.1":{name:"Erlang Public License v1.1",url:"http://www.erlang.org/EPLICENSE",osiApproved:!1},"JasPer-2.0":{name:"JasPer License",url:"http://www.ece.uvic.ca/~mdadams/jasper/LICENSE",osiApproved:!1},"GFDL-1.2-or-later":{name:"GNU Free Documentation License v1.2 or later",url:"https://www.gnu.org/licenses/old-licenses/fdl-1.2.txt",osiApproved:!1},"MIT-Festival":{name:"MIT Festival Variant",url:"https://github.com/festvox/flite/blob/master/COPYING",osiApproved:!1},"BSD-3-Clause-Sun":{name:"BSD 3-Clause Sun Microsystems",url:"https://github.com/xmlark/msv/blob/b9316e2f2270bc1606952ea4939ec87fbba157f3/xsdlib/src/main/java/com/sun/msv/datatype/regexp/InternalImpl.java",osiApproved:!1},"OpenSSL-standalone":{name:"OpenSSL License - standalone",url:"https://library.netapp.com/ecm/ecm_download_file/ECMP1196395",osiApproved:!1},"Sun-PPP":{name:"Sun PPP License",url:"https://github.com/ppp-project/ppp/blob/master/pppd/eap.c#L7-L16",osiApproved:!1},"AFL-3.0":{name:"Academic Free License v3.0",url:"http://www.rosenlaw.com/AFL3.0.htm",osiApproved:!0},"BSL-1.0":{name:"Boost Software License 1.0",url:"http://www.boost.org/LICENSE_1_0.txt",osiApproved:!0},"GPL-1.0":{name:"GNU General Public License v1.0 only",url:"https://www.gnu.org/licenses/old-licenses/gpl-1.0-standalone.html",osiApproved:!1},"BitTorrent-1.0":{name:"BitTorrent Open Source License v1.0",url:"http://sources.gentoo.org/cgi-bin/viewvc.cgi/gentoo-x86/licenses/BitTorrent?r1=1.1&r2=1.1.1.1&diff_format=s",osiApproved:!1},OFFIS:{name:"OFFIS License",url:"https://sourceforge.net/p/xmedcon/code/ci/master/tree/libs/dicom/README",osiApproved:!1},Furuseth:{name:"Furuseth License",url:"https://git.openldap.org/openldap/openldap/-/blob/master/COPYRIGHT?ref_type=heads#L39-51",osiApproved:!1},"Mackerras-3-Clause-acknowledgment":{name:"Mackerras 3-Clause - acknowledgment variant",url:"https://github.com/ppp-project/ppp/blob/master/pppd/auth.c#L6-L28",osiApproved:!1},Zlib:{name:"zlib License",url:"http://www.zlib.net/zlib_license.html",osiApproved:!0},Mup:{name:"Mup License",url:"https://fedoraproject.org/wiki/Licensing/Mup",osiApproved:!1},"MIT-Wu":{name:"MIT Tom Wu Variant",url:"https://github.com/chromium/octane/blob/master/crypto.js",osiApproved:!1},"Hippocratic-2.1":{name:"Hippocratic License 2.1",url:"https://firstdonoharm.dev/version/2/1/license.html",osiApproved:!1},"CC-BY-NC-SA-4.0":{name:"Creative Commons Attribution Non Commercial Share Alike 4.0 International",url:"https://creativecommons.org/licenses/by-nc-sa/4.0/legalcode",osiApproved:!1},"GFDL-1.2-invariants-only":{name:"GNU Free Documentation License v1.2 only - invariants",url:"https://www.gnu.org/licenses/old-licenses/fdl-1.2.txt",osiApproved:!1},Wsuipa:{name:"Wsuipa License",url:"https://fedoraproject.org/wiki/Licensing/Wsuipa",osiApproved:!1},"RPL-1.1":{name:"Reciprocal Public License 1.1",url:"https://opensource.org/licenses/RPL-1.1",osiApproved:!0},"CC-BY-ND-2.0":{name:"Creative Commons Attribution No Derivatives 2.0 Generic",url:"https://creativecommons.org/licenses/by-nd/2.0/legalcode",osiApproved:!1},"CERN-OHL-1.1":{name:"CERN Open Hardware Licence v1.1",url:"https://www.ohwr.org/project/licenses/wikis/cern-ohl-v1.1",osiApproved:!1},Newsletr:{name:"Newsletr License",url:"https://fedoraproject.org/wiki/Licensing/Newsletr",osiApproved:!1},"SimPL-2.0":{name:"Simple Public License 2.0",url:"https://opensource.org/licenses/SimPL-2.0",osiApproved:!0},blessing:{name:"SQLite Blessing",url:"https://www.sqlite.org/src/artifact/e33a4df7e32d742a?ln=4-9",osiApproved:!1},"OLDAP-2.4":{name:"Open LDAP Public License v2.4",url:"http://www.openldap.org/devel/gitweb.cgi?p=openldap.git;a=blob;f=LICENSE;hb=cd1284c4a91a8a380d904eee68d1583f989ed386",osiApproved:!1},"DEC-3-Clause":{name:"DEC 3-Clause License",url:"https://gitlab.freedesktop.org/xorg/xserver/-/blob/master/COPYING?ref_type=heads#L239",osiApproved:!1},"LAL-1.2":{name:"Licence Art Libre 1.2",url:"http://artlibre.org/licence/lal/licence-art-libre-12/",osiApproved:!1},"PHP-3.0":{name:"PHP License v3.0",url:"http://www.php.net/license/3_0.txt",osiApproved:!0},"DRL-1.0":{name:"Detection Rule License 1.0",url:"https://github.com/Neo23x0/sigma/blob/master/LICENSE.Detection.Rules.md",osiApproved:!1},HPND:{name:"Historical Permission Notice and Disclaimer",url:"https://opensource.org/licenses/HPND",osiApproved:!0},"W3C-19980720":{name:"W3C Software Notice and License (1998-07-20)",url:"http://www.w3.org/Consortium/Legal/copyright-software-19980720.html",osiApproved:!1},"CC-BY-SA-2.5":{name:"Creative Commons Attribution Share Alike 2.5 Generic",url:"https://creativecommons.org/licenses/by-sa/2.5/legalcode",osiApproved:!1},"Apache-1.1":{name:"Apache License 1.1",url:"http://apache.org/licenses/LICENSE-1.1",osiApproved:!0},"AFL-1.2":{name:"Academic Free License v1.2",url:"http://opensource.linux-mirror.org/licenses/afl-1.2.txt",osiApproved:!0},"ZPL-2.0":{name:"Zope Public License 2.0",url:"http://old.zope.org/Resources/License/ZPL-2.0",osiApproved:!0},"CAL-1.0":{name:"Cryptographic Autonomy License 1.0",url:"http://cryptographicautonomylicense.com/license-text.html",osiApproved:!0},"AGPL-3.0":{name:"GNU Affero General Public License v3.0",url:"https://www.gnu.org/licenses/agpl.txt",osiApproved:!0},"Interbase-1.0":{name:"Interbase Public License v1.0",url:"https://web.archive.org/web/20060319014854/http://info.borland.com/devsupport/interbase/opensource/IPL.html",osiApproved:!1},"gSOAP-1.3b":{name:"gSOAP Public License v1.3b",url:"http://www.cs.fsu.edu/~engelen/license.html",osiApproved:!1},"Artistic-1.0-Perl":{name:"Artistic License 1.0 (Perl)",url:"http://dev.perl.org/licenses/artistic.html",osiApproved:!0},"NPOSL-3.0":{name:"Non-Profit Open Software License 3.0",url:"https://opensource.org/licenses/NOSL3.0",osiApproved:!0},"LGPL-3.0":{name:"GNU Lesser General Public License v3.0 only",url:"https://www.gnu.org/licenses/lgpl-3.0-standalone.html",osiApproved:!0}};var util;(function(util2){util2.assertEqual=val=>val;function assertIs(_arg){}__name(assertIs,"assertIs"),util2.assertIs=assertIs;function assertNever(_x){throw new Error}__name(assertNever,"assertNever"),util2.assertNever=assertNever,util2.arrayToEnum=items=>{let obj={};for(let item of items)obj[item]=item;return obj},util2.getValidEnumValues=obj=>{let validKeys=util2.objectKeys(obj).filter(k=>typeof obj[obj[k]]!="number"),filtered={};for(let k of validKeys)filtered[k]=obj[k];return util2.objectValues(filtered)},util2.objectValues=obj=>util2.objectKeys(obj).map(function(e){return obj[e]}),util2.objectKeys=typeof Object.keys=="function"?obj=>Object.keys(obj):object=>{let keys=[];for(let key in object)Object.prototype.hasOwnProperty.call(object,key)&&keys.push(key);return keys},util2.find=(arr,checker)=>{for(let item of arr)if(checker(item))return item},util2.isInteger=typeof Number.isInteger=="function"?val=>Number.isInteger(val):val=>typeof val=="number"&&isFinite(val)&&Math.floor(val)===val;function joinValues(array,separator=" | "){return array.map(val=>typeof val=="string"?`'${val}'`:val).join(separator)}__name(joinValues,"joinValues"),util2.joinValues=joinValues,util2.jsonStringifyReplacer=(_,value)=>typeof value=="bigint"?value.toString():value})(util||(util={}));var objectUtil;(function(objectUtil2){objectUtil2.mergeShapes=(first,second)=>({...first,...second})})(objectUtil||(objectUtil={}));var ZodParsedType=util.arrayToEnum(["string","nan","number","integer","float","boolean","date","bigint","symbol","function","undefined","null","array","object","unknown","promise","void","never","map","set"]),getParsedType=__name(data=>{switch(typeof data){case"undefined":return ZodParsedType.undefined;case"string":return ZodParsedType.string;case"number":return isNaN(data)?ZodParsedType.nan:ZodParsedType.number;case"boolean":return ZodParsedType.boolean;case"function":return ZodParsedType.function;case"bigint":return ZodParsedType.bigint;case"symbol":return ZodParsedType.symbol;case"object":return Array.isArray(data)?ZodParsedType.array:data===null?ZodParsedType.null:data.then&&typeof data.then=="function"&&data.catch&&typeof data.catch=="function"?ZodParsedType.promise:typeof Map<"u"&&data instanceof Map?ZodParsedType.map:typeof Set<"u"&&data instanceof Set?ZodParsedType.set:typeof Date<"u"&&data instanceof Date?ZodParsedType.date:ZodParsedType.object;default:return ZodParsedType.unknown}},"getParsedType"),ZodIssueCode=util.arrayToEnum(["invalid_type","invalid_literal","custom","invalid_union","invalid_union_discriminator","invalid_enum_value","unrecognized_keys","invalid_arguments","invalid_return_type","invalid_date","invalid_string","too_small","too_big","invalid_intersection_types","not_multiple_of","not_finite"]),quotelessJson=__name(obj=>JSON.stringify(obj,null,2).replace(/"([^"]+)":/g,"$1:"),"quotelessJson"),ZodError=class _ZodError extends Error{static{__name(this,"ZodError")}constructor(issues){super(),this.issues=[],this.addIssue=sub=>{this.issues=[...this.issues,sub]},this.addIssues=(subs=[])=>{this.issues=[...this.issues,...subs]};let actualProto=new.target.prototype;Object.setPrototypeOf?Object.setPrototypeOf(this,actualProto):this.__proto__=actualProto,this.name="ZodError",this.issues=issues}get errors(){return this.issues}format(_mapper){let mapper=_mapper||function(issue){return issue.message},fieldErrors={_errors:[]},processError=__name(error=>{for(let issue of error.issues)if(issue.code==="invalid_union")issue.unionErrors.map(processError);else if(issue.code==="invalid_return_type")processError(issue.returnTypeError);else if(issue.code==="invalid_arguments")processError(issue.argumentsError);else if(issue.path.length===0)fieldErrors._errors.push(mapper(issue));else{let curr=fieldErrors,i=0;for(;i<issue.path.length;){let el=issue.path[i];i===issue.path.length-1?(curr[el]=curr[el]||{_errors:[]},curr[el]._errors.push(mapper(issue))):curr[el]=curr[el]||{_errors:[]},curr=curr[el],i++}}},"processError");return processError(this),fieldErrors}static assert(value){if(!(value instanceof _ZodError))throw new Error(`Not a ZodError: ${value}`)}toString(){return this.message}get message(){return JSON.stringify(this.issues,util.jsonStringifyReplacer,2)}get isEmpty(){return this.issues.length===0}flatten(mapper=issue=>issue.message){let fieldErrors={},formErrors=[];for(let sub of this.issues)sub.path.length>0?(fieldErrors[sub.path[0]]=fieldErrors[sub.path[0]]||[],fieldErrors[sub.path[0]].push(mapper(sub))):formErrors.push(mapper(sub));return{formErrors,fieldErrors}}get formErrors(){return this.flatten()}};ZodError.create=issues=>new ZodError(issues);var errorMap=__name((issue,_ctx)=>{let message;switch(issue.code){case ZodIssueCode.invalid_type:issue.received===ZodParsedType.undefined?message="Required":message=`Expected ${issue.expected}, received ${issue.received}`;break;case ZodIssueCode.invalid_literal:message=`Invalid literal value, expected ${JSON.stringify(issue.expected,util.jsonStringifyReplacer)}`;break;case ZodIssueCode.unrecognized_keys:message=`Unrecognized key(s) in object: ${util.joinValues(issue.keys,", ")}`;break;case ZodIssueCode.invalid_union:message="Invalid input";break;case ZodIssueCode.invalid_union_discriminator:message=`Invalid discriminator value. Expected ${util.joinValues(issue.options)}`;break;case ZodIssueCode.invalid_enum_value:message=`Invalid enum value. Expected ${util.joinValues(issue.options)}, received '${issue.received}'`;break;case ZodIssueCode.invalid_arguments:message="Invalid function arguments";break;case ZodIssueCode.invalid_return_type:message="Invalid function return type";break;case ZodIssueCode.invalid_date:message="Invalid date";break;case ZodIssueCode.invalid_string:typeof issue.validation=="object"?"includes"in issue.validation?(message=`Invalid input: must include "${issue.validation.includes}"`,typeof issue.validation.position=="number"&&(message=`${message} at one or more positions greater than or equal to ${issue.validation.position}`)):"startsWith"in issue.validation?message=`Invalid input: must start with "${issue.validation.startsWith}"`:"endsWith"in issue.validation?message=`Invalid input: must end with "${issue.validation.endsWith}"`:util.assertNever(issue.validation):issue.validation!=="regex"?message=`Invalid ${issue.validation}`:message="Invalid";break;case ZodIssueCode.too_small:issue.type==="array"?message=`Array must contain ${issue.exact?"exactly":issue.inclusive?"at least":"more than"} ${issue.minimum} element(s)`:issue.type==="string"?message=`String must contain ${issue.exact?"exactly":issue.inclusive?"at least":"over"} ${issue.minimum} character(s)`:issue.type==="number"?message=`Number must be ${issue.exact?"exactly equal to ":issue.inclusive?"greater than or equal to ":"greater than "}${issue.minimum}`:issue.type==="date"?message=`Date must be ${issue.exact?"exactly equal to ":issue.inclusive?"greater than or equal to ":"greater than "}${new Date(Number(issue.minimum))}`:message="Invalid input";break;case ZodIssueCode.too_big:issue.type==="array"?message=`Array must contain ${issue.exact?"exactly":issue.inclusive?"at most":"less than"} ${issue.maximum} element(s)`:issue.type==="string"?message=`String must contain ${issue.exact?"exactly":issue.inclusive?"at most":"under"} ${issue.maximum} character(s)`:issue.type==="number"?message=`Number must be ${issue.exact?"exactly":issue.inclusive?"less than or equal to":"less than"} ${issue.maximum}`:issue.type==="bigint"?message=`BigInt must be ${issue.exact?"exactly":issue.inclusive?"less than or equal to":"less than"} ${issue.maximum}`:issue.type==="date"?message=`Date must be ${issue.exact?"exactly":issue.inclusive?"smaller than or equal to":"smaller than"} ${new Date(Number(issue.maximum))}`:message="Invalid input";break;case ZodIssueCode.custom:message="Invalid input";break;case ZodIssueCode.invalid_intersection_types:message="Intersection results could not be merged";break;case ZodIssueCode.not_multiple_of:message=`Number must be a multiple of ${issue.multipleOf}`;break;case ZodIssueCode.not_finite:message="Number must be finite";break;default:message=_ctx.defaultError,util.assertNever(issue)}return{message}},"errorMap"),overrideErrorMap=errorMap;function setErrorMap(map){overrideErrorMap=map}__name(setErrorMap,"setErrorMap");function getErrorMap(){return overrideErrorMap}__name(getErrorMap,"getErrorMap");var makeIssue=__name(params=>{let{data,path:path2,errorMaps,issueData}=params,fullPath=[...path2,...issueData.path||[]],fullIssue={...issueData,path:fullPath};if(issueData.message!==void 0)return{...issueData,path:fullPath,message:issueData.message};let errorMessage="",maps=errorMaps.filter(m=>!!m).slice().reverse();for(let map of maps)errorMessage=map(fullIssue,{data,defaultError:errorMessage}).message;return{...issueData,path:fullPath,message:errorMessage}},"makeIssue"),EMPTY_PATH=[];function addIssueToContext(ctx,issueData){let overrideMap=getErrorMap(),issue=makeIssue({issueData,data:ctx.data,path:ctx.path,errorMaps:[ctx.common.contextualErrorMap,ctx.schemaErrorMap,overrideMap,overrideMap===errorMap?void 0:errorMap].filter(x=>!!x)});ctx.common.issues.push(issue)}__name(addIssueToContext,"addIssueToContext");var ParseStatus=class _ParseStatus{static{__name(this,"ParseStatus")}constructor(){this.value="valid"}dirty(){this.value==="valid"&&(this.value="dirty")}abort(){this.value!=="aborted"&&(this.value="aborted")}static mergeArray(status,results){let arrayValue=[];for(let s of results){if(s.status==="aborted")return INVALID;s.status==="dirty"&&status.dirty(),arrayValue.push(s.value)}return{status:status.value,value:arrayValue}}static async mergeObjectAsync(status,pairs){let syncPairs=[];for(let pair of pairs){let key=await pair.key,value=await pair.value;syncPairs.push({key,value})}return _ParseStatus.mergeObjectSync(status,syncPairs)}static mergeObjectSync(status,pairs){let finalObject={};for(let pair of pairs){let{key,value}=pair;if(key.status==="aborted"||value.status==="aborted")return INVALID;key.status==="dirty"&&status.dirty(),value.status==="dirty"&&status.dirty(),key.value!=="__proto__"&&(typeof value.value<"u"||pair.alwaysSet)&&(finalObject[key.value]=value.value)}return{status:status.value,value:finalObject}}},INVALID=Object.freeze({status:"aborted"}),DIRTY=__name(value=>({status:"dirty",value}),"DIRTY"),OK=__name(value=>({status:"valid",value}),"OK"),isAborted=__name(x=>x.status==="aborted","isAborted"),isDirty=__name(x=>x.status==="dirty","isDirty"),isValid=__name(x=>x.status==="valid","isValid"),isAsync=__name(x=>typeof Promise<"u"&&x instanceof Promise,"isAsync");function __classPrivateFieldGet(receiver,state,kind,f){if(kind==="a"&&!f)throw new TypeError("Private accessor was defined without a getter");if(typeof state=="function"?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return kind==="m"?f:kind==="a"?f.call(receiver):f?f.value:state.get(receiver)}__name(__classPrivateFieldGet,"__classPrivateFieldGet");function __classPrivateFieldSet(receiver,state,value,kind,f){if(kind==="m")throw new TypeError("Private method is not writable");if(kind==="a"&&!f)throw new TypeError("Private accessor was defined without a setter");if(typeof state=="function"?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot write private member to an object whose class did not declare it");return kind==="a"?f.call(receiver,value):f?f.value=value:state.set(receiver,value),value}__name(__classPrivateFieldSet,"__classPrivateFieldSet");var errorUtil;(function(errorUtil2){errorUtil2.errToObj=message=>typeof message=="string"?{message}:message||{},errorUtil2.toString=message=>typeof message=="string"?message:message?.message})(errorUtil||(errorUtil={}));var _ZodEnum_cache,_ZodNativeEnum_cache,ParseInputLazyPath=class{static{__name(this,"ParseInputLazyPath")}constructor(parent,value,path2,key){this._cachedPath=[],this.parent=parent,this.data=value,this._path=path2,this._key=key}get path(){return this._cachedPath.length||(this._key instanceof Array?this._cachedPath.push(...this._path,...this._key):this._cachedPath.push(...this._path,this._key)),this._cachedPath}},handleResult=__name((ctx,result)=>{if(isValid(result))return{success:!0,data:result.value};if(!ctx.common.issues.length)throw new Error("Validation failed but no issues detected.");return{success:!1,get error(){if(this._error)return this._error;let error=new ZodError(ctx.common.issues);return this._error=error,this._error}}},"handleResult");function processCreateParams(params){if(!params)return{};let{errorMap:errorMap2,invalid_type_error,required_error,description}=params;if(errorMap2&&(invalid_type_error||required_error))throw new Error(`Can't use "invalid_type_error" or "required_error" in conjunction with custom error map.`);return errorMap2?{errorMap:errorMap2,description}:{errorMap:__name((iss,ctx)=>{var _a,_b;let{message}=params;return iss.code==="invalid_enum_value"?{message:message??ctx.defaultError}:typeof ctx.data>"u"?{message:(_a=message??required_error)!==null&&_a!==void 0?_a:ctx.defaultError}:iss.code!=="invalid_type"?{message:ctx.defaultError}:{message:(_b=message??invalid_type_error)!==null&&_b!==void 0?_b:ctx.defaultError}},"customMap"),description}}__name(processCreateParams,"processCreateParams");var ZodType=class{static{__name(this,"ZodType")}constructor(def){this.spa=this.safeParseAsync,this._def=def,this.parse=this.parse.bind(this),this.safeParse=this.safeParse.bind(this),this.parseAsync=this.parseAsync.bind(this),this.safeParseAsync=this.safeParseAsync.bind(this),this.spa=this.spa.bind(this),this.refine=this.refine.bind(this),this.refinement=this.refinement.bind(this),this.superRefine=this.superRefine.bind(this),this.optional=this.optional.bind(this),this.nullable=this.nullable.bind(this),this.nullish=this.nullish.bind(this),this.array=this.array.bind(this),this.promise=this.promise.bind(this),this.or=this.or.bind(this),this.and=this.and.bind(this),this.transform=this.transform.bind(this),this.brand=this.brand.bind(this),this.default=this.default.bind(this),this.catch=this.catch.bind(this),this.describe=this.describe.bind(this),this.pipe=this.pipe.bind(this),this.readonly=this.readonly.bind(this),this.isNullable=this.isNullable.bind(this),this.isOptional=this.isOptional.bind(this)}get description(){return this._def.description}_getType(input){return getParsedType(input.data)}_getOrReturnCtx(input,ctx){return ctx||{common:input.parent.common,data:input.data,parsedType:getParsedType(input.data),schemaErrorMap:this._def.errorMap,path:input.path,parent:input.parent}}_processInputParams(input){return{status:new ParseStatus,ctx:{common:input.parent.common,data:input.data,parsedType:getParsedType(input.data),schemaErrorMap:this._def.errorMap,path:input.path,parent:input.parent}}}_parseSync(input){let result=this._parse(input);if(isAsync(result))throw new Error("Synchronous parse encountered promise.");return result}_parseAsync(input){let result=this._parse(input);return Promise.resolve(result)}parse(data,params){let result=this.safeParse(data,params);if(result.success)return result.data;throw result.error}safeParse(data,params){var _a;let ctx={common:{issues:[],async:(_a=params?.async)!==null&&_a!==void 0?_a:!1,contextualErrorMap:params?.errorMap},path:params?.path||[],schemaErrorMap:this._def.errorMap,parent:null,data,parsedType:getParsedType(data)},result=this._parseSync({data,path:ctx.path,parent:ctx});return handleResult(ctx,result)}async parseAsync(data,params){let result=await this.safeParseAsync(data,params);if(result.success)return result.data;throw result.error}async safeParseAsync(data,params){let ctx={common:{issues:[],contextualErrorMap:params?.errorMap,async:!0},path:params?.path||[],schemaErrorMap:this._def.errorMap,parent:null,data,parsedType:getParsedType(data)},maybeAsyncResult=this._parse({data,path:ctx.path,parent:ctx}),result=await(isAsync(maybeAsyncResult)?maybeAsyncResult:Promise.resolve(maybeAsyncResult));return handleResult(ctx,result)}refine(check,message){let getIssueProperties=__name(val=>typeof message=="string"||typeof message>"u"?{message}:typeof message=="function"?message(val):message,"getIssueProperties");return this._refinement((val,ctx)=>{let result=check(val),setError=__name(()=>ctx.addIssue({code:ZodIssueCode.custom,...getIssueProperties(val)}),"setError");return typeof Promise<"u"&&result instanceof Promise?result.then(data=>data?!0:(setError(),!1)):result?!0:(setError(),!1)})}refinement(check,refinementData){return this._refinement((val,ctx)=>check(val)?!0:(ctx.addIssue(typeof refinementData=="function"?refinementData(val,ctx):refinementData),!1))}_refinement(refinement){return new ZodEffects({schema:this,typeName:ZodFirstPartyTypeKind.ZodEffects,effect:{type:"refinement",refinement}})}superRefine(refinement){return this._refinement(refinement)}optional(){return ZodOptional.create(this,this._def)}nullable(){return ZodNullable.create(this,this._def)}nullish(){return this.nullable().optional()}array(){return ZodArray.create(this,this._def)}promise(){return ZodPromise.create(this,this._def)}or(option){return ZodUnion.create([this,option],this._def)}and(incoming){return ZodIntersection.create(this,incoming,this._def)}transform(transform){return new ZodEffects({...processCreateParams(this._def),schema:this,typeName:ZodFirstPartyTypeKind.ZodEffects,effect:{type:"transform",transform}})}default(def){let defaultValueFunc=typeof def=="function"?def:()=>def;return new ZodDefault({...processCreateParams(this._def),innerType:this,defaultValue:defaultValueFunc,typeName:ZodFirstPartyTypeKind.ZodDefault})}brand(){return new ZodBranded({typeName:ZodFirstPartyTypeKind.ZodBranded,type:this,...processCreateParams(this._def)})}catch(def){let catchValueFunc=typeof def=="function"?def:()=>def;return new ZodCatch({...processCreateParams(this._def),innerType:this,catchValue:catchValueFunc,typeName:ZodFirstPartyTypeKind.ZodCatch})}describe(description){let This=this.constructor;return new This({...this._def,description})}pipe(target){return ZodPipeline.create(this,target)}readonly(){return ZodReadonly.create(this)}isOptional(){return this.safeParse(void 0).success}isNullable(){return this.safeParse(null).success}},cuidRegex=/^c[^\s-]{8,}$/i,cuid2Regex=/^[0-9a-z]+$/,ulidRegex=/^[0-9A-HJKMNP-TV-Z]{26}$/,uuidRegex=/^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$/i,nanoidRegex=/^[a-z0-9_-]{21}$/i,durationRegex=/^[-+]?P(?!$)(?:(?:[-+]?\d+Y)|(?:[-+]?\d+[.,]\d+Y$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:(?:[-+]?\d+W)|(?:[-+]?\d+[.,]\d+W$))?(?:(?:[-+]?\d+D)|(?:[-+]?\d+[.,]\d+D$))?(?:T(?=[\d+-])(?:(?:[-+]?\d+H)|(?:[-+]?\d+[.,]\d+H$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:[-+]?\d+(?:[.,]\d+)?S)?)??$/,emailRegex=/^(?!\.)(?!.*\.\.)([A-Z0-9_'+\-\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\-]*\.)+[A-Z]{2,}$/i,_emojiRegex="^(\\p{Extended_Pictographic}|\\p{Emoji_Component})+$",emojiRegex,ipv4Regex=/^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/,ipv6Regex=/^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/,base64Regex=/^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/,dateRegexSource="((\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\d|30)|(02)-(0[1-9]|1\\d|2[0-8])))",dateRegex=new RegExp(`^${dateRegexSource}$`);function timeRegexSource(args){let regex="([01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d";return args.precision?regex=`${regex}\\.\\d{${args.precision}}`:args.precision==null&&(regex=`${regex}(\\.\\d+)?`),regex}__name(timeRegexSource,"timeRegexSource");function timeRegex(args){return new RegExp(`^${timeRegexSource(args)}$`)}__name(timeRegex,"timeRegex");function datetimeRegex(args){let regex=`${dateRegexSource}T${timeRegexSource(args)}`,opts=[];return opts.push(args.local?"Z?":"Z"),args.offset&&opts.push("([+-]\\d{2}:?\\d{2})"),regex=`${regex}(${opts.join("|")})`,new RegExp(`^${regex}$`)}__name(datetimeRegex,"datetimeRegex");function isValidIP(ip,version){return!!((version==="v4"||!version)&&ipv4Regex.test(ip)||(version==="v6"||!version)&&ipv6Regex.test(ip))}__name(isValidIP,"isValidIP");var ZodString=class _ZodString extends ZodType{static{__name(this,"ZodString")}_parse(input){if(this._def.coerce&&(input.data=String(input.data)),this._getType(input)!==ZodParsedType.string){let ctx2=this._getOrReturnCtx(input);return addIssueToContext(ctx2,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.string,received:ctx2.parsedType}),INVALID}let status=new ParseStatus,ctx;for(let check of this._def.checks)if(check.kind==="min")input.data.length<check.value&&(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.too_small,minimum:check.value,type:"string",inclusive:!0,exact:!1,message:check.message}),status.dirty());else if(check.kind==="max")input.data.length>check.value&&(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.too_big,maximum:check.value,type:"string",inclusive:!0,exact:!1,message:check.message}),status.dirty());else if(check.kind==="length"){let tooBig=input.data.length>check.value,tooSmall=input.data.length<check.value;(tooBig||tooSmall)&&(ctx=this._getOrReturnCtx(input,ctx),tooBig?addIssueToContext(ctx,{code:ZodIssueCode.too_big,maximum:check.value,type:"string",inclusive:!0,exact:!0,message:check.message}):tooSmall&&addIssueToContext(ctx,{code:ZodIssueCode.too_small,minimum:check.value,type:"string",inclusive:!0,exact:!0,message:check.message}),status.dirty())}else if(check.kind==="email")emailRegex.test(input.data)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{validation:"email",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty());else if(check.kind==="emoji")emojiRegex||(emojiRegex=new RegExp(_emojiRegex,"u")),emojiRegex.test(input.data)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{validation:"emoji",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty());else if(check.kind==="uuid")uuidRegex.test(input.data)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{validation:"uuid",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty());else if(check.kind==="nanoid")nanoidRegex.test(input.data)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{validation:"nanoid",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty());else if(check.kind==="cuid")cuidRegex.test(input.data)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{validation:"cuid",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty());else if(check.kind==="cuid2")cuid2Regex.test(input.data)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{validation:"cuid2",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty());else if(check.kind==="ulid")ulidRegex.test(input.data)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{validation:"ulid",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty());else if(check.kind==="url")try{new URL(input.data)}catch{ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{validation:"url",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty()}else check.kind==="regex"?(check.regex.lastIndex=0,check.regex.test(input.data)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{validation:"regex",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty())):check.kind==="trim"?input.data=input.data.trim():check.kind==="includes"?input.data.includes(check.value,check.position)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.invalid_string,validation:{includes:check.value,position:check.position},message:check.message}),status.dirty()):check.kind==="toLowerCase"?input.data=input.data.toLowerCase():check.kind==="toUpperCase"?input.data=input.data.toUpperCase():check.kind==="startsWith"?input.data.startsWith(check.value)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.invalid_string,validation:{startsWith:check.value},message:check.message}),status.dirty()):check.kind==="endsWith"?input.data.endsWith(check.value)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.invalid_string,validation:{endsWith:check.value},message:check.message}),status.dirty()):check.kind==="datetime"?datetimeRegex(check).test(input.data)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.invalid_string,validation:"datetime",message:check.message}),status.dirty()):check.kind==="date"?dateRegex.test(input.data)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.invalid_string,validation:"date",message:check.message}),status.dirty()):check.kind==="time"?timeRegex(check).test(input.data)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.invalid_string,validation:"time",message:check.message}),status.dirty()):check.kind==="duration"?durationRegex.test(input.data)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{validation:"duration",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty()):check.kind==="ip"?isValidIP(input.data,check.version)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{validation:"ip",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty()):check.kind==="base64"?base64Regex.test(input.data)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{validation:"base64",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty()):util.assertNever(check);return{status:status.value,value:input.data}}_regex(regex,validation,message){return this.refinement(data=>regex.test(data),{validation,code:ZodIssueCode.invalid_string,...errorUtil.errToObj(message)})}_addCheck(check){return new _ZodString({...this._def,checks:[...this._def.checks,check]})}email(message){return this._addCheck({kind:"email",...errorUtil.errToObj(message)})}url(message){return this._addCheck({kind:"url",...errorUtil.errToObj(message)})}emoji(message){return this._addCheck({kind:"emoji",...errorUtil.errToObj(message)})}uuid(message){return this._addCheck({kind:"uuid",...errorUtil.errToObj(message)})}nanoid(message){return this._addCheck({kind:"nanoid",...errorUtil.errToObj(message)})}cuid(message){return this._addCheck({kind:"cuid",...errorUtil.errToObj(message)})}cuid2(message){return this._addCheck({kind:"cuid2",...errorUtil.errToObj(message)})}ulid(message){return this._addCheck({kind:"ulid",...errorUtil.errToObj(message)})}base64(message){return this._addCheck({kind:"base64",...errorUtil.errToObj(message)})}ip(options){return this._addCheck({kind:"ip",...errorUtil.errToObj(options)})}datetime(options){var _a,_b;return typeof options=="string"?this._addCheck({kind:"datetime",precision:null,offset:!1,local:!1,message:options}):this._addCheck({kind:"datetime",precision:typeof options?.precision>"u"?null:options?.precision,offset:(_a=options?.offset)!==null&&_a!==void 0?_a:!1,local:(_b=options?.local)!==null&&_b!==void 0?_b:!1,...errorUtil.errToObj(options?.message)})}date(message){return this._addCheck({kind:"date",message})}time(options){return typeof options=="string"?this._addCheck({kind:"time",precision:null,message:options}):this._addCheck({kind:"time",precision:typeof options?.precision>"u"?null:options?.precision,...errorUtil.errToObj(options?.message)})}duration(message){return this._addCheck({kind:"duration",...errorUtil.errToObj(message)})}regex(regex,message){return this._addCheck({kind:"regex",regex,...errorUtil.errToObj(message)})}includes(value,options){return this._addCheck({kind:"includes",value,position:options?.position,...errorUtil.errToObj(options?.message)})}startsWith(value,message){return this._addCheck({kind:"startsWith",value,...errorUtil.errToObj(message)})}endsWith(value,message){return this._addCheck({kind:"endsWith",value,...errorUtil.errToObj(message)})}min(minLength,message){return this._addCheck({kind:"min",value:minLength,...errorUtil.errToObj(message)})}max(maxLength,message){return this._addCheck({kind:"max",value:maxLength,...errorUtil.errToObj(message)})}length(len,message){return this._addCheck({kind:"length",value:len,...errorUtil.errToObj(message)})}nonempty(message){return this.min(1,errorUtil.errToObj(message))}trim(){return new _ZodString({...this._def,checks:[...this._def.checks,{kind:"trim"}]})}toLowerCase(){return new _ZodString({...this._def,checks:[...this._def.checks,{kind:"toLowerCase"}]})}toUpperCase(){return new _ZodString({...this._def,checks:[...this._def.checks,{kind:"toUpperCase"}]})}get isDatetime(){return!!this._def.checks.find(ch=>ch.kind==="datetime")}get isDate(){return!!this._def.checks.find(ch=>ch.kind==="date")}get isTime(){return!!this._def.checks.find(ch=>ch.kind==="time")}get isDuration(){return!!this._def.checks.find(ch=>ch.kind==="duration")}get isEmail(){return!!this._def.checks.find(ch=>ch.kind==="email")}get isURL(){return!!this._def.checks.find(ch=>ch.kind==="url")}get isEmoji(){return!!this._def.checks.find(ch=>ch.kind==="emoji")}get isUUID(){return!!this._def.checks.find(ch=>ch.kind==="uuid")}get isNANOID(){return!!this._def.checks.find(ch=>ch.kind==="nanoid")}get isCUID(){return!!this._def.checks.find(ch=>ch.kind==="cuid")}get isCUID2(){return!!this._def.checks.find(ch=>ch.kind==="cuid2")}get isULID(){return!!this._def.checks.find(ch=>ch.kind==="ulid")}get isIP(){return!!this._def.checks.find(ch=>ch.kind==="ip")}get isBase64(){return!!this._def.checks.find(ch=>ch.kind==="base64")}get minLength(){let min=null;for(let ch of this._def.checks)ch.kind==="min"&&(min===null||ch.value>min)&&(min=ch.value);return min}get maxLength(){let max=null;for(let ch of this._def.checks)ch.kind==="max"&&(max===null||ch.value<max)&&(max=ch.value);return max}};ZodString.create=params=>{var _a;return new ZodString({checks:[],typeName:ZodFirstPartyTypeKind.ZodString,coerce:(_a=params?.coerce)!==null&&_a!==void 0?_a:!1,...processCreateParams(params)})};function floatSafeRemainder(val,step){let valDecCount=(val.toString().split(".")[1]||"").length,stepDecCount=(step.toString().split(".")[1]||"").length,decCount=valDecCount>stepDecCount?valDecCount:stepDecCount,valInt=parseInt(val.toFixed(decCount).replace(".","")),stepInt=parseInt(step.toFixed(decCount).replace(".",""));return valInt%stepInt/Math.pow(10,decCount)}__name(floatSafeRemainder,"floatSafeRemainder");var ZodNumber=class _ZodNumber extends ZodType{static{__name(this,"ZodNumber")}constructor(){super(...arguments),this.min=this.gte,this.max=this.lte,this.step=this.multipleOf}_parse(input){if(this._def.coerce&&(input.data=Number(input.data)),this._getType(input)!==ZodParsedType.number){let ctx2=this._getOrReturnCtx(input);return addIssueToContext(ctx2,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.number,received:ctx2.parsedType}),INVALID}let ctx,status=new ParseStatus;for(let check of this._def.checks)check.kind==="int"?util.isInteger(input.data)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:"integer",received:"float",message:check.message}),status.dirty()):check.kind==="min"?(check.inclusive?input.data<check.value:input.data<=check.value)&&(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.too_small,minimum:check.value,type:"number",inclusive:check.inclusive,exact:!1,message:check.message}),status.dirty()):check.kind==="max"?(check.inclusive?input.data>check.value:input.data>=check.value)&&(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.too_big,maximum:check.value,type:"number",inclusive:check.inclusive,exact:!1,message:check.message}),status.dirty()):check.kind==="multipleOf"?floatSafeRemainder(input.data,check.value)!==0&&(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.not_multiple_of,multipleOf:check.value,message:check.message}),status.dirty()):check.kind==="finite"?Number.isFinite(input.data)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.not_finite,message:check.message}),status.dirty()):util.assertNever(check);return{status:status.value,value:input.data}}gte(value,message){return this.setLimit("min",value,!0,errorUtil.toString(message))}gt(value,message){return this.setLimit("min",value,!1,errorUtil.toString(message))}lte(value,message){return this.setLimit("max",value,!0,errorUtil.toString(message))}lt(value,message){return this.setLimit("max",value,!1,errorUtil.toString(message))}setLimit(kind,value,inclusive,message){return new _ZodNumber({...this._def,checks:[...this._def.checks,{kind,value,inclusive,message:errorUtil.toString(message)}]})}_addCheck(check){return new _ZodNumber({...this._def,checks:[...this._def.checks,check]})}int(message){return this._addCheck({kind:"int",message:errorUtil.toString(message)})}positive(message){return this._addCheck({kind:"min",value:0,inclusive:!1,message:errorUtil.toString(message)})}negative(message){return this._addCheck({kind:"max",value:0,inclusive:!1,message:errorUtil.toString(message)})}nonpositive(message){return this._addCheck({kind:"max",value:0,inclusive:!0,message:errorUtil.toString(message)})}nonnegative(message){return this._addCheck({kind:"min",value:0,inclusive:!0,message:errorUtil.toString(message)})}multipleOf(value,message){return this._addCheck({kind:"multipleOf",value,message:errorUtil.toString(message)})}finite(message){return this._addCheck({kind:"finite",message:errorUtil.toString(message)})}safe(message){return this._addCheck({kind:"min",inclusive:!0,value:Number.MIN_SAFE_INTEGER,message:errorUtil.toString(message)})._addCheck({kind:"max",inclusive:!0,value:Number.MAX_SAFE_INTEGER,message:errorUtil.toString(message)})}get minValue(){let min=null;for(let ch of this._def.checks)ch.kind==="min"&&(min===null||ch.value>min)&&(min=ch.value);return min}get maxValue(){let max=null;for(let ch of this._def.checks)ch.kind==="max"&&(max===null||ch.value<max)&&(max=ch.value);return max}get isInt(){return!!this._def.checks.find(ch=>ch.kind==="int"||ch.kind==="multipleOf"&&util.isInteger(ch.value))}get isFinite(){let max=null,min=null;for(let ch of this._def.checks){if(ch.kind==="finite"||ch.kind==="int"||ch.kind==="multipleOf")return!0;ch.kind==="min"?(min===null||ch.value>min)&&(min=ch.value):ch.kind==="max"&&(max===null||ch.value<max)&&(max=ch.value)}return Number.isFinite(min)&&Number.isFinite(max)}};ZodNumber.create=params=>new ZodNumber({checks:[],typeName:ZodFirstPartyTypeKind.ZodNumber,coerce:params?.coerce||!1,...processCreateParams(params)});var ZodBigInt=class _ZodBigInt extends ZodType{static{__name(this,"ZodBigInt")}constructor(){super(...arguments),this.min=this.gte,this.max=this.lte}_parse(input){if(this._def.coerce&&(input.data=BigInt(input.data)),this._getType(input)!==ZodParsedType.bigint){let ctx2=this._getOrReturnCtx(input);return addIssueToContext(ctx2,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.bigint,received:ctx2.parsedType}),INVALID}let ctx,status=new ParseStatus;for(let check of this._def.checks)check.kind==="min"?(check.inclusive?input.data<check.value:input.data<=check.value)&&(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.too_small,type:"bigint",minimum:check.value,inclusive:check.inclusive,message:check.message}),status.dirty()):check.kind==="max"?(check.inclusive?input.data>check.value:input.data>=check.value)&&(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.too_big,type:"bigint",maximum:check.value,inclusive:check.inclusive,message:check.message}),status.dirty()):check.kind==="multipleOf"?input.data%check.value!==BigInt(0)&&(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.not_multiple_of,multipleOf:check.value,message:check.message}),status.dirty()):util.assertNever(check);return{status:status.value,value:input.data}}gte(value,message){return this.setLimit("min",value,!0,errorUtil.toString(message))}gt(value,message){return this.setLimit("min",value,!1,errorUtil.toString(message))}lte(value,message){return this.setLimit("max",value,!0,errorUtil.toString(message))}lt(value,message){return this.setLimit("max",value,!1,errorUtil.toString(message))}setLimit(kind,value,inclusive,message){return new _ZodBigInt({...this._def,checks:[...this._def.checks,{kind,value,inclusive,message:errorUtil.toString(message)}]})}_addCheck(check){return new _ZodBigInt({...this._def,checks:[...this._def.checks,check]})}positive(message){return this._addCheck({kind:"min",value:BigInt(0),inclusive:!1,message:errorUtil.toString(message)})}negative(message){return this._addCheck({kind:"max",value:BigInt(0),inclusive:!1,message:errorUtil.toString(message)})}nonpositive(message){return this._addCheck({kind:"max",value:BigInt(0),inclusive:!0,message:errorUtil.toString(message)})}nonnegative(message){return this._addCheck({kind:"min",value:BigInt(0),inclusive:!0,message:errorUtil.toString(message)})}multipleOf(value,message){return this._addCheck({kind:"multipleOf",value,message:errorUtil.toString(message)})}get minValue(){let min=null;for(let ch of this._def.checks)ch.kind==="min"&&(min===null||ch.value>min)&&(min=ch.value);return min}get maxValue(){let max=null;for(let ch of this._def.checks)ch.kind==="max"&&(max===null||ch.value<max)&&(max=ch.value);return max}};ZodBigInt.create=params=>{var _a;return new ZodBigInt({checks:[],typeName:ZodFirstPartyTypeKind.ZodBigInt,coerce:(_a=params?.coerce)!==null&&_a!==void 0?_a:!1,...processCreateParams(params)})};var ZodBoolean=class extends ZodType{static{__name(this,"ZodBoolean")}_parse(input){if(this._def.coerce&&(input.data=!!input.data),this._getType(input)!==ZodParsedType.boolean){let ctx=this._getOrReturnCtx(input);return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.boolean,received:ctx.parsedType}),INVALID}return OK(input.data)}};ZodBoolean.create=params=>new ZodBoolean({typeName:ZodFirstPartyTypeKind.ZodBoolean,coerce:params?.coerce||!1,...processCreateParams(params)});var ZodDate=class _ZodDate extends ZodType{static{__name(this,"ZodDate")}_parse(input){if(this._def.coerce&&(input.data=new Date(input.data)),this._getType(input)!==ZodParsedType.date){let ctx2=this._getOrReturnCtx(input);return addIssueToContext(ctx2,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.date,received:ctx2.parsedType}),INVALID}if(isNaN(input.data.getTime())){let ctx2=this._getOrReturnCtx(input);return addIssueToContext(ctx2,{code:ZodIssueCode.invalid_date}),INVALID}let status=new ParseStatus,ctx;for(let check of this._def.checks)check.kind==="min"?input.data.getTime()<check.value&&(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.too_small,message:check.message,inclusive:!0,exact:!1,minimum:check.value,type:"date"}),status.dirty()):check.kind==="max"?input.data.getTime()>check.value&&(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.too_big,message:check.message,inclusive:!0,exact:!1,maximum:check.value,type:"date"}),status.dirty()):util.assertNever(check);return{status:status.value,value:new Date(input.data.getTime())}}_addCheck(check){return new _ZodDate({...this._def,checks:[...this._def.checks,check]})}min(minDate,message){return this._addCheck({kind:"min",value:minDate.getTime(),message:errorUtil.toString(message)})}max(maxDate,message){return this._addCheck({kind:"max",value:maxDate.getTime(),message:errorUtil.toString(message)})}get minDate(){let min=null;for(let ch of this._def.checks)ch.kind==="min"&&(min===null||ch.value>min)&&(min=ch.value);return min!=null?new Date(min):null}get maxDate(){let max=null;for(let ch of this._def.checks)ch.kind==="max"&&(max===null||ch.value<max)&&(max=ch.value);return max!=null?new Date(max):null}};ZodDate.create=params=>new ZodDate({checks:[],coerce:params?.coerce||!1,typeName:ZodFirstPartyTypeKind.ZodDate,...processCreateParams(params)});var ZodSymbol=class extends ZodType{static{__name(this,"ZodSymbol")}_parse(input){if(this._getType(input)!==ZodParsedType.symbol){let ctx=this._getOrReturnCtx(input);return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.symbol,received:ctx.parsedType}),INVALID}return OK(input.data)}};ZodSymbol.create=params=>new ZodSymbol({typeName:ZodFirstPartyTypeKind.ZodSymbol,...processCreateParams(params)});var ZodUndefined=class extends ZodType{static{__name(this,"ZodUndefined")}_parse(input){if(this._getType(input)!==ZodParsedType.undefined){let ctx=this._getOrReturnCtx(input);return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.undefined,received:ctx.parsedType}),INVALID}return OK(input.data)}};ZodUndefined.create=params=>new ZodUndefined({typeName:ZodFirstPartyTypeKind.ZodUndefined,...processCreateParams(params)});var ZodNull=class extends ZodType{static{__name(this,"ZodNull")}_parse(input){if(this._getType(input)!==ZodParsedType.null){let ctx=this._getOrReturnCtx(input);return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.null,received:ctx.parsedType}),INVALID}return OK(input.data)}};ZodNull.create=params=>new ZodNull({typeName:ZodFirstPartyTypeKind.ZodNull,...processCreateParams(params)});var ZodAny=class extends ZodType{static{__name(this,"ZodAny")}constructor(){super(...arguments),this._any=!0}_parse(input){return OK(input.data)}};ZodAny.create=params=>new ZodAny({typeName:ZodFirstPartyTypeKind.ZodAny,...processCreateParams(params)});var ZodUnknown=class extends ZodType{static{__name(this,"ZodUnknown")}constructor(){super(...arguments),this._unknown=!0}_parse(input){return OK(input.data)}};ZodUnknown.create=params=>new ZodUnknown({typeName:ZodFirstPartyTypeKind.ZodUnknown,...processCreateParams(params)});var ZodNever=class extends ZodType{static{__name(this,"ZodNever")}_parse(input){let ctx=this._getOrReturnCtx(input);return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.never,received:ctx.parsedType}),INVALID}};ZodNever.create=params=>new ZodNever({typeName:ZodFirstPartyTypeKind.ZodNever,...processCreateParams(params)});var ZodVoid=class extends ZodType{static{__name(this,"ZodVoid")}_parse(input){if(this._getType(input)!==ZodParsedType.undefined){let ctx=this._getOrReturnCtx(input);return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.void,received:ctx.parsedType}),INVALID}return OK(input.data)}};ZodVoid.create=params=>new ZodVoid({typeName:ZodFirstPartyTypeKind.ZodVoid,...processCreateParams(params)});var ZodArray=class _ZodArray extends ZodType{static{__name(this,"ZodArray")}_parse(input){let{ctx,status}=this._processInputParams(input),def=this._def;if(ctx.parsedType!==ZodParsedType.array)return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.array,received:ctx.parsedType}),INVALID;if(def.exactLength!==null){let tooBig=ctx.data.length>def.exactLength.value,tooSmall=ctx.data.length<def.exactLength.value;(tooBig||tooSmall)&&(addIssueToContext(ctx,{code:tooBig?ZodIssueCode.too_big:ZodIssueCode.too_small,minimum:tooSmall?def.exactLength.value:void 0,maximum:tooBig?def.exactLength.value:void 0,type:"array",inclusive:!0,exact:!0,message:def.exactLength.message}),status.dirty())}if(def.minLength!==null&&ctx.data.length<def.minLength.value&&(addIssueToContext(ctx,{code:ZodIssueCode.too_small,minimum:def.minLength.value,type:"array",inclusive:!0,exact:!1,message:def.minLength.message}),status.dirty()),def.maxLength!==null&&ctx.data.length>def.maxLength.value&&(addIssueToContext(ctx,{code:ZodIssueCode.too_big,maximum:def.maxLength.value,type:"array",inclusive:!0,exact:!1,message:def.maxLength.message}),status.dirty()),ctx.common.async)return Promise.all([...ctx.data].map((item,i)=>def.type._parseAsync(new ParseInputLazyPath(ctx,item,ctx.path,i)))).then(result2=>ParseStatus.mergeArray(status,result2));let result=[...ctx.data].map((item,i)=>def.type._parseSync(new ParseInputLazyPath(ctx,item,ctx.path,i)));return ParseStatus.mergeArray(status,result)}get element(){return this._def.type}min(minLength,message){return new _ZodArray({...this._def,minLength:{value:minLength,message:errorUtil.toString(message)}})}max(maxLength,message){return new _ZodArray({...this._def,maxLength:{value:maxLength,message:errorUtil.toString(message)}})}length(len,message){return new _ZodArray({...this._def,exactLength:{value:len,message:errorUtil.toString(message)}})}nonempty(message){return this.min(1,message)}};ZodArray.create=(schema,params)=>new ZodArray({type:schema,minLength:null,maxLength:null,exactLength:null,typeName:ZodFirstPartyTypeKind.ZodArray,...processCreateParams(params)});function deepPartialify(schema){if(schema instanceof ZodObject){let newShape={};for(let key in schema.shape){let fieldSchema=schema.shape[key];newShape[key]=ZodOptional.create(deepPartialify(fieldSchema))}return new ZodObject({...schema._def,shape:()=>newShape})}else return schema instanceof ZodArray?new ZodArray({...schema._def,type:deepPartialify(schema.element)}):schema instanceof ZodOptional?ZodOptional.create(deepPartialify(schema.unwrap())):schema instanceof ZodNullable?ZodNullable.create(deepPartialify(schema.unwrap())):schema instanceof ZodTuple?ZodTuple.create(schema.items.map(item=>deepPartialify(item))):schema}__name(deepPartialify,"deepPartialify");var ZodObject=class _ZodObject extends ZodType{static{__name(this,"ZodObject")}constructor(){super(...arguments),this._cached=null,this.nonstrict=this.passthrough,this.augment=this.extend}_getCached(){if(this._cached!==null)return this._cached;let shape=this._def.shape(),keys=util.objectKeys(shape);return this._cached={shape,keys}}_parse(input){if(this._getType(input)!==ZodParsedType.object){let ctx2=this._getOrReturnCtx(input);return addIssueToContext(ctx2,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.object,received:ctx2.parsedType}),INVALID}let{status,ctx}=this._processInputParams(input),{shape,keys:shapeKeys}=this._getCached(),extraKeys=[];if(!(this._def.catchall instanceof ZodNever&&this._def.unknownKeys==="strip"))for(let key in ctx.data)shapeKeys.includes(key)||extraKeys.push(key);let pairs=[];for(let key of shapeKeys){let keyValidator=shape[key],value=ctx.data[key];pairs.push({key:{status:"valid",value:key},value:keyValidator._parse(new ParseInputLazyPath(ctx,value,ctx.path,key)),alwaysSet:key in ctx.data})}if(this._def.catchall instanceof ZodNever){let unknownKeys=this._def.unknownKeys;if(unknownKeys==="passthrough")for(let key of extraKeys)pairs.push({key:{status:"valid",value:key},value:{status:"valid",value:ctx.data[key]}});else if(unknownKeys==="strict")extraKeys.length>0&&(addIssueToContext(ctx,{code:ZodIssueCode.unrecognized_keys,keys:extraKeys}),status.dirty());else if(unknownKeys!=="strip")throw new Error("Internal ZodObject error: invalid unknownKeys value.")}else{let catchall=this._def.catchall;for(let key of extraKeys){let value=ctx.data[key];pairs.push({key:{status:"valid",value:key},value:catchall._parse(new ParseInputLazyPath(ctx,value,ctx.path,key)),alwaysSet:key in ctx.data})}}return ctx.common.async?Promise.resolve().then(async()=>{let syncPairs=[];for(let pair of pairs){let key=await pair.key,value=await pair.value;syncPairs.push({key,value,alwaysSet:pair.alwaysSet})}return syncPairs}).then(syncPairs=>ParseStatus.mergeObjectSync(status,syncPairs)):ParseStatus.mergeObjectSync(status,pairs)}get shape(){return this._def.shape()}strict(message){return errorUtil.errToObj,new _ZodObject({...this._def,unknownKeys:"strict",...message!==void 0?{errorMap:(issue,ctx)=>{var _a,_b,_c,_d;let defaultError=(_c=(_b=(_a=this._def).errorMap)===null||_b===void 0?void 0:_b.call(_a,issue,ctx).message)!==null&&_c!==void 0?_c:ctx.defaultError;return issue.code==="unrecognized_keys"?{message:(_d=errorUtil.errToObj(message).message)!==null&&_d!==void 0?_d:defaultError}:{message:defaultError}}}:{}})}strip(){return new _ZodObject({...this._def,unknownKeys:"strip"})}passthrough(){return new _ZodObject({...this._def,unknownKeys:"passthrough"})}extend(augmentation){return new _ZodObject({...this._def,shape:()=>({...this._def.shape(),...augmentation})})}merge(merging){return new _ZodObject({unknownKeys:merging._def.unknownKeys,catchall:merging._def.catchall,shape:()=>({...this._def.shape(),...merging._def.shape()}),typeName:ZodFirstPartyTypeKind.ZodObject})}setKey(key,schema){return this.augment({[key]:schema})}catchall(index){return new _ZodObject({...this._def,catchall:index})}pick(mask){let shape={};return util.objectKeys(mask).forEach(key=>{mask[key]&&this.shape[key]&&(shape[key]=this.shape[key])}),new _ZodObject({...this._def,shape:()=>shape})}omit(mask){let shape={};return util.objectKeys(this.shape).forEach(key=>{mask[key]||(shape[key]=this.shape[key])}),new _ZodObject({...this._def,shape:()=>shape})}deepPartial(){return deepPartialify(this)}partial(mask){let newShape={};return util.objectKeys(this.shape).forEach(key=>{let fieldSchema=this.shape[key];mask&&!mask[key]?newShape[key]=fieldSchema:newShape[key]=fieldSchema.optional()}),new _ZodObject({...this._def,shape:()=>newShape})}required(mask){let newShape={};return util.objectKeys(this.shape).forEach(key=>{if(mask&&!mask[key])newShape[key]=this.shape[key];else{let newField=this.shape[key];for(;newField instanceof ZodOptional;)newField=newField._def.innerType;newShape[key]=newField}}),new _ZodObject({...this._def,shape:()=>newShape})}keyof(){return createZodEnum(util.objectKeys(this.shape))}};ZodObject.create=(shape,params)=>new ZodObject({shape:()=>shape,unknownKeys:"strip",catchall:ZodNever.create(),typeName:ZodFirstPartyTypeKind.ZodObject,...processCreateParams(params)});ZodObject.strictCreate=(shape,params)=>new ZodObject({shape:()=>shape,unknownKeys:"strict",catchall:ZodNever.create(),typeName:ZodFirstPartyTypeKind.ZodObject,...processCreateParams(params)});ZodObject.lazycreate=(shape,params)=>new ZodObject({shape,unknownKeys:"strip",catchall:ZodNever.create(),typeName:ZodFirstPartyTypeKind.ZodObject,...processCreateParams(params)});var ZodUnion=class extends ZodType{static{__name(this,"ZodUnion")}_parse(input){let{ctx}=this._processInputParams(input),options=this._def.options;function handleResults(results){for(let result of results)if(result.result.status==="valid")return result.result;for(let result of results)if(result.result.status==="dirty")return ctx.common.issues.push(...result.ctx.common.issues),result.result;let unionErrors=results.map(result=>new ZodError(result.ctx.common.issues));return addIssueToContext(ctx,{code:ZodIssueCode.invalid_union,unionErrors}),INVALID}if(__name(handleResults,"handleResults"),ctx.common.async)return Promise.all(options.map(async option=>{let childCtx={...ctx,common:{...ctx.common,issues:[]},parent:null};return{result:await option._parseAsync({data:ctx.data,path:ctx.path,parent:childCtx}),ctx:childCtx}})).then(handleResults);{let dirty,issues=[];for(let option of options){let childCtx={...ctx,common:{...ctx.common,issues:[]},parent:null},result=option._parseSync({data:ctx.data,path:ctx.path,parent:childCtx});if(result.status==="valid")return result;result.status==="dirty"&&!dirty&&(dirty={result,ctx:childCtx}),childCtx.common.issues.length&&issues.push(childCtx.common.issues)}if(dirty)return ctx.common.issues.push(...dirty.ctx.common.issues),dirty.result;let unionErrors=issues.map(issues2=>new ZodError(issues2));return addIssueToContext(ctx,{code:ZodIssueCode.invalid_union,unionErrors}),INVALID}}get options(){return this._def.options}};ZodUnion.create=(types,params)=>new ZodUnion({options:types,typeName:ZodFirstPartyTypeKind.ZodUnion,...processCreateParams(params)});var getDiscriminator=__name(type2=>type2 instanceof ZodLazy?getDiscriminator(type2.schema):type2 instanceof ZodEffects?getDiscriminator(type2.innerType()):type2 instanceof ZodLiteral?[type2.value]:type2 instanceof ZodEnum?type2.options:type2 instanceof ZodNativeEnum?util.objectValues(type2.enum):type2 instanceof ZodDefault?getDiscriminator(type2._def.innerType):type2 instanceof ZodUndefined?[void 0]:type2 instanceof ZodNull?[null]:type2 instanceof ZodOptional?[void 0,...getDiscriminator(type2.unwrap())]:type2 instanceof ZodNullable?[null,...getDiscriminator(type2.unwrap())]:type2 instanceof ZodBranded||type2 instanceof ZodReadonly?getDiscriminator(type2.unwrap()):type2 instanceof ZodCatch?getDiscriminator(type2._def.innerType):[],"getDiscriminator"),ZodDiscriminatedUnion=class _ZodDiscriminatedUnion extends ZodType{static{__name(this,"ZodDiscriminatedUnion")}_parse(input){let{ctx}=this._processInputParams(input);if(ctx.parsedType!==ZodParsedType.object)return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.object,received:ctx.parsedType}),INVALID;let discriminator=this.discriminator,discriminatorValue=ctx.data[discriminator],option=this.optionsMap.get(discriminatorValue);return option?ctx.common.async?option._parseAsync({data:ctx.data,path:ctx.path,parent:ctx}):option._parseSync({data:ctx.data,path:ctx.path,parent:ctx}):(addIssueToContext(ctx,{code:ZodIssueCode.invalid_union_discriminator,options:Array.from(this.optionsMap.keys()),path:[discriminator]}),INVALID)}get discriminator(){return this._def.discriminator}get options(){return this._def.options}get optionsMap(){return this._def.optionsMap}static create(discriminator,options,params){let optionsMap=new Map;for(let type2 of options){let discriminatorValues=getDiscriminator(type2.shape[discriminator]);if(!discriminatorValues.length)throw new Error(`A discriminator value for key \`${discriminator}\` could not be extracted from all schema options`);for(let value of discriminatorValues){if(optionsMap.has(value))throw new Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);optionsMap.set(value,type2)}}return new _ZodDiscriminatedUnion({typeName:ZodFirstPartyTypeKind.ZodDiscriminatedUnion,discriminator,options,optionsMap,...processCreateParams(params)})}};function mergeValues(a,b){let aType=getParsedType(a),bType=getParsedType(b);if(a===b)return{valid:!0,data:a};if(aType===ZodParsedType.object&&bType===ZodParsedType.object){let bKeys=util.objectKeys(b),sharedKeys=util.objectKeys(a).filter(key=>bKeys.indexOf(key)!==-1),newObj={...a,...b};for(let key of sharedKeys){let sharedValue=mergeValues(a[key],b[key]);if(!sharedValue.valid)return{valid:!1};newObj[key]=sharedValue.data}return{valid:!0,data:newObj}}else if(aType===ZodParsedType.array&&bType===ZodParsedType.array){if(a.length!==b.length)return{valid:!1};let newArray=[];for(let index=0;index<a.length;index++){let itemA=a[index],itemB=b[index],sharedValue=mergeValues(itemA,itemB);if(!sharedValue.valid)return{valid:!1};newArray.push(sharedValue.data)}return{valid:!0,data:newArray}}else return aType===ZodParsedType.date&&bType===ZodParsedType.date&&+a==+b?{valid:!0,data:a}:{valid:!1}}__name(mergeValues,"mergeValues");var ZodIntersection=class extends ZodType{static{__name(this,"ZodIntersection")}_parse(input){let{status,ctx}=this._processInputParams(input),handleParsed=__name((parsedLeft,parsedRight)=>{if(isAborted(parsedLeft)||isAborted(parsedRight))return INVALID;let merged=mergeValues(parsedLeft.value,parsedRight.value);return merged.valid?((isDirty(parsedLeft)||isDirty(parsedRight))&&status.dirty(),{status:status.value,value:merged.data}):(addIssueToContext(ctx,{code:ZodIssueCode.invalid_intersection_types}),INVALID)},"handleParsed");return ctx.common.async?Promise.all([this._def.left._parseAsync({data:ctx.data,path:ctx.path,parent:ctx}),this._def.right._parseAsync({data:ctx.data,path:ctx.path,parent:ctx})]).then(([left,right])=>handleParsed(left,right)):handleParsed(this._def.left._parseSync({data:ctx.data,path:ctx.path,parent:ctx}),this._def.right._parseSync({data:ctx.data,path:ctx.path,parent:ctx}))}};ZodIntersection.create=(left,right,params)=>new ZodIntersection({left,right,typeName:ZodFirstPartyTypeKind.ZodIntersection,...processCreateParams(params)});var ZodTuple=class _ZodTuple extends ZodType{static{__name(this,"ZodTuple")}_parse(input){let{status,ctx}=this._processInputParams(input);if(ctx.parsedType!==ZodParsedType.array)return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.array,received:ctx.parsedType}),INVALID;if(ctx.data.length<this._def.items.length)return addIssueToContext(ctx,{code:ZodIssueCode.too_small,minimum:this._def.items.length,inclusive:!0,exact:!1,type:"array"}),INVALID;!this._def.rest&&ctx.data.length>this._def.items.length&&(addIssueToContext(ctx,{code:ZodIssueCode.too_big,maximum:this._def.items.length,inclusive:!0,exact:!1,type:"array"}),status.dirty());let items=[...ctx.data].map((item,itemIndex)=>{let schema=this._def.items[itemIndex]||this._def.rest;return schema?schema._parse(new ParseInputLazyPath(ctx,item,ctx.path,itemIndex)):null}).filter(x=>!!x);return ctx.common.async?Promise.all(items).then(results=>ParseStatus.mergeArray(status,results)):ParseStatus.mergeArray(status,items)}get items(){return this._def.items}rest(rest){return new _ZodTuple({...this._def,rest})}};ZodTuple.create=(schemas,params)=>{if(!Array.isArray(schemas))throw new Error("You must pass an array of schemas to z.tuple([ ... ])");return new ZodTuple({items:schemas,typeName:ZodFirstPartyTypeKind.ZodTuple,rest:null,...processCreateParams(params)})};var ZodRecord=class _ZodRecord extends ZodType{static{__name(this,"ZodRecord")}get keySchema(){return this._def.keyType}get valueSchema(){return this._def.valueType}_parse(input){let{status,ctx}=this._processInputParams(input);if(ctx.parsedType!==ZodParsedType.object)return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.object,received:ctx.parsedType}),INVALID;let pairs=[],keyType=this._def.keyType,valueType=this._def.valueType;for(let key in ctx.data)pairs.push({key:keyType._parse(new ParseInputLazyPath(ctx,key,ctx.path,key)),value:valueType._parse(new ParseInputLazyPath(ctx,ctx.data[key],ctx.path,key)),alwaysSet:key in ctx.data});return ctx.common.async?ParseStatus.mergeObjectAsync(status,pairs):ParseStatus.mergeObjectSync(status,pairs)}get element(){return this._def.valueType}static create(first,second,third){return second instanceof ZodType?new _ZodRecord({keyType:first,valueType:second,typeName:ZodFirstPartyTypeKind.ZodRecord,...processCreateParams(third)}):new _ZodRecord({keyType:ZodString.create(),valueType:first,typeName:ZodFirstPartyTypeKind.ZodRecord,...processCreateParams(second)})}},ZodMap=class extends ZodType{static{__name(this,"ZodMap")}get keySchema(){return this._def.keyType}get valueSchema(){return this._def.valueType}_parse(input){let{status,ctx}=this._processInputParams(input);if(ctx.parsedType!==ZodParsedType.map)return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.map,received:ctx.parsedType}),INVALID;let keyType=this._def.keyType,valueType=this._def.valueType,pairs=[...ctx.data.entries()].map(([key,value],index)=>({key:keyType._parse(new ParseInputLazyPath(ctx,key,ctx.path,[index,"key"])),value:valueType._parse(new ParseInputLazyPath(ctx,value,ctx.path,[index,"value"]))}));if(ctx.common.async){let finalMap=new Map;return Promise.resolve().then(async()=>{for(let pair of pairs){let key=await pair.key,value=await pair.value;if(key.status==="aborted"||value.status==="aborted")return INVALID;(key.status==="dirty"||value.status==="dirty")&&status.dirty(),finalMap.set(key.value,value.value)}return{status:status.value,value:finalMap}})}else{let finalMap=new Map;for(let pair of pairs){let key=pair.key,value=pair.value;if(key.status==="aborted"||value.status==="aborted")return INVALID;(key.status==="dirty"||value.status==="dirty")&&status.dirty(),finalMap.set(key.value,value.value)}return{status:status.value,value:finalMap}}}};ZodMap.create=(keyType,valueType,params)=>new ZodMap({valueType,keyType,typeName:ZodFirstPartyTypeKind.ZodMap,...processCreateParams(params)});var ZodSet=class _ZodSet extends ZodType{static{__name(this,"ZodSet")}_parse(input){let{status,ctx}=this._processInputParams(input);if(ctx.parsedType!==ZodParsedType.set)return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.set,received:ctx.parsedType}),INVALID;let def=this._def;def.minSize!==null&&ctx.data.size<def.minSize.value&&(addIssueToContext(ctx,{code:ZodIssueCode.too_small,minimum:def.minSize.value,type:"set",inclusive:!0,exact:!1,message:def.minSize.message}),status.dirty()),def.maxSize!==null&&ctx.data.size>def.maxSize.value&&(addIssueToContext(ctx,{code:ZodIssueCode.too_big,maximum:def.maxSize.value,type:"set",inclusive:!0,exact:!1,message:def.maxSize.message}),status.dirty());let valueType=this._def.valueType;function finalizeSet(elements2){let parsedSet=new Set;for(let element of elements2){if(element.status==="aborted")return INVALID;element.status==="dirty"&&status.dirty(),parsedSet.add(element.value)}return{status:status.value,value:parsedSet}}__name(finalizeSet,"finalizeSet");let elements=[...ctx.data.values()].map((item,i)=>valueType._parse(new ParseInputLazyPath(ctx,item,ctx.path,i)));return ctx.common.async?Promise.all(elements).then(elements2=>finalizeSet(elements2)):finalizeSet(elements)}min(minSize,message){return new _ZodSet({...this._def,minSize:{value:minSize,message:errorUtil.toString(message)}})}max(maxSize,message){return new _ZodSet({...this._def,maxSize:{value:maxSize,message:errorUtil.toString(message)}})}size(size,message){return this.min(size,message).max(size,message)}nonempty(message){return this.min(1,message)}};ZodSet.create=(valueType,params)=>new ZodSet({valueType,minSize:null,maxSize:null,typeName:ZodFirstPartyTypeKind.ZodSet,...processCreateParams(params)});var ZodFunction=class _ZodFunction extends ZodType{static{__name(this,"ZodFunction")}constructor(){super(...arguments),this.validate=this.implement}_parse(input){let{ctx}=this._processInputParams(input);if(ctx.parsedType!==ZodParsedType.function)return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.function,received:ctx.parsedType}),INVALID;function makeArgsIssue(args,error){return makeIssue({data:args,path:ctx.path,errorMaps:[ctx.common.contextualErrorMap,ctx.schemaErrorMap,getErrorMap(),errorMap].filter(x=>!!x),issueData:{code:ZodIssueCode.invalid_arguments,argumentsError:error}})}__name(makeArgsIssue,"makeArgsIssue");function makeReturnsIssue(returns,error){return makeIssue({data:returns,path:ctx.path,errorMaps:[ctx.common.contextualErrorMap,ctx.schemaErrorMap,getErrorMap(),errorMap].filter(x=>!!x),issueData:{code:ZodIssueCode.invalid_return_type,returnTypeError:error}})}__name(makeReturnsIssue,"makeReturnsIssue");let params={errorMap:ctx.common.contextualErrorMap},fn=ctx.data;if(this._def.returns instanceof ZodPromise){let me=this;return OK(async function(...args){let error=new ZodError([]),parsedArgs=await me._def.args.parseAsync(args,params).catch(e=>{throw error.addIssue(makeArgsIssue(args,e)),error}),result=await Reflect.apply(fn,this,parsedArgs);return await me._def.returns._def.type.parseAsync(result,params).catch(e=>{throw error.addIssue(makeReturnsIssue(result,e)),error})})}else{let me=this;return OK(function(...args){let parsedArgs=me._def.args.safeParse(args,params);if(!parsedArgs.success)throw new ZodError([makeArgsIssue(args,parsedArgs.error)]);let result=Reflect.apply(fn,this,parsedArgs.data),parsedReturns=me._def.returns.safeParse(result,params);if(!parsedReturns.success)throw new ZodError([makeReturnsIssue(result,parsedReturns.error)]);return parsedReturns.data})}}parameters(){return this._def.args}returnType(){return this._def.returns}args(...items){return new _ZodFunction({...this._def,args:ZodTuple.create(items).rest(ZodUnknown.create())})}returns(returnType){return new _ZodFunction({...this._def,returns:returnType})}implement(func){return this.parse(func)}strictImplement(func){return this.parse(func)}static create(args,returns,params){return new _ZodFunction({args:args||ZodTuple.create([]).rest(ZodUnknown.create()),returns:returns||ZodUnknown.create(),typeName:ZodFirstPartyTypeKind.ZodFunction,...processCreateParams(params)})}},ZodLazy=class extends ZodType{static{__name(this,"ZodLazy")}get schema(){return this._def.getter()}_parse(input){let{ctx}=this._processInputParams(input);return this._def.getter()._parse({data:ctx.data,path:ctx.path,parent:ctx})}};ZodLazy.create=(getter,params)=>new ZodLazy({getter,typeName:ZodFirstPartyTypeKind.ZodLazy,...processCreateParams(params)});var ZodLiteral=class extends ZodType{static{__name(this,"ZodLiteral")}_parse(input){if(input.data!==this._def.value){let ctx=this._getOrReturnCtx(input);return addIssueToContext(ctx,{received:ctx.data,code:ZodIssueCode.invalid_literal,expected:this._def.value}),INVALID}return{status:"valid",value:input.data}}get value(){return this._def.value}};ZodLiteral.create=(value,params)=>new ZodLiteral({value,typeName:ZodFirstPartyTypeKind.ZodLiteral,...processCreateParams(params)});function createZodEnum(values,params){return new ZodEnum({values,typeName:ZodFirstPartyTypeKind.ZodEnum,...processCreateParams(params)})}__name(createZodEnum,"createZodEnum");var ZodEnum=class _ZodEnum extends ZodType{static{__name(this,"ZodEnum")}constructor(){super(...arguments),_ZodEnum_cache.set(this,void 0)}_parse(input){if(typeof input.data!="string"){let ctx=this._getOrReturnCtx(input),expectedValues=this._def.values;return addIssueToContext(ctx,{expected:util.joinValues(expectedValues),received:ctx.parsedType,code:ZodIssueCode.invalid_type}),INVALID}if(__classPrivateFieldGet(this,_ZodEnum_cache,"f")||__classPrivateFieldSet(this,_ZodEnum_cache,new Set(this._def.values),"f"),!__classPrivateFieldGet(this,_ZodEnum_cache,"f").has(input.data)){let ctx=this._getOrReturnCtx(input),expectedValues=this._def.values;return addIssueToContext(ctx,{received:ctx.data,code:ZodIssueCode.invalid_enum_value,options:expectedValues}),INVALID}return OK(input.data)}get options(){return this._def.values}get enum(){let enumValues={};for(let val of this._def.values)enumValues[val]=val;return enumValues}get Values(){let enumValues={};for(let val of this._def.values)enumValues[val]=val;return enumValues}get Enum(){let enumValues={};for(let val of this._def.values)enumValues[val]=val;return enumValues}extract(values,newDef=this._def){return _ZodEnum.create(values,{...this._def,...newDef})}exclude(values,newDef=this._def){return _ZodEnum.create(this.options.filter(opt=>!values.includes(opt)),{...this._def,...newDef})}};_ZodEnum_cache=new WeakMap;ZodEnum.create=createZodEnum;var ZodNativeEnum=class extends ZodType{static{__name(this,"ZodNativeEnum")}constructor(){super(...arguments),_ZodNativeEnum_cache.set(this,void 0)}_parse(input){let nativeEnumValues=util.getValidEnumValues(this._def.values),ctx=this._getOrReturnCtx(input);if(ctx.parsedType!==ZodParsedType.string&&ctx.parsedType!==ZodParsedType.number){let expectedValues=util.objectValues(nativeEnumValues);return addIssueToContext(ctx,{expected:util.joinValues(expectedValues),received:ctx.parsedType,code:ZodIssueCode.invalid_type}),INVALID}if(__classPrivateFieldGet(this,_ZodNativeEnum_cache,"f")||__classPrivateFieldSet(this,_ZodNativeEnum_cache,new Set(util.getValidEnumValues(this._def.values)),"f"),!__classPrivateFieldGet(this,_ZodNativeEnum_cache,"f").has(input.data)){let expectedValues=util.objectValues(nativeEnumValues);return addIssueToContext(ctx,{received:ctx.data,code:ZodIssueCode.invalid_enum_value,options:expectedValues}),INVALID}return OK(input.data)}get enum(){return this._def.values}};_ZodNativeEnum_cache=new WeakMap;ZodNativeEnum.create=(values,params)=>new ZodNativeEnum({values,typeName:ZodFirstPartyTypeKind.ZodNativeEnum,...processCreateParams(params)});var ZodPromise=class extends ZodType{static{__name(this,"ZodPromise")}unwrap(){return this._def.type}_parse(input){let{ctx}=this._processInputParams(input);if(ctx.parsedType!==ZodParsedType.promise&&ctx.common.async===!1)return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.promise,received:ctx.parsedType}),INVALID;let promisified=ctx.parsedType===ZodParsedType.promise?ctx.data:Promise.resolve(ctx.data);return OK(promisified.then(data=>this._def.type.parseAsync(data,{path:ctx.path,errorMap:ctx.common.contextualErrorMap})))}};ZodPromise.create=(schema,params)=>new ZodPromise({type:schema,typeName:ZodFirstPartyTypeKind.ZodPromise,...processCreateParams(params)});var ZodEffects=class extends ZodType{static{__name(this,"ZodEffects")}innerType(){return this._def.schema}sourceType(){return this._def.schema._def.typeName===ZodFirstPartyTypeKind.ZodEffects?this._def.schema.sourceType():this._def.schema}_parse(input){let{status,ctx}=this._processInputParams(input),effect=this._def.effect||null,checkCtx={addIssue:arg=>{addIssueToContext(ctx,arg),arg.fatal?status.abort():status.dirty()},get path(){return ctx.path}};if(checkCtx.addIssue=checkCtx.addIssue.bind(checkCtx),effect.type==="preprocess"){let processed=effect.transform(ctx.data,checkCtx);if(ctx.common.async)return Promise.resolve(processed).then(async processed2=>{if(status.value==="aborted")return INVALID;let result=await this._def.schema._parseAsync({data:processed2,path:ctx.path,parent:ctx});return result.status==="aborted"?INVALID:result.status==="dirty"||status.value==="dirty"?DIRTY(result.value):result});{if(status.value==="aborted")return INVALID;let result=this._def.schema._parseSync({data:processed,path:ctx.path,parent:ctx});return result.status==="aborted"?INVALID:result.status==="dirty"||status.value==="dirty"?DIRTY(result.value):result}}if(effect.type==="refinement"){let executeRefinement=__name(acc=>{let result=effect.refinement(acc,checkCtx);if(ctx.common.async)return Promise.resolve(result);if(result instanceof Promise)throw new Error("Async refinement encountered during synchronous parse operation. Use .parseAsync instead.");return acc},"executeRefinement");if(ctx.common.async===!1){let inner=this._def.schema._parseSync({data:ctx.data,path:ctx.path,parent:ctx});return inner.status==="aborted"?INVALID:(inner.status==="dirty"&&status.dirty(),executeRefinement(inner.value),{status:status.value,value:inner.value})}else return this._def.schema._parseAsync({data:ctx.data,path:ctx.path,parent:ctx}).then(inner=>inner.status==="aborted"?INVALID:(inner.status==="dirty"&&status.dirty(),executeRefinement(inner.value).then(()=>({status:status.value,value:inner.value}))))}if(effect.type==="transform")if(ctx.common.async===!1){let base=this._def.schema._parseSync({data:ctx.data,path:ctx.path,parent:ctx});if(!isValid(base))return base;let result=effect.transform(base.value,checkCtx);if(result instanceof Promise)throw new Error("Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.");return{status:status.value,value:result}}else return this._def.schema._parseAsync({data:ctx.data,path:ctx.path,parent:ctx}).then(base=>isValid(base)?Promise.resolve(effect.transform(base.value,checkCtx)).then(result=>({status:status.value,value:result})):base);util.assertNever(effect)}};ZodEffects.create=(schema,effect,params)=>new ZodEffects({schema,typeName:ZodFirstPartyTypeKind.ZodEffects,effect,...processCreateParams(params)});ZodEffects.createWithPreprocess=(preprocess,schema,params)=>new ZodEffects({schema,effect:{type:"preprocess",transform:preprocess},typeName:ZodFirstPartyTypeKind.ZodEffects,...processCreateParams(params)});var ZodOptional=class extends ZodType{static{__name(this,"ZodOptional")}_parse(input){return this._getType(input)===ZodParsedType.undefined?OK(void 0):this._def.innerType._parse(input)}unwrap(){return this._def.innerType}};ZodOptional.create=(type2,params)=>new ZodOptional({innerType:type2,typeName:ZodFirstPartyTypeKind.ZodOptional,...processCreateParams(params)});var ZodNullable=class extends ZodType{static{__name(this,"ZodNullable")}_parse(input){return this._getType(input)===ZodParsedType.null?OK(null):this._def.innerType._parse(input)}unwrap(){return this._def.innerType}};ZodNullable.create=(type2,params)=>new ZodNullable({innerType:type2,typeName:ZodFirstPartyTypeKind.ZodNullable,...processCreateParams(params)});var ZodDefault=class extends ZodType{static{__name(this,"ZodDefault")}_parse(input){let{ctx}=this._processInputParams(input),data=ctx.data;return ctx.parsedType===ZodParsedType.undefined&&(data=this._def.defaultValue()),this._def.innerType._parse({data,path:ctx.path,parent:ctx})}removeDefault(){return this._def.innerType}};ZodDefault.create=(type2,params)=>new ZodDefault({innerType:type2,typeName:ZodFirstPartyTypeKind.ZodDefault,defaultValue:typeof params.default=="function"?params.default:()=>params.default,...processCreateParams(params)});var ZodCatch=class extends ZodType{static{__name(this,"ZodCatch")}_parse(input){let{ctx}=this._processInputParams(input),newCtx={...ctx,common:{...ctx.common,issues:[]}},result=this._def.innerType._parse({data:newCtx.data,path:newCtx.path,parent:{...newCtx}});return isAsync(result)?result.then(result2=>({status:"valid",value:result2.status==="valid"?result2.value:this._def.catchValue({get error(){return new ZodError(newCtx.common.issues)},input:newCtx.data})})):{status:"valid",value:result.status==="valid"?result.value:this._def.catchValue({get error(){return new ZodError(newCtx.common.issues)},input:newCtx.data})}}removeCatch(){return this._def.innerType}};ZodCatch.create=(type2,params)=>new ZodCatch({innerType:type2,typeName:ZodFirstPartyTypeKind.ZodCatch,catchValue:typeof params.catch=="function"?params.catch:()=>params.catch,...processCreateParams(params)});var ZodNaN=class extends ZodType{static{__name(this,"ZodNaN")}_parse(input){if(this._getType(input)!==ZodParsedType.nan){let ctx=this._getOrReturnCtx(input);return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.nan,received:ctx.parsedType}),INVALID}return{status:"valid",value:input.data}}};ZodNaN.create=params=>new ZodNaN({typeName:ZodFirstPartyTypeKind.ZodNaN,...processCreateParams(params)});var BRAND=Symbol("zod_brand"),ZodBranded=class extends ZodType{static{__name(this,"ZodBranded")}_parse(input){let{ctx}=this._processInputParams(input),data=ctx.data;return this._def.type._parse({data,path:ctx.path,parent:ctx})}unwrap(){return this._def.type}},ZodPipeline=class _ZodPipeline extends ZodType{static{__name(this,"ZodPipeline")}_parse(input){let{status,ctx}=this._processInputParams(input);if(ctx.common.async)return __name(async()=>{let inResult=await this._def.in._parseAsync({data:ctx.data,path:ctx.path,parent:ctx});return inResult.status==="aborted"?INVALID:inResult.status==="dirty"?(status.dirty(),DIRTY(inResult.value)):this._def.out._parseAsync({data:inResult.value,path:ctx.path,parent:ctx})},"handleAsync")();{let inResult=this._def.in._parseSync({data:ctx.data,path:ctx.path,parent:ctx});return inResult.status==="aborted"?INVALID:inResult.status==="dirty"?(status.dirty(),{status:"dirty",value:inResult.value}):this._def.out._parseSync({data:inResult.value,path:ctx.path,parent:ctx})}}static create(a,b){return new _ZodPipeline({in:a,out:b,typeName:ZodFirstPartyTypeKind.ZodPipeline})}},ZodReadonly=class extends ZodType{static{__name(this,"ZodReadonly")}_parse(input){let result=this._def.innerType._parse(input),freeze=__name(data=>(isValid(data)&&(data.value=Object.freeze(data.value)),data),"freeze");return isAsync(result)?result.then(data=>freeze(data)):freeze(result)}unwrap(){return this._def.innerType}};ZodReadonly.create=(type2,params)=>new ZodReadonly({innerType:type2,typeName:ZodFirstPartyTypeKind.ZodReadonly,...processCreateParams(params)});function custom(check,params={},fatal){return check?ZodAny.create().superRefine((data,ctx)=>{var _a,_b;if(!check(data)){let p=typeof params=="function"?params(data):typeof params=="string"?{message:params}:params,_fatal=(_b=(_a=p.fatal)!==null&&_a!==void 0?_a:fatal)!==null&&_b!==void 0?_b:!0,p2=typeof p=="string"?{message:p}:p;ctx.addIssue({code:"custom",...p2,fatal:_fatal})}}):ZodAny.create()}__name(custom,"custom");var late={object:ZodObject.lazycreate},ZodFirstPartyTypeKind;(function(ZodFirstPartyTypeKind2){ZodFirstPartyTypeKind2.ZodString="ZodString",ZodFirstPartyTypeKind2.ZodNumber="ZodNumber",ZodFirstPartyTypeKind2.ZodNaN="ZodNaN",ZodFirstPartyTypeKind2.ZodBigInt="ZodBigInt",ZodFirstPartyTypeKind2.ZodBoolean="ZodBoolean",ZodFirstPartyTypeKind2.ZodDate="ZodDate",ZodFirstPartyTypeKind2.ZodSymbol="ZodSymbol",ZodFirstPartyTypeKind2.ZodUndefined="ZodUndefined",ZodFirstPartyTypeKind2.ZodNull="ZodNull",ZodFirstPartyTypeKind2.ZodAny="ZodAny",ZodFirstPartyTypeKind2.ZodUnknown="ZodUnknown",ZodFirstPartyTypeKind2.ZodNever="ZodNever",ZodFirstPartyTypeKind2.ZodVoid="ZodVoid",ZodFirstPartyTypeKind2.ZodArray="ZodArray",ZodFirstPartyTypeKind2.ZodObject="ZodObject",ZodFirstPartyTypeKind2.ZodUnion="ZodUnion",ZodFirstPartyTypeKind2.ZodDiscriminatedUnion="ZodDiscriminatedUnion",ZodFirstPartyTypeKind2.ZodIntersection="ZodIntersection",ZodFirstPartyTypeKind2.ZodTuple="ZodTuple",ZodFirstPartyTypeKind2.ZodRecord="ZodRecord",ZodFirstPartyTypeKind2.ZodMap="ZodMap",ZodFirstPartyTypeKind2.ZodSet="ZodSet",ZodFirstPartyTypeKind2.ZodFunction="ZodFunction",ZodFirstPartyTypeKind2.ZodLazy="ZodLazy",ZodFirstPartyTypeKind2.ZodLiteral="ZodLiteral",ZodFirstPartyTypeKind2.ZodEnum="ZodEnum",ZodFirstPartyTypeKind2.ZodEffects="ZodEffects",ZodFirstPartyTypeKind2.ZodNativeEnum="ZodNativeEnum",ZodFirstPartyTypeKind2.ZodOptional="ZodOptional",ZodFirstPartyTypeKind2.ZodNullable="ZodNullable",ZodFirstPartyTypeKind2.ZodDefault="ZodDefault",ZodFirstPartyTypeKind2.ZodCatch="ZodCatch",ZodFirstPartyTypeKind2.ZodPromise="ZodPromise",ZodFirstPartyTypeKind2.ZodBranded="ZodBranded",ZodFirstPartyTypeKind2.ZodPipeline="ZodPipeline",ZodFirstPartyTypeKind2.ZodReadonly="ZodReadonly"})(ZodFirstPartyTypeKind||(ZodFirstPartyTypeKind={}));var instanceOfType=__name((cls,params={message:`Input not instance of ${cls.name}`})=>custom(data=>data instanceof cls,params),"instanceOfType"),stringType=ZodString.create,numberType=ZodNumber.create,nanType=ZodNaN.create,bigIntType=ZodBigInt.create,booleanType=ZodBoolean.create,dateType=ZodDate.create,symbolType=ZodSymbol.create,undefinedType=ZodUndefined.create,nullType=ZodNull.create,anyType=ZodAny.create,unknownType=ZodUnknown.create,neverType=ZodNever.create,voidType=ZodVoid.create,arrayType=ZodArray.create,objectType=ZodObject.create,strictObjectType=ZodObject.strictCreate,unionType=ZodUnion.create,discriminatedUnionType=ZodDiscriminatedUnion.create,intersectionType=ZodIntersection.create,tupleType=ZodTuple.create,recordType=ZodRecord.create,mapType=ZodMap.create,setType=ZodSet.create,functionType=ZodFunction.create,lazyType=ZodLazy.create,literalType=ZodLiteral.create,enumType=ZodEnum.create,nativeEnumType=ZodNativeEnum.create,promiseType=ZodPromise.create,effectsType=ZodEffects.create,optionalType=ZodOptional.create,nullableType=ZodNullable.create,preprocessType=ZodEffects.createWithPreprocess,pipelineType=ZodPipeline.create,ostring=__name(()=>stringType().optional(),"ostring"),onumber=__name(()=>numberType().optional(),"onumber"),oboolean=__name(()=>booleanType().optional(),"oboolean"),coerce={string:arg=>ZodString.create({...arg,coerce:!0}),number:arg=>ZodNumber.create({...arg,coerce:!0}),boolean:arg=>ZodBoolean.create({...arg,coerce:!0}),bigint:arg=>ZodBigInt.create({...arg,coerce:!0}),date:arg=>ZodDate.create({...arg,coerce:!0})},NEVER=INVALID,z=Object.freeze({__proto__:null,defaultErrorMap:errorMap,setErrorMap,getErrorMap,makeIssue,EMPTY_PATH,addIssueToContext,ParseStatus,INVALID,DIRTY,OK,isAborted,isDirty,isValid,isAsync,get util(){return util},get objectUtil(){return objectUtil},ZodParsedType,getParsedType,ZodType,datetimeRegex,ZodString,ZodNumber,ZodBigInt,ZodBoolean,ZodDate,ZodSymbol,ZodUndefined,ZodNull,ZodAny,ZodUnknown,ZodNever,ZodVoid,ZodArray,ZodObject,ZodUnion,ZodDiscriminatedUnion,ZodIntersection,ZodTuple,ZodRecord,ZodMap,ZodSet,ZodFunction,ZodLazy,ZodLiteral,ZodEnum,ZodNativeEnum,ZodPromise,ZodEffects,ZodTransformer:ZodEffects,ZodOptional,ZodNullable,ZodDefault,ZodCatch,ZodNaN,BRAND,ZodBranded,ZodPipeline,ZodReadonly,custom,Schema:ZodType,ZodSchema:ZodType,late,get ZodFirstPartyTypeKind(){return ZodFirstPartyTypeKind},coerce,any:anyType,array:arrayType,bigint:bigIntType,boolean:booleanType,date:dateType,discriminatedUnion:discriminatedUnionType,effect:effectsType,enum:enumType,function:functionType,instanceof:instanceOfType,intersection:intersectionType,lazy:lazyType,literal:literalType,map:mapType,nan:nanType,nativeEnum:nativeEnumType,never:neverType,null:nullType,nullable:nullableType,number:numberType,object:objectType,oboolean,onumber,optional:optionalType,ostring,pipeline:pipelineType,preprocess:preprocessType,promise:promiseType,record:recordType,set:setType,strictObject:strictObjectType,string:stringType,symbol:symbolType,transformer:effectsType,tuple:tupleType,undefined:undefinedType,union:unionType,unknown:unknownType,void:voidType,NEVER,ZodIssueCode,quotelessJson,ZodError});var spdxLicenseMap=new Map(Object.entries(spdx_default)),zChronoDate=z.preprocess(maybeDate=>maybeDate instanceof Date?maybeDate:parseDate(String(maybeDate)),z.date()),zAuthor=z.object({name:z.string(),url:z.string().url()}).strict(),zBlame=z.object({date:zChronoDate,author:zAuthor}).strict().pipe(z.object({date:z.date(),author:zAuthor})),zBlames=z.array(zBlame).nonempty().pipe(z.array(z.object({date:z.date(),author:zAuthor})).nonempty()),zPost=z.object({path:z.object({dir:z.string(),name:z.string()}),pkgJsonAbsPath:z.string(),author:zAuthor,earliest:z.optional(zChronoDate),isHome:z.optional(z.boolean()),isLinks:z.optional(z.boolean()),is404:z.optional(z.boolean()),isPost:z.optional(z.boolean()),lang:z.string(),latest:z.optional(zChronoDate),license:z.union([z.string().transform((val,ctx)=>{let license=spdxLicenseMap.get(val);return license||(ctx.addIssue({code:z.ZodIssueCode.custom,message:`${val} not one of ${JSON.stringify(Array.from(spdxLicenseMap.keys()))}`}),z.NEVER)}),z.object({name:z.string(),url:z.string().url()})]).pipe(z.object({name:z.string(),url:z.string().url()}).readonly()),links:z.union([z.record(z.string(),z.string().url()).transform(val=>new Map(Object.entries(val))),z.map(z.string(),z.string().url())]).pipe(z.map(z.string(),z.string().url())).readonly(),updated:z.optional(z.unknown()),published:z.optional(z.unknown()),site:z.string().url(),siteTitle:z.string(),socials:z.union([z.record(z.string(),z.string().url()).transform(val=>new Map(Object.entries(val))),z.map(z.string(),z.string().url())]).pipe(z.map(z.string(),z.string().url())).readonly(),tags:z.array(z.string()).default([]),theming:z.object({color:z.string()}),title:z.string()}).passthrough().transform(__name(async function(zBase){return{...zBase,defaultLang:zBase.lang,description:z.string().default(zBase.title).parse(zBase.description),earliest:zBase.earliest?zBase.earliest:await zChronoDate.parseAsync((await fs.stat(path.join(zBase.pkgJsonAbsPath,"package.json"))).ctime),frontmatterPath:path.relative(path.join(zBase.pkgJsonAbsPath,"dist","temp","gen-html"),path.join(zBase.path.dir,`${zBase.path.name}.toml`)),fullTitle:zBase.title===zBase.siteTitle?zBase.title:`${zBase.title} | ${zBase.siteTitle}`,fullUrlWIndexWExt:new URL(path.relative(path.join(zBase.pkgJsonAbsPath,"dist","temp","gen-html"),path.join(zBase.path.dir,`${zBase.path.name}.html`)),zBase.site),fullUrlWIndexWoExt:new URL(path.relative(path.join(zBase.pkgJsonAbsPath,"dist","temp","gen-html"),path.join(zBase.path.dir,zBase.path.name)),zBase.site),layoutPath:path.relative(path.join(zBase.pkgJsonAbsPath,"dist","temp","gen-html"),await findUp("index.vue",{cwd:zBase.path.dir,stopAt:zBase.pkgJsonAbsPath})),isHome:zBase.isHome??zBase.path.name==="index",isLinks:zBase.isLinks??zBase.path.name==="links",is404:zBase.is404??zBase.path.name==="404",lang:path.split(zBase.path.dir).find(pathSeg=>isLang(pathSeg))||zBase.lang,latest:zBase.latest?zBase.latest:new Date,mdxContent:await fs.readFileU(path.join(zBase.path.dir,`${zBase.path.name}.mdx`)),updated:await z.union([zChronoDate.transform(date=>[{date,author:zBase.author}]),zBlame.transform(obj=>[obj]),z.array(zChronoDate.transform(date=>({date,author:zBase.author}))).nonempty(),zBlames]).transform(updated=>updated.toSorted((a,b)=>a.date.getTime()-b.date.getTime())).readonly().catch([{date:await zChronoDate.parseAsync((await fs.stat(`${path.join(zBase.path.dir,zBase.path.name)}.mdx`)).mtime),author:zBase.author}]).parseAsync(zBase.updated),published:await z.union([zChronoDate.transform(date=>[{date,author:zBase.author}]),zBlame.transform(obj=>[obj]),z.array(zChronoDate.transform(date=>({date,author:zBase.author}))).nonempty(),zBlames]).transform(published=>published.toSorted((a,b)=>a.date.getTime()-b.date.getTime())).readonly().catch([{date:await zChronoDate.parseAsync((await fs.stat(`${path.join(zBase.path.dir,zBase.path.name)}.mdx`)).ctime),author:zBase.author}]).parseAsync(zBase.published),slugWIndexWExt:path.relative(path.join(zBase.pkgJsonAbsPath,"dist","temp","gen-html"),path.join(zBase.path.dir,`${zBase.path.name}.html`)),slugWIndexWoExt:path.relative(path.join(zBase.pkgJsonAbsPath,"dist","temp","gen-html"),path.join(zBase.path.dir,`${zBase.path.name}`)),siteBase:await tryCatchAsync(async()=>(await fs.access(path.join(zBase.pkgJsonAbsPath,"dist","temp","gen-html","index.mdx")),""),path.split(path.relative(path.join(zBase.pkgJsonAbsPath,"dist","temp","gen-html"),zBase.path.dir))[0])(null)}},"ensureDependents")).transform(__name(async function(z1){return{...z1,canonicalUrl:z1.fullUrlWIndexWoExt.pathname.endsWith("/index")?new URL(z1.fullUrlWIndexWoExt.pathname.slice(0,-6),z1.site):z1.fullUrlWIndexWoExt,frontmatterImportName:z1.frontmatterPath.replaceAll(".","ReplacedDot").replaceAll("/","ReplacedSlash").replaceAll("-","ReplacedHyphen"),layoutImportName:z1.layoutPath.replaceAll(".","ReplacedDot").replaceAll("/","ReplacedSlash").replaceAll("-","ReplacedHyphen"),isPost:z1.isPost??!(z1.isHome||z1.isLinks||z1.is404),postImportName:`${z1.slugWIndexWoExt}.mdx`.replaceAll(".","ReplacedDot").replaceAll("/","ReplacedSlash").replaceAll("-","ReplacedHyphen"),siteWithBase:z1.siteBase?new URL(z1.siteBase,z1.site):z1.site,slashSiteBase:z1.siteBase?`/${z1.siteBase}`:z1.siteBase,slug:z1.slugWIndexWoExt.endsWith("/index")?z1.slugWIndexWoExt.slice(0,-6):z1.slugWIndexWoExt,summary:z1.mdxContent.split(`

`).filter(ln=>ln).map(ln=>mdastToString(fromMarkdown(ln))).filter(ln=>ln).join(" ").slice(0,512).trim()}},"ensure2")).transform(__name(async function(z2){return{...z2,slashSiteBaseWSlash:z2.slashSiteBase?`${z2.slashSiteBase}/`:z2.slashSiteBase,slashSiteBaseWLang:z2.defaultLang===z2.lang?z2.slashSiteBase:`${z2.slashSiteBase}/${z2.lang}`}},"ensure3")).transform(__name(async function(z3){return{...z3,slashSiteBaseWLangWSlash:z3.slashSiteBaseWLang?`${z3.slashSiteBaseWLang}/`:z3.slashSiteBaseWLang}},"ensure4")).pipe(z.object({path:z.object({dir:z.string(),name:z.string()}).readonly(),pkgJsonAbsPath:z.string(),author:z.object({name:z.string(),url:z.string().url()}).readonly(),canonicalUrl:z.coerce.string().url(),defaultLang:z.string(),description:z.string(),earliest:z.date(),frontmatterImportName:z.string(),frontmatterPath:z.string(),fullTitle:z.string(),fullUrlWIndexWExt:z.coerce.string().url(),fullUrlWIndexWoExt:z.coerce.string().url(),isHome:z.boolean(),isLinks:z.boolean(),is404:z.boolean(),isPost:z.boolean(),lang:z.string(),latest:z.date(),layoutImportName:z.string(),layoutPath:z.string(),license:z.object({name:z.string(),url:z.string().url()}).readonly(),links:z.map(z.string(),z.string().url()).readonly(),mdxContent:z.string(),postImportName:z.string(),published:z.array(z.object({date:z.date(),author:z.object({name:z.string(),url:z.string().url()}).readonly()})).nonempty().readonly(),slashSiteBase:z.string(),slashSiteBaseWSlash:z.string(),slashSiteBaseWLang:z.string(),slashSiteBaseWLangWSlash:z.string(),site:z.coerce.string().url(),siteBase:z.string(),siteTitle:z.string(),siteWithBase:z.coerce.string().url(),slugWIndexWExt:z.string(),slugWIndexWoExt:z.string(),slug:z.string(),socials:z.map(z.string(),z.string().url()).readonly(),summary:z.string(),tags:z.array(z.string()),theming:z.object({color:z.string()}).readonly(),title:z.string(),updated:z.array(z.object({date:z.date(),author:z.object({name:z.string(),url:z.string().url()}).readonly()})).nonempty().readonly()})),src_default=zPost;export{src_default as default,zAuthor,zBlame,zBlames,zChronoDate};
