export type Assert<X, Y extends X> = Y;
export type AssertTrue<Y extends true> = Y;
export type AssertFalse<Y extends false> = Y;
export type AssertUndefined<Y extends undefined> = Y;
export type AssertNull<Y extends null> = Y;
export type AssertEmptyObject<Y extends Record<string, never>> = Y;
export type Assert0<Y extends 0> = Y;
export type Assert1<Y extends 1> = Y;
export type AssertNan<Y extends typeof Number.NaN> = Y;
export type AssertNegative1<Y extends -1> = Y;
export type AssertEmptyArray<Y extends never[]> = Y;
export type AssertNot<X, Y extends Exclude<any, X>> = Y;
